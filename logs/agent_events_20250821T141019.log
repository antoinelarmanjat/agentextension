[2025-08-21 16:10:22.871] 
[2025-08-21 16:10:22.871] +-----------------------------------------------------------------------------+
[2025-08-21 16:10:22.871] | ADK Web Server started                                                      |
[2025-08-21 16:10:22.871] |                                                                             |
[2025-08-21 16:10:22.871] | For local testing, access at http://localhost:5000.                         |
[2025-08-21 16:10:22.871] +-----------------------------------------------------------------------------+
[2025-08-21 16:10:22.871] 
[2025-08-21 16:10:25.095] INFO:     127.0.0.1:65329 - "GET / HTTP/1.1" 307 Temporary Redirect
[2025-08-21 16:10:25.318] INFO:     127.0.0.1:65329 - "GET /dev-ui/main-W7QZBYAR.js HTTP/1.1" 200 OK
[2025-08-21 16:10:25.419] INFO:     127.0.0.1:65329 - "GET /list-apps?relative_path=./ HTTP/1.1" 200 OK
[2025-08-21 16:10:40.202] INFO:     127.0.0.1:65330 - "POST /apps/travel_concierge/users/user/sessions HTTP/1.1" 200 OK
[2025-08-21 16:10:40.223] INFO:     127.0.0.1:65339 - "GET /apps/travel_concierge/eval_results HTTP/1.1" 200 OK
[2025-08-21 16:10:40.223] INFO:     127.0.0.1:65330 - "GET /apps/travel_concierge/eval_sets HTTP/1.1" 200 OK
[2025-08-21 16:10:40.256] INFO:     127.0.0.1:65330 - "GET /apps/travel_concierge/users/user/sessions HTTP/1.1" 200 OK
[2025-08-21 16:10:40.727] INFO:     127.0.0.1:65330 - "GET /apps/travel_concierge/users/user/sessions HTTP/1.1" 200 OK
[2025-08-21 16:10:53.992] INFO:     127.0.0.1:65342 - "POST /run_sse HTTP/1.1" 200 OK
[2025-08-21 16:11:05.904] 
[2025-08-21 16:11:05.904] Loading Initial State: {'state': {'user_profile': {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}, 'itinerary': {}, 'origin': '', 'destination': '', 'start_date': '', 'end_date': '', 'outbound_flight_selection': '', 'outbound_seat_number': '', 'return_flight_selection': '', 'return_seat_number': '', 'hotel_selection': '', 'room_selection': '', 'poi': '', 'itinerary_datetime': '', 'itinerary_start_date': '', 'itinerary_end_date': ''}}
[2025-08-21 16:11:05.904] 
[2025-08-21 16:11:05.904] INFO:     127.0.0.1:65342 - "GET /apps/travel_concierge/users/user/sessions/08612fba-f396-475a-bf88-12f920d16eba HTTP/1.1" 200 OK
[2025-08-21 16:11:05.906] INFO:     127.0.0.1:65364 - "GET /debug/trace/session/08612fba-f396-475a-bf88-12f920d16eba HTTP/1.1" 200 OK
[2025-08-21 16:15:58.316] INFO:     127.0.0.1:65469 - "POST /run_sse HTTP/1.1" 200 OK
[2025-08-21 16:16:10.672] INFO:     127.0.0.1:65469 - "GET /apps/travel_concierge/users/user/sessions/08612fba-f396-475a-bf88-12f920d16eba HTTP/1.1" 200 OK
[2025-08-21 16:16:10.674] INFO:     127.0.0.1:65483 - "GET /debug/trace/session/08612fba-f396-475a-bf88-12f920d16eba HTTP/1.1" 200 OK
[2025-08-21 16:38:31.293] 
[2025-08-21 16:38:31.293] +-----------------------------------------------------------------------------+
[2025-08-21 16:38:31.293] | ADK Web Server shutting down...                                             |
[2025-08-21 16:38:31.293] +-----------------------------------------------------------------------------+
[2025-08-21 16:38:31.293] 
.020626}
[2025-08-21 16:10:54.073][E] 2025-08-21 16:10:54,073 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:10:54.073][E] 2025-08-21 16:10:54,073 - DEBUG - google_llm.py:117 -
[2025-08-21 16:10:54.073][E] LLM Request:
[2025-08-21 16:10:54.073][E] -----------------------------------------------------------
[2025-08-21 16:10:54.073][E] System Instruction:
[2025-08-21 16:10:54.073][E] 
[2025-08-21 16:10:54.073][E] - You are a exclusive travel conceirge agent
[2025-08-21 16:10:54.073][E] - You help users to discover their dream vacation, planning for the vacation, book flights and hotels
[2025-08-21 16:10:54.074][E] - You want to gather a minimal information to help the user
[2025-08-21 16:10:54.074][E] - After every tool call, pretend you're showing the result to the user and keep your response limited to a phrase.
[2025-08-21 16:10:54.074][E] - Please use only the agents and tools to fulfill all user rquest
[2025-08-21 16:10:54.074][E] - If the user asks about general knowledge, vacation inspiration or things to do, transfer to the agent `inspiration_agent`
[2025-08-21 16:10:54.074][E] - If the user asks about finding flight deals, making seat selection, or lodging, transfer to the agent `planning_agent`
[2025-08-21 16:10:54.074][E] - If the user is ready to make the flight booking or process payments, transfer to the agent `booking_agent`
[2025-08-21 16:10:54.074][E] - Please use the context info below for any user preferences
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Current user:
[2025-08-21 16:10:54.074][E] <user_profile>
[2025-08-21 16:10:54.074][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:10:54.074][E] </user_profile>
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Trip phases:
[2025-08-21 16:10:54.074][E] If we have a non-empty itinerary, follow the following logic to deteermine a Trip phase:
[2025-08-21 16:10:54.074][E] - First focus on the start_date "" and the end_date "" of the itinerary.
[2025-08-21 16:10:54.074][E] - if "" is before the start date "" of the trip, we are in the "pre_trip" phase.
[2025-08-21 16:10:54.074][E] - if "" is between the start date "" and end date "" of the trip, we are in the "in_trip" phase.
[2025-08-21 16:10:54.074][E] - When we are in the "in_trip" phase, the "" dictates if we have "day_of" matters to handle.
[2025-08-21 16:10:54.074][E] - if "" is after the end date of the trip, we are in the "post_trip" phase.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] <itinerary>
[2025-08-21 16:10:54.074][E] {}
[2025-08-21 16:10:54.074][E] </itinerary>
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Upon knowing the trip phase, delegate the control of the dialog to the respective agents accordingly:
[2025-08-21 16:10:54.074][E] pre_trip, in_trip, post_trip.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] You are an agent. Your internal name is "root_agent".
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] The description about you is "A Travel Conceirge using the services of multiple sub-agents"
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] You have a list of other agents to transfer to:
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: inspiration_agent
[2025-08-21 16:10:54.074][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: planning_agent
[2025-08-21 16:10:54.074][E] Agent description: Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: booking_agent
[2025-08-21 16:10:54.074][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: pre_trip_agent
[2025-08-21 16:10:54.074][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: in_trip_agent
[2025-08-21 16:10:54.074][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] Agent name: post_trip_agent
[2025-08-21 16:10:54.074][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:10:54.074][E] can answer it.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] If another agent is better for answering the question according to its
[2025-08-21 16:10:54.074][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:10:54.074][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:10:54.074][E] the function call.
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] -----------------------------------------------------------
[2025-08-21 16:10:54.074][E] Contents:
[2025-08-21 16:10:54.074][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:10:54.074][E] -----------------------------------------------------------
[2025-08-21 16:10:54.074][E] Functions:
[2025-08-21 16:10:54.074][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:10:54.074][E] -----------------------------------------------------------
[2025-08-21 16:10:54.074][E] 
[2025-08-21 16:10:54.074][E] 2025-08-21 16:10:54,073 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:10:54.075][E] 2025-08-21 16:10:54,075 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:10:54.173][E] 2025-08-21 16:10:54,173 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e24c20>
[2025-08-21 16:10:54.173][E] 2025-08-21 16:10:54,173 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125c9e6d0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:10:54.222][E] 2025-08-21 16:10:54,222 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125c2a210>
[2025-08-21 16:10:54.223][E] 2025-08-21 16:10:54,223 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:10:54.223][E] 2025-08-21 16:10:54,223 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:10:54.223][E] 2025-08-21 16:10:54,223 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:10:54.223][E] 2025-08-21 16:10:54,223 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:10:54.223][E] 2025-08-21 16:10:54,223 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:10:55.912][E] 2025-08-21 16:10:55,911 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:10:55 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/53'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=1660'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768206.682309.933918,/bns/we/borg/we/bns/genai-api/prod.genai-api/53,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/86'), (b'X-Google-GFE-Request-Trace', b'aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/53,aczrhi8:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/86,Mentat oracle: [2002:a05:7512:8690:b0:59:665b:2409]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:10:55.913][E] 2025-08-21 16:10:55,913 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:10:55.913][E] 2025-08-21 16:10:55,913 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:10:55.914][E] 2025-08-21 16:10:55,914 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:10:55.914][E] 2025-08-21 16:10:55,914 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:10:55.914][E] 2025-08-21 16:10:55,914 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:10:55.917][E] 2025-08-21 16:10:55,916 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:10:55.917][E] 2025-08-21 16:10:55,917 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:10:55.917][E] 2025-08-21 16:10:55,917 - DEBUG - google_llm.py:204 -
[2025-08-21 16:10:55.917][E] LLM Response:
[2025-08-21 16:10:55.917][E] -----------------------------------------------------------
[2025-08-21 16:10:55.917][E] Text:
[2025-08-21 16:10:55.917][E] None
[2025-08-21 16:10:55.917][E] -----------------------------------------------------------
[2025-08-21 16:10:55.917][E] Function calls:
[2025-08-21 16:10:55.917][E] name: transfer_to_agent, args: {'agent_name': 'inspiration_agent'}
[2025-08-21 16:10:55.917][E] -----------------------------------------------------------
[2025-08-21 16:10:55.917][E] Raw response:
[2025-08-21 16:10:55.917][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:10:55 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/53","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1660","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768206.682309.933918,/bns/we/borg/we/bns/genai-api/prod.genai-api/53,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/86","x-google-gfe-request-trace":"aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/53,aczrhi8:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/86,Mentat oracle: [2002:a05:7512:8690:b0:59:665b:2409]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CvMIAVSoXO69YdeKDQbYEDXss6BgTwkdqpMvczo8MIkSPgTBmY1OBNx4s4OpabfbezPSrT0Q2I1lRBi3GmL4v71gU_ybk2oiDcNWkQT_aZXhYbxsuH3ZQt5-Q4weAdIb38VFpKnI-ChxKMDhx95ROjf04zQ3KqNphKneRhOTGxx_h5kZryjLPLgiPkVYKGpBCTvlPePmg_wfpjmXWY4RiHh34etzQ3WEAjc2FJeq6hQliI2hmyqoDv-vmP3qSfUJx-wm-bYIbi7qJQK9SZGmulEEcp4Nl1Cno_bFapKRpaT1Xn6m8a-KiT3IHIRD7Q41G4nGkxzAtouz6BfmBl0zZtJOFtTjxTOLgDQCRFlVJm4l9_HoJ6_J5T3BKQqIWfwsEufz9_cA3Bxfne8CUuGzB4Fs0WzspcZli2Xtr1lYUki03mI2rf5v-5Hh2X3wDQJxb3PfWn3x5QopD3ap2UMBVdFv3oaGNU8-3qWg0bC3yfdeGmMSb72jXbh7o-IFMg5EN71_UHVOaZbmaAg7e1JQk-P2IrmAoTA8bDMGUlxXq0-6DRTOqJk9mPmjOwzkbpLMVrTXijMIBNbnRxxlYAsf3ZBXHCljNmmH50P2QpDEK6gS8TP1z1CEFUI0k-jMYAslZOO81XwYdhcedZZ--nUb22XbwE2tsnYURBTZGPDsyY_MjwSMcB0DLjjVSI3qxmB57A0MvRIREv9SYaGLof7afuuvyCmHD19dPFO0UezOKbL57HHtYtT-xp3ZKb0LTAO1JSESdiZbQiQBPE7Wp0nqCc6endLPHFT56YqnlQSK9Rzy3uDsojnh3QfB_T4ETr5E-AUliDiz9jhrunn0y2ekjOt6tn2Pvggr4bhcU1hx7CZt4iDcCkVyVYZFuxJjimA5tQCwkoYiMjXDl1pT_tyRW3Vr-Zn6tOjOHhX0d9oxqnEHOrnT0UEUhtjObFl4Y03uA3rfrnEBbKhbJ-9yJ1LLfiX1ypcA13zFVQkPTxGp9o2txxXeelBPA7GB9Cl2PchYnjJ7ojHZo3Z4EZETkNp0QHXg5A7pV7QPTnTUBN2jl-SdjfTUImGn_QI_Ja3zDMrnXIj23-U6eJyzSQaJB2fjx_la775O7uBC02aUlDqxtfJjuR8bEMArJa7-NvYIrgpblDRGyzRlxyYK2giFszZdRuOnqEM0WnO-9Nj19hibO62brt8bw00VdYv3q-kSYwm429II08faToyey74013AriKMs5rbpJaLMppw2-rQ0F1SDtOEJ__OQENPfEjwJ--Vvvkj0d1d8M36d2rAT7NVCvunRjZuybKtHT64w2WRYSwfYNkilkJcMLO7g3Grtlw_YUrXEwCWb0vZqCBTMozbsFkFEgJ89JS8Gg7_bGLpeP3hBUhSyzO-gCtS8MqT3SX-1OZ_41RdVddDlU1L4Bi_Bu42GDiBnng0E-fCoE_twgqaBRGiahms1pzmtK8zzijZCptvXhUBj8kcp8pi_jPbtrw04-QueCo6ACjvoB8L7L0WOB7VBTBg=","function_call":{"args":{"agent_name":"inspiration_agent"},"name":"transfer_to_agent"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":21,"prompt_token_count":944,"prompt_tokens_details":[{"modality":"TEXT","token_count":944}],"thoughts_token_count":214,"total_token_count":1179},"automatic_function_calling_history":[]}
[2025-08-21 16:10:55.917][E] -----------------------------------------------------------
[2025-08-21 16:10:55.917][E] 
[2025-08-21 16:10:55.918][E] 2025-08-21 16:10:55,918 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CvMIAVSoXO69YdeKDQbYEDXss6BgTwkdqpMvczo8MIkSPgTBmY1OBNx4s4OpabfbezPSrT0Q2I1lRBi3GmL4v71gU_ybk2oiDcNWkQT_aZXhYbxsuH3ZQt5-Q4weAdIb38VFpKnI-ChxKMDhx95ROjf04zQ3KqNphKneRhOTGxx_h5kZryjLPLgiPkVYKGpBCTvlPePmg_wfpjmXWY4RiHh34etzQ3WEAjc2FJeq6hQliI2hmyqoDv-vmP3qSfUJx-wm-bYIbi7qJQK9SZGmulEEcp4Nl1Cno_bFapKRpaT1Xn6m8a-KiT3IHIRD7Q41G4nGkxzAtouz6BfmBl0zZtJOFtTjxTOLgDQCRFlVJm4l9_HoJ6_J5T3BKQqIWfwsEufz9_cA3Bxfne8CUuGzB4Fs0WzspcZli2Xtr1lYUki03mI2rf5v-5Hh2X3wDQJxb3PfWn3x5QopD3ap2UMBVdFv3oaGNU8-3qWg0bC3yfdeGmMSb72jXbh7o-IFMg5EN71_UHVOaZbmaAg7e1JQk-P2IrmAoTA8bDMGUlxXq0-6DRTOqJk9mPmjOwzkbpLMVrTXijMIBNbnRxxlYAsf3ZBXHCljNmmH50P2QpDEK6gS8TP1z1CEFUI0k-jMYAslZOO81XwYdhcedZZ--nUb22XbwE2tsnYURBTZGPDsyY_MjwSMcB0DLjjVSI3qxmB57A0MvRIREv9SYaGLof7afuuvyCmHD19dPFO0UezOKbL57HHtYtT-xp3ZKb0LTAO1JSESdiZbQiQBPE7Wp0nqCc6endLPHFT56YqnlQSK9Rzy3uDsojnh3QfB_T4ETr5E-AUliDiz9jhrunn0y2ekjOt6tn2Pvggr4bhcU1hx7CZt4iDcCkVyVYZFuxJjimA5tQCwkoYiMjXDl1pT_tyRW3Vr-Zn6tOjOHhX0d9oxqnEHOrnT0UEUhtjObFl4Y03uA3rfrnEBbKhbJ-9yJ1LLfiX1ypcA13zFVQkPTxGp9o2txxXeelBPA7GB9Cl2PchYnjJ7ojHZo3Z4EZETkNp0QHXg5A7pV7QPTnTUBN2jl-SdjfTUImGn_QI_Ja3zDMrnXIj23-U6eJyzSQaJB2fjx_la775O7uBC02aUlDqxtfJjuR8bEMArJa7-NvYIrgpblDRGyzRlxyYK2giFszZdRuOnqEM0WnO-9Nj19hibO62brt8bw00VdYv3q-kSYwm429II08faToyey74013AriKMs5rbpJaLMppw2-rQ0F1SDtOEJ__OQENPfEjwJ--Vvvkj0d1d8M36d2rAT7NVCvunRjZuybKtHT64w2WRYSwfYNkilkJcMLO7g3Grtlw_YUrXEwCWb0vZqCBTMozbsFkFEgJ89JS8Gg7_bGLpeP3hBUhSyzO-gCtS8MqT3SX-1OZ_41RdVddDlU1L4Bi_Bu42GDiBnng0E-fCoE_twgqaBRGiahms1pzmtK8zzijZCptvXhUBj8kcp8pi_jPbtrw04-QueCo6ACjvoB8L7L0WOB7VBTBg=","functionCall":{"id":"adk-2333258d-fac3-4a12-a357-e9965e6cd502","args":{"agent_name":"inspiration_agent"},"name":"transfer_to_agent"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":21,"promptTokenCount":944,"promptTokensDetails":[{"modality":"TEXT","tokenCount":944}],"thoughtsTokenCount":214,"totalTokenCount":1179},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"root_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"ad08e39a-b277-4647-aebe-fee414a1cd52","timestamp":1755785454.022275}
[2025-08-21 16:10:55.919][E] 2025-08-21 16:10:55,919 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-2333258d-fac3-4a12-a357-e9965e6cd502","name":"transfer_to_agent","response":{"result":null}}}],"role":"user"},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"root_agent","actions":{"stateDelta":{},"artifactDelta":{},"transferToAgent":"inspiration_agent","requestedAuthConfigs":{}},"id":"8548ceb1-220d-4b24-a619-bba67d241cf8","timestamp":1755785455.919344}
[2025-08-21 16:10:55.957][E] 2025-08-21 16:10:55,957 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:10:55.957][E] 2025-08-21 16:10:55,957 - DEBUG - google_llm.py:117 -
[2025-08-21 16:10:55.957][E] LLM Request:
[2025-08-21 16:10:55.957][E] -----------------------------------------------------------
[2025-08-21 16:10:55.957][E] System Instruction:
[2025-08-21 16:10:55.957][E] 
[2025-08-21 16:10:55.957][E] You are travel inspiration agent who help users find their next big dream vacation destinations.
[2025-08-21 16:10:55.957][E] Your role and goal is to help the user identify a destination and a few activities at the destination the user is interested in.
[2025-08-21 16:10:55.957][E] 
[2025-08-21 16:10:55.957][E] As part of that, user may ask you for general history or knowledge about a destination, in that scenario, answer briefly in the best of your ability, but focus on the goal by relating your answer back to destinations and activities the user may in turn like.
[2025-08-21 16:10:55.957][E] - You will call the two agent tool `place_agent(inspiration query)` and `poi_agent(destination)` when appropriate:
[2025-08-21 16:10:55.957][E] - Use `place_agent` to recommend general vacation destinations given vague ideas, be it a city, a region, a country.
[2025-08-21 16:10:55.957][E] - Use `poi_agent` to provide points of interests and acitivities suggestions, once the user has a specific city or region in mind.
[2025-08-21 16:10:55.957][E] - Everytime after `poi_agent` is invoked, call `map_tool` with the key being `poi` to verify the latitude and longitudes.
[2025-08-21 16:10:55.957][E] - Avoid asking too many questions. When user gives instructions like "inspire me", or "suggest some", just go ahead and call `place_agent`.
[2025-08-21 16:10:55.957][E] - As follow up, you may gather a few information from the user to future their vacation inspirations.
[2025-08-21 16:10:55.957][E] - Once the user selects their destination, then you help them by providing granular insights by being their personal local travel guide
[2025-08-21 16:10:55.957][E] 
[2025-08-21 16:10:55.957][E] - Here's the optimal flow:
[2025-08-21 16:10:55.957][E] - inspire user for a dream vacation
[2025-08-21 16:10:55.957][E] - show them interesting things to do for the selected location
[2025-08-21 16:10:55.957][E] 
[2025-08-21 16:10:55.958][E] - Your role is only to identify possible destinations and acitivites.
[2025-08-21 16:10:55.958][E] - Do not attempt to assume the role of `place_agent` and `poi_agent`, use them instead.
[2025-08-21 16:10:55.958][E] - Do not attempt to plan an itinerary for the user with start dates and details, leave that to the planning_agent.
[2025-08-21 16:10:55.958][E] - Transfer the user to planning_agent once the user wants to:
[2025-08-21 16:10:55.958][E] - Enumerate a more detailed full itinerary,
[2025-08-21 16:10:55.958][E] - Looking for flights and hotels deals.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] - Please use the context info below for any user preferences:
[2025-08-21 16:10:55.958][E] Current user:
[2025-08-21 16:10:55.958][E] <user_profile>
[2025-08-21 16:10:55.958][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:10:55.958][E] </user_profile>
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] You are an agent. Your internal name is "inspiration_agent".
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] The description about you is "A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,"
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] You have a list of other agents to transfer to:
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: root_agent
[2025-08-21 16:10:55.958][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: planning_agent
[2025-08-21 16:10:55.958][E] Agent description: Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: booking_agent
[2025-08-21 16:10:55.958][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: pre_trip_agent
[2025-08-21 16:10:55.958][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: in_trip_agent
[2025-08-21 16:10:55.958][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Agent name: post_trip_agent
[2025-08-21 16:10:55.958][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:10:55.958][E] can answer it.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] If another agent is better for answering the question according to its
[2025-08-21 16:10:55.958][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:10:55.958][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:10:55.958][E] the function call.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:10:55.958][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:10:55.958][E] to your parent agent.
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] -----------------------------------------------------------
[2025-08-21 16:10:55.958][E] Contents:
[2025-08-21 16:10:55.958][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:10:55.958][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:10:55.958][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:10:55.958][E] -----------------------------------------------------------
[2025-08-21 16:10:55.958][E] Functions:
[2025-08-21 16:10:55.958][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:10:55.958][E] place_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:10:55.958][E] poi_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:10:55.958][E] map_tool: {'key': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:10:55.958][E] -----------------------------------------------------------
[2025-08-21 16:10:55.958][E] 
[2025-08-21 16:10:55.958][E] 2025-08-21 16:10:55,957 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:10:55.959][E] 2025-08-21 16:10:55,959 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:10:55.981][E] 2025-08-21 16:10:55,980 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e263c0>
[2025-08-21 16:10:55.981][E] 2025-08-21 16:10:55,981 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125cd3ad0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:10:56.013][E] 2025-08-21 16:10:56,013 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e26330>
[2025-08-21 16:10:56.013][E] 2025-08-21 16:10:56,013 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:10:56.013][E] 2025-08-21 16:10:56,013 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:10:56.013][E] 2025-08-21 16:10:56,013 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:10:56.014][E] 2025-08-21 16:10:56,014 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:10:56.014][E] 2025-08-21 16:10:56,014 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:10:56.913][E] 2025-08-21 16:10:56,913 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:10:56 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/92'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=876'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768208.408530.3129875,/bns/we/borg/we/bns/genai-api/prod.genai-api/92,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133'), (b'X-Google-GFE-Request-Trace', b'aczrhi14:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/92,aczrhi14:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud,main:GLOBAL_all_non_cloud_test'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133,Mentat oracle: [2002:a05:600a:1e81:b0:384:54d0:df38]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:10:56.914][E] 2025-08-21 16:10:56,914 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:10:56.915][E] 2025-08-21 16:10:56,915 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:10:56.916][E] 2025-08-21 16:10:56,916 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:10:56.916][E] 2025-08-21 16:10:56,916 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:10:56.916][E] 2025-08-21 16:10:56,916 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:10:56.918][E] 2025-08-21 16:10:56,918 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:10:56.918][E] 2025-08-21 16:10:56,918 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:10:56.918][E] 2025-08-21 16:10:56,918 - DEBUG - google_llm.py:204 -
[2025-08-21 16:10:56.918][E] LLM Response:
[2025-08-21 16:10:56.918][E] -----------------------------------------------------------
[2025-08-21 16:10:56.918][E] Text:
[2025-08-21 16:10:56.919][E] None
[2025-08-21 16:10:56.919][E] -----------------------------------------------------------
[2025-08-21 16:10:56.919][E] Function calls:
[2025-08-21 16:10:56.919][E] name: poi_agent, args: {'request': 'Montreal'}
[2025-08-21 16:10:56.919][E] -----------------------------------------------------------
[2025-08-21 16:10:56.919][E] Raw response:
[2025-08-21 16:10:56.919][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:10:56 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/92","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=876","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768208.408530.3129875,/bns/we/borg/we/bns/genai-api/prod.genai-api/92,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133","x-google-gfe-request-trace":"aczrhi14:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/92,aczrhi14:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud,main:GLOBAL_all_non_cloud_test","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133,Mentat oracle: [2002:a05:600a:1e81:b0:384:54d0:df38]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"Cs4DAVSoXO4s4WN_hI5aQ9mOfT0C98aEawGQGS6QfVAGZEfzQXHgz8wEN-2mOMhYGb-uyeHOWJqZZ1b64sB0wrIECIcHBO6EdCjp6JWCM6QZLbjaDaegdoh9fbK3EoTBFv4gguqtT1o_xYhxU1qGx6o7xvJa_vNGx7n8r0Iy6JHukLvtUwy-BIju-pwOr027pEhjXDPzdrCwFOw1UISNTdjoqIW6QxwUuC9sru92IPh5aNOLd9W5EwE9UazQ8Tf88U-VYpNzxlsOtlV7CokTHui7_gM1ME1S2ZwQZX8-H1tklTlUHKaPW5tT9ZO7u3FfKcLOuIq1JnQd25271fD17vfRYKl_y1lYm_VrwFO2LPvez4Y9HxSIjKiJHB_Bz3RVcTXENlXEoz0mQFI9I1-WPo3glwULxSCw-sZwIQYDaldxrafcUg6cRRHczu2iSiTzWlfM7GmAcrzndDmZZh6ueTQcQn6LsKzTPZh7yTz99QQJFwB-Vst3RxZTfuErsqlkwIs46yunGJ_4YWDEbaifo-wBB7FN0NNONUCR_SvkxW7nv28KnuKRkqlpi8ic8C8HNqkKx7cniidOzB3cNMuFcD_rrzy5K2pZ1yEL2HocaXRY","function_call":{"args":{"request":"Montreal"},"name":"poi_agent"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":15,"prompt_token_count":1319,"prompt_tokens_details":[{"modality":"TEXT","token_count":1319}],"thoughts_token_count":92,"total_token_count":1426},"automatic_function_calling_history":[]}
[2025-08-21 16:10:56.919][E] -----------------------------------------------------------
[2025-08-21 16:10:56.919][E] 
[2025-08-21 16:10:56.919][E] 2025-08-21 16:10:56,919 - DEBUG - llm_agent.py:447 - Skipping output save for agent root_agent: event authored by inspiration_agent
[2025-08-21 16:10:56.919][E] 2025-08-21 16:10:56,919 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"Cs4DAVSoXO4s4WN_hI5aQ9mOfT0C98aEawGQGS6QfVAGZEfzQXHgz8wEN-2mOMhYGb-uyeHOWJqZZ1b64sB0wrIECIcHBO6EdCjp6JWCM6QZLbjaDaegdoh9fbK3EoTBFv4gguqtT1o_xYhxU1qGx6o7xvJa_vNGx7n8r0Iy6JHukLvtUwy-BIju-pwOr027pEhjXDPzdrCwFOw1UISNTdjoqIW6QxwUuC9sru92IPh5aNOLd9W5EwE9UazQ8Tf88U-VYpNzxlsOtlV7CokTHui7_gM1ME1S2ZwQZX8-H1tklTlUHKaPW5tT9ZO7u3FfKcLOuIq1JnQd25271fD17vfRYKl_y1lYm_VrwFO2LPvez4Y9HxSIjKiJHB_Bz3RVcTXENlXEoz0mQFI9I1-WPo3glwULxSCw-sZwIQYDaldxrafcUg6cRRHczu2iSiTzWlfM7GmAcrzndDmZZh6ueTQcQn6LsKzTPZh7yTz99QQJFwB-Vst3RxZTfuErsqlkwIs46yunGJ_4YWDEbaifo-wBB7FN0NNONUCR_SvkxW7nv28KnuKRkqlpi8ic8C8HNqkKx7cniidOzB3cNMuFcD_rrzy5K2pZ1yEL2HocaXRY","functionCall":{"id":"adk-c1421aed-f955-43fb-bc36-2932b8896496","args":{"request":"Montreal"},"name":"poi_agent"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":15,"promptTokenCount":1319,"promptTokensDetails":[{"modality":"TEXT","tokenCount":1319}],"thoughtsTokenCount":92,"totalTokenCount":1426},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"f02b3bde-ebef-46df-9802-919e647109b1","timestamp":1755785455.922006}
[2025-08-21 16:10:56.988][E] 2025-08-21 16:10:56,988 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:10:56.988][E] 2025-08-21 16:10:56,988 - DEBUG - google_llm.py:117 -
[2025-08-21 16:10:56.988][E] LLM Request:
[2025-08-21 16:10:56.988][E] -----------------------------------------------------------
[2025-08-21 16:10:56.988][E] System Instruction:
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] You are responsible for providing a list of point of interests, things to do recommendations based on the user's destination choice. Limit the choices to 5 results.
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] Return the response as a JSON object:
[2025-08-21 16:10:56.988][E] {{
[2025-08-21 16:10:56.988][E] "places": [
[2025-08-21 16:10:56.988][E] {{
[2025-08-21 16:10:56.988][E] "place_name": "Name of the attraction",
[2025-08-21 16:10:56.988][E] "address": "An address or sufficient information to geocode for a Lat/Lon".
[2025-08-21 16:10:56.988][E] "lat": "Numerical representation of Latitude of the location (e.g., 20.6843)",
[2025-08-21 16:10:56.988][E] "long": "Numerical representation of Latitude of the location (e.g., -88.5678)",
[2025-08-21 16:10:56.988][E] "review_ratings": "Numerical representation of rating (e.g. 4.8 , 3.0 , 1.0 etc),
[2025-08-21 16:10:56.988][E] "highlights": "Short description highlighting key features",
[2025-08-21 16:10:56.988][E] "image_url": "verified URL to an image of the destination",
[2025-08-21 16:10:56.988][E] "map_url":  "Placeholder - Leave this as empty string."
[2025-08-21 16:10:56.988][E] "place_id": "Placeholder - Leave this as empty string."
[2025-08-21 16:10:56.988][E] }}
[2025-08-21 16:10:56.988][E] ]
[2025-08-21 16:10:56.988][E] }}
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] You are an agent. Your internal name is "poi_agent".
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] The description about you is "This agent suggests a few activities and points of interests given a destination"
[2025-08-21 16:10:56.988][E] -----------------------------------------------------------
[2025-08-21 16:10:56.988][E] Contents:
[2025-08-21 16:10:56.988][E] {"parts":[{"text":"Montreal"}],"role":"user"}
[2025-08-21 16:10:56.988][E] -----------------------------------------------------------
[2025-08-21 16:10:56.988][E] Functions:
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] -----------------------------------------------------------
[2025-08-21 16:10:56.988][E] 
[2025-08-21 16:10:56.988][E] 2025-08-21 16:10:56,988 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:10:56.990][E] 2025-08-21 16:10:56,990 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:10:57.019][E] 2025-08-21 16:10:57,019 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5c650>
[2025-08-21 16:10:57.019][E] 2025-08-21 16:10:57,019 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e3ded0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e26450>
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:10:57.061][E] 2025-08-21 16:10:57,061 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:11:01 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/63'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=4547'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768205.676388.7572,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47'), (b'X-Google-GFE-Request-Trace', b'aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,aczrhi8:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47,Mentat oracle: [2002:a05:601a:88c:b0:2ed:69c1:60ad]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:11:01.637][E] 2025-08-21 16:11:01,637 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:11:01.638][E] 2025-08-21 16:11:01,638 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:11:01.638][E] 2025-08-21 16:11:01,638 - DEBUG - google_llm.py:204 -
[2025-08-21 16:11:01.638][E] LLM Response:
[2025-08-21 16:11:01.638][E] -----------------------------------------------------------
[2025-08-21 16:11:01.638][E] Text:
[2025-08-21 16:11:01.638][E] {"places": [{"place_name": "Old Montreal", "address": "Old Montreal, Quebec, Canada", "lat": "45.5058", "long": "-73.5552", "review_ratings": "4.8", "highlights": "Historic district with cobblestone streets, old architecture, and charming boutiques.", "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg", "map_url": "", "place_id": ""}, {"place_name": "Notre-Dame Basilica of Montreal", "address": "110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada", "lat": "45.5085", "long": "-73.5574", "review_ratings": "4.7", "highlights": "Stunning Gothic Revival church with intricate interiors and a beautiful light show.", "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg", "map_url": "", "place_id": ""}, {"place_name": "Mount Royal Park", "address": "1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada", "lat": "45.5039", "long": "-73.5878", "review_ratings": "4.8", "highlights": "Large urban park offering panoramic city views, walking trails, and recreational activities.", "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg", "map_url": "", "place_id": ""}, {"place_name": "Plateau Mont-Royal", "address": "Plateau Mont-Royal, Montreal, Quebec, Canada", "lat": "45.5250", "long": "-73.5850", "review_ratings": "4.7", "highlights": "Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.", "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg", "map_url": "", "place_id": ""}, {"place_name": "Jean-Talon Market", "address": "7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada", "lat": "45.5392", "long": "-73.6136", "review_ratings": "4.7", "highlights": "Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.", "image_url": "https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg", "map_url": "", "place_id": ""}]}
[2025-08-21 16:11:01.638][E] -----------------------------------------------------------
[2025-08-21 16:11:01.638][E] Function calls:
[2025-08-21 16:11:01.638][E] 
[2025-08-21 16:11:01.638][E] -----------------------------------------------------------
[2025-08-21 16:11:01.638][E] Raw response:
[2025-08-21 16:11:01.638][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:11:01 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/63","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=4547","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768205.676388.7572,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47","x-google-gfe-request-trace":"aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,aczrhi8:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47,Mentat oracle: [2002:a05:601a:88c:b0:2ed:69c1:60ad]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"text":"{\"places\": [{\"place_name\": \"Old Montreal\", \"address\": \"Old Montreal, Quebec, Canada\", \"lat\": \"45.5058\", \"long\": \"-73.5552\", \"review_ratings\": \"4.8\", \"highlights\": \"Historic district with cobblestone streets, old architecture, and charming boutiques.\", \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg\", \"map_url\": \"\", \"place_id\": \"\"}, {\"place_name\": \"Notre-Dame Basilica of Montreal\", \"address\": \"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada\", \"lat\": \"45.5085\", \"long\": \"-73.5574\", \"review_ratings\": \"4.7\", \"highlights\": \"Stunning Gothic Revival church with intricate interiors and a beautiful light show.\", \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg\", \"map_url\": \"\", \"place_id\": \"\"}, {\"place_name\": \"Mount Royal Park\", \"address\": \"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada\", \"lat\": \"45.5039\", \"long\": \"-73.5878\", \"review_ratings\": \"4.8\", \"highlights\": \"Large urban park offering panoramic city views, walking trails, and recreational activities.\", \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg\", \"map_url\": \"\", \"place_id\": \"\"}, {\"place_name\": \"Plateau Mont-Royal\", \"address\": \"Plateau Mont-Royal, Montreal, Quebec, Canada\", \"lat\": \"45.5250\", \"long\": \"-73.5850\", \"review_ratings\": \"4.7\", \"highlights\": \"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.\", \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg\", \"map_url\": \"\", \"place_id\": \"\"}, {\"place_name\": \"Jean-Talon Market\", \"address\": \"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada\", \"lat\": \"45.5392\", \"long\": \"-73.6136\", \"review_ratings\": \"4.7\", \"highlights\": \"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\", \"image_url\": \"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg\", \"map_url\": \"\", \"place_id\": \"\"}]}"}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":795,"prompt_token_count":283,"prompt_tokens_details":[{"modality":"TEXT","token_count":283}],"thoughts_token_count":38,"total_token_count":1116},"automatic_function_calling_history":[],"parsed":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}}
[2025-08-21 16:11:01.638][E] -----------------------------------------------------------
[2025-08-21 16:11:01.638][E] 
[2025-08-21 16:11:01.640][E] 2025-08-21 16:11:01,640 - DEBUG - llm_agent.py:447 - Skipping output save for agent root_agent: event authored by inspiration_agent
[2025-08-21 16:11:01.640][E] 2025-08-21 16:11:01,640 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-c1421aed-f955-43fb-bc36-2932b8896496","name":"poi_agent","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}}}],"role":"user"},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"inspiration_agent","actions":{"stateDelta":{"poi":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"6154d90e-b828-4bbd-bd41-10054563025f","timestamp":1755785461.640131}
[2025-08-21 16:11:01.682][E] 2025-08-21 16:11:01,682 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:11:01.682][E] 2025-08-21 16:11:01,682 - DEBUG - google_llm.py:117 -
[2025-08-21 16:11:01.682][E] LLM Request:
[2025-08-21 16:11:01.682][E] -----------------------------------------------------------
[2025-08-21 16:11:01.682][E] System Instruction:
[2025-08-21 16:11:01.682][E] 
[2025-08-21 16:11:01.682][E] You are travel inspiration agent who help users find their next big dream vacation destinations.
[2025-08-21 16:11:01.682][E] Your role and goal is to help the user identify a destination and a few activities at the destination the user is interested in.
[2025-08-21 16:11:01.682][E] 
[2025-08-21 16:11:01.682][E] As part of that, user may ask you for general history or knowledge about a destination, in that scenario, answer briefly in the best of your ability, but focus on the goal by relating your answer back to destinations and activities the user may in turn like.
[2025-08-21 16:11:01.682][E] - You will call the two agent tool `place_agent(inspiration query)` and `poi_agent(destination)` when appropriate:
[2025-08-21 16:11:01.682][E] - Use `place_agent` to recommend general vacation destinations given vague ideas, be it a city, a region, a country.
[2025-08-21 16:11:01.682][E] - Use `poi_agent` to provide points of interests and acitivities suggestions, once the user has a specific city or region in mind.
[2025-08-21 16:11:01.682][E] - Everytime after `poi_agent` is invoked, call `map_tool` with the key being `poi` to verify the latitude and longitudes.
[2025-08-21 16:11:01.682][E] - Avoid asking too many questions. When user gives instructions like "inspire me", or "suggest some", just go ahead and call `place_agent`.
[2025-08-21 16:11:01.682][E] - As follow up, you may gather a few information from the user to future their vacation inspirations.
[2025-08-21 16:11:01.682][E] - Once the user selects their destination, then you help them by providing granular insights by being their personal local travel guide
[2025-08-21 16:11:01.682][E] 
[2025-08-21 16:11:01.682][E] - Here's the optimal flow:
[2025-08-21 16:11:01.682][E] - inspire user for a dream vacation
[2025-08-21 16:11:01.682][E] - show them interesting things to do for the selected location
[2025-08-21 16:11:01.682][E] 
[2025-08-21 16:11:01.682][E] - Your role is only to identify possible destinations and acitivites.
[2025-08-21 16:11:01.682][E] - Do not attempt to assume the role of `place_agent` and `poi_agent`, use them instead.
[2025-08-21 16:11:01.682][E] - Do not attempt to plan an itinerary for the user with start dates and details, leave that to the planning_agent.
[2025-08-21 16:11:01.683][E] - Transfer the user to planning_agent once the user wants to:
[2025-08-21 16:11:01.683][E] - Enumerate a more detailed full itinerary,
[2025-08-21 16:11:01.683][E] - Looking for flights and hotels deals.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] - Please use the context info below for any user preferences:
[2025-08-21 16:11:01.683][E] Current user:
[2025-08-21 16:11:01.683][E] <user_profile>
[2025-08-21 16:11:01.683][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:11:01.683][E] </user_profile>
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] You are an agent. Your internal name is "inspiration_agent".
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] The description about you is "A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,"
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] You have a list of other agents to transfer to:
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: root_agent
[2025-08-21 16:11:01.683][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: planning_agent
[2025-08-21 16:11:01.683][E] Agent description: Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: booking_agent
[2025-08-21 16:11:01.683][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: pre_trip_agent
[2025-08-21 16:11:01.683][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: in_trip_agent
[2025-08-21 16:11:01.683][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Agent name: post_trip_agent
[2025-08-21 16:11:01.683][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:11:01.683][E] can answer it.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] If another agent is better for answering the question according to its
[2025-08-21 16:11:01.683][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:11:01.683][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:11:01.683][E] the function call.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:11:01.683][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:11:01.683][E] to your parent agent.
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] -----------------------------------------------------------
[2025-08-21 16:11:01.683][E] Contents:
[2025-08-21 16:11:01.683][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:11:01.683][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:11:01.683][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:11:01.683][E] {"parts":[{"thought_signature":"Cs4DAVSoXO4s4WN_hI5aQ9mOfT0C98aEawGQGS6QfVAGZEfzQXHgz8wEN-2mOMhYGb-uyeHOWJqZZ1b64sB0wrIECIcHBO6EdCjp6JWCM6QZLbjaDaegdoh9fbK3EoTBFv4gguqtT1o_xYhxU1qGx6o7xvJa_vNGx7n8r0Iy6JHukLvtUwy-BIju-pwOr027pEhjXDPzdrCwFOw1UISNTdjoqIW6QxwUuC9sru92IPh5aNOLd9W5EwE9UazQ8Tf88U-VYpNzxlsOtlV7CokTHui7_gM1ME1S2ZwQZX8-H1tklTlUHKaPW5tT9ZO7u3FfKcLOuIq1JnQd25271fD17vfRYKl_y1lYm_VrwFO2LPvez4Y9HxSIjKiJHB_Bz3RVcTXENlXEoz0mQFI9I1-WPo3glwULxSCw-sZwIQYDaldxrafcUg6cRRHczu2iSiTzWlfM7GmAcrzndDmZZh6ueTQcQn6LsKzTPZh7yTz99QQJFwB-Vst3RxZTfuErsqlkwIs46yunGJ_4YWDEbaifo-wBB7FN0NNONUCR_SvkxW7nv28KnuKRkqlpi8ic8C8HNqkKx7cniidOzB3cNMuFcD_rrzy5K2pZ1yEL2HocaXRY","function_call":{"args":{"request":"Montreal"},"name":"poi_agent"}}],"role":"model"}
[2025-08-21 16:11:01.683][E] {"parts":[{"function_response":{"name":"poi_agent","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}}}],"role":"user"}
[2025-08-21 16:11:01.683][E] -----------------------------------------------------------
[2025-08-21 16:11:01.683][E] Functions:
[2025-08-21 16:11:01.683][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:01.683][E] place_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:01.683][E] poi_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:01.683][E] map_tool: {'key': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:01.683][E] -----------------------------------------------------------
[2025-08-21 16:11:01.683][E] 
[2025-08-21 16:11:01.683][E] 2025-08-21 16:11:01,682 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:11:01.685][E] 2025-08-21 16:11:01,684 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:11:01.685][E] 2025-08-21 16:11:01,685 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:11:01.686][E] 2025-08-21 16:11:01,686 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:11:01.686][E] 2025-08-21 16:11:01,686 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:11:01.686][E] 2025-08-21 16:11:01,686 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:11:01.717][E] 2025-08-21 16:11:01,716 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e25130>
[2025-08-21 16:11:01.717][E] 2025-08-21 16:11:01,717 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125cd2150> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125b82120>
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:11:01.760][E] 2025-08-21 16:11:01,760 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:11:03.088][E] 2025-08-21 16:11:03,088 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:11:03 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/99'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=1295'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768211.976276.3797037,/bns/we/borg/we/bns/genai-api/prod.genai-api/99,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/8'), (b'X-Google-GFE-Request-Trace', b'aczrhi10:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/99,aczrhi10:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/8,Mentat oracle: [2002:adf:a2d7:0:b0:3c5:c86:4c55]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:11:03.089][E] 2025-08-21 16:11:03,089 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:11:03.089][E] 2025-08-21 16:11:03,089 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:11:03.089][E] 2025-08-21 16:11:03,089 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:11:03.089][E] 2025-08-21 16:11:03,089 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:11:03.089][E] 2025-08-21 16:11:03,089 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:11:03.090][E] 2025-08-21 16:11:03,090 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:11:03.090][E] 2025-08-21 16:11:03,090 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:11:03.090][E] 2025-08-21 16:11:03,090 - DEBUG - google_llm.py:204 -
[2025-08-21 16:11:03.090][E] LLM Response:
[2025-08-21 16:11:03.090][E] -----------------------------------------------------------
[2025-08-21 16:11:03.090][E] Text:
[2025-08-21 16:11:03.090][E] None
[2025-08-21 16:11:03.090][E] -----------------------------------------------------------
[2025-08-21 16:11:03.090][E] Function calls:
[2025-08-21 16:11:03.090][E] name: map_tool, args: {'key': 'poi'}
[2025-08-21 16:11:03.090][E] -----------------------------------------------------------
[2025-08-21 16:11:03.090][E] Raw response:
[2025-08-21 16:11:03.090][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:11:03 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/99","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1295","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768211.976276.3797037,/bns/we/borg/we/bns/genai-api/prod.genai-api/99,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/8","x-google-gfe-request-trace":"aczrhi10:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/99,aczrhi10:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/8,Mentat oracle: [2002:adf:a2d7:0:b0:3c5:c86:4c55]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CtQCAVSoXO4hNphKAvaL4eiRFMQ81tUVINgOHBaxpMh7O5fWeO-gdpw6KrgWrz6X22O0RZMmFAcT8pO3Sd7YcLHLXfqAxhcd5JhmVpBrUt88xP6g0pGEJ_hrkQzUSHx3sLpjFoa92pUxvzbbxROr7iNRAbIuG4d0vnhUy9VIaHxhC-wuj0G742QXwvgNdPChOfHHMnM87xqAhCrI1aTOUDEPB6LSINARLdKPK9zXQ4i0UMsPmvc8fE2Lgw2neByb0U_3cf4FoKHbOxQ56wbGyQvDvxesVow9XjLYiyFerjx1lfZKBb8cFlrKtVVetWZit4YrX0FkKwVP56UguhkgNbQn_Hv1XVQ_bdaOqzaa3_ECHqNgVP3rC5jHc01duhgNBNnb7-BBzTLQm4TeG6YaU_cNl_0LXPtvkukEBVeigKPp5YdjxeKNCNcsVh6J20eJS145ceGVyg==","function_call":{"args":{"key":"poi"},"name":"map_tool"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":15,"prompt_token_count":2135,"prompt_tokens_details":[{"modality":"TEXT","token_count":2135}],"thoughts_token_count":77,"total_token_count":2227},"automatic_function_calling_history":[]}
[2025-08-21 16:11:03.090][E] -----------------------------------------------------------
[2025-08-21 16:11:03.090][E] 
[2025-08-21 16:11:03.090][E] 2025-08-21 16:11:03,090 - DEBUG - llm_agent.py:447 - Skipping output save for agent root_agent: event authored by inspiration_agent
[2025-08-21 16:11:03.090][E] 2025-08-21 16:11:03,090 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CtQCAVSoXO4hNphKAvaL4eiRFMQ81tUVINgOHBaxpMh7O5fWeO-gdpw6KrgWrz6X22O0RZMmFAcT8pO3Sd7YcLHLXfqAxhcd5JhmVpBrUt88xP6g0pGEJ_hrkQzUSHx3sLpjFoa92pUxvzbbxROr7iNRAbIuG4d0vnhUy9VIaHxhC-wuj0G742QXwvgNdPChOfHHMnM87xqAhCrI1aTOUDEPB6LSINARLdKPK9zXQ4i0UMsPmvc8fE2Lgw2neByb0U_3cf4FoKHbOxQ56wbGyQvDvxesVow9XjLYiyFerjx1lfZKBb8cFlrKtVVetWZit4YrX0FkKwVP56UguhkgNbQn_Hv1XVQ_bdaOqzaa3_ECHqNgVP3rC5jHc01duhgNBNnb7-BBzTLQm4TeG6YaU_cNl_0LXPtvkukEBVeigKPp5YdjxeKNCNcsVh6J20eJS145ceGVyg==","functionCall":{"id":"adk-91313c92-60ea-4552-95c7-243074504855","args":{"key":"poi"},"name":"map_tool"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":15,"promptTokenCount":2135,"promptTokensDetails":[{"modality":"TEXT","tokenCount":2135}],"thoughtsTokenCount":77,"totalTokenCount":2227},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"50a40635-ec3c-452b-8b60-54dcd43bdaab","timestamp":1755785461.642591}
[2025-08-21 16:11:03.094][E] 2025-08-21 16:11:03,094 - DEBUG - connectionpool.py:1049 - Starting new HTTPS connection (1): maps.googleapis.com:443
[2025-08-21 16:11:03.437][E] 2025-08-21 16:11:03,437 - DEBUG - connectionpool.py:544 - https://maps.googleapis.com:443 "GET /maps/api/place/findplacefromtext/json?input=Old+Montreal%2C+Old+Montreal%2C+Quebec%2C+Canada&inputtype=textquery&fields=place_id%2Cformatted_address%2Cname%2Cphotos%2Cgeometry HTTP/1.1" 200 239
[2025-08-21 16:11:03.440][E] 2025-08-21 16:11:03,440 - DEBUG - connectionpool.py:1049 - Starting new HTTPS connection (1): maps.googleapis.com:443
[2025-08-21 16:11:03.721][E] 2025-08-21 16:11:03,721 - DEBUG - connectionpool.py:544 - https://maps.googleapis.com:443 "GET /maps/api/place/findplacefromtext/json?input=Notre-Dame+Basilica+of+Montreal%2C+110+Notre-Dame+St+W%2C+Montreal%2C+Quebec+H2Y+1T1%2C+Canada&inputtype=textquery&fields=place_id%2Cformatted_address%2Cname%2Cphotos%2Cgeometry HTTP/1.1" 200 239
[2025-08-21 16:11:03.723][E] 2025-08-21 16:11:03,723 - DEBUG - connectionpool.py:1049 - Starting new HTTPS connection (1): maps.googleapis.com:443
[2025-08-21 16:11:03.849][E] 2025-08-21 16:11:03,849 - DEBUG - connectionpool.py:544 - https://maps.googleapis.com:443 "GET /maps/api/place/findplacefromtext/json?input=Mount+Royal+Park%2C+1260+Remembrance+Rd%2C+Montreal%2C+Quebec+H3H+1A2%2C+Canada&inputtype=textquery&fields=place_id%2Cformatted_address%2Cname%2Cphotos%2Cgeometry HTTP/1.1" 200 239
[2025-08-21 16:11:03.850][E] 2025-08-21 16:11:03,850 - DEBUG - connectionpool.py:1049 - Starting new HTTPS connection (1): maps.googleapis.com:443
[2025-08-21 16:11:03.975][E] 2025-08-21 16:11:03,975 - DEBUG - connectionpool.py:544 - https://maps.googleapis.com:443 "GET /maps/api/place/findplacefromtext/json?input=Plateau+Mont-Royal%2C+Plateau+Mont-Royal%2C+Montreal%2C+Quebec%2C+Canada&inputtype=textquery&fields=place_id%2Cformatted_address%2Cname%2Cphotos%2Cgeometry HTTP/1.1" 200 239
[2025-08-21 16:11:03.976][E] 2025-08-21 16:11:03,976 - DEBUG - connectionpool.py:1049 - Starting new HTTPS connection (1): maps.googleapis.com:443
[2025-08-21 16:11:04.253][E] 2025-08-21 16:11:04,253 - DEBUG - connectionpool.py:544 - https://maps.googleapis.com:443 "GET /maps/api/place/findplacefromtext/json?input=Jean-Talon+Market%2C+7070+Henri+Julien+Ave%2C+Montreal%2C+Quebec+H2S+3S3%2C+Canada&inputtype=textquery&fields=place_id%2Cformatted_address%2Cname%2Cphotos%2Cgeometry HTTP/1.1" 200 239
[2025-08-21 16:11:04.254][E] 2025-08-21 16:11:04,254 - DEBUG - llm_agent.py:447 - Skipping output save for agent root_agent: event authored by inspiration_agent
[2025-08-21 16:11:04.254][E] 2025-08-21 16:11:04,254 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-91313c92-60ea-4552-95c7-243074504855","name":"map_tool","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":null,"place_id":null},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":null,"place_id":null},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":null,"place_id":null},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":null,"place_id":null},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":null,"place_id":null}]}}}],"role":"user"},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"8b93d6b8-7ecd-48e1-94bd-43f793d9a33b","timestamp":1755785464.254225}
[2025-08-21 16:11:04.287][E] 2025-08-21 16:11:04,287 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:11:04.287][E] 2025-08-21 16:11:04,287 - DEBUG - google_llm.py:117 -
[2025-08-21 16:11:04.287][E] LLM Request:
[2025-08-21 16:11:04.287][E] -----------------------------------------------------------
[2025-08-21 16:11:04.287][E] System Instruction:
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] You are travel inspiration agent who help users find their next big dream vacation destinations.
[2025-08-21 16:11:04.287][E] Your role and goal is to help the user identify a destination and a few activities at the destination the user is interested in.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] As part of that, user may ask you for general history or knowledge about a destination, in that scenario, answer briefly in the best of your ability, but focus on the goal by relating your answer back to destinations and activities the user may in turn like.
[2025-08-21 16:11:04.287][E] - You will call the two agent tool `place_agent(inspiration query)` and `poi_agent(destination)` when appropriate:
[2025-08-21 16:11:04.287][E] - Use `place_agent` to recommend general vacation destinations given vague ideas, be it a city, a region, a country.
[2025-08-21 16:11:04.287][E] - Use `poi_agent` to provide points of interests and acitivities suggestions, once the user has a specific city or region in mind.
[2025-08-21 16:11:04.287][E] - Everytime after `poi_agent` is invoked, call `map_tool` with the key being `poi` to verify the latitude and longitudes.
[2025-08-21 16:11:04.287][E] - Avoid asking too many questions. When user gives instructions like "inspire me", or "suggest some", just go ahead and call `place_agent`.
[2025-08-21 16:11:04.287][E] - As follow up, you may gather a few information from the user to future their vacation inspirations.
[2025-08-21 16:11:04.287][E] - Once the user selects their destination, then you help them by providing granular insights by being their personal local travel guide
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] - Here's the optimal flow:
[2025-08-21 16:11:04.287][E] - inspire user for a dream vacation
[2025-08-21 16:11:04.287][E] - show them interesting things to do for the selected location
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] - Your role is only to identify possible destinations and acitivites.
[2025-08-21 16:11:04.287][E] - Do not attempt to assume the role of `place_agent` and `poi_agent`, use them instead.
[2025-08-21 16:11:04.287][E] - Do not attempt to plan an itinerary for the user with start dates and details, leave that to the planning_agent.
[2025-08-21 16:11:04.287][E] - Transfer the user to planning_agent once the user wants to:
[2025-08-21 16:11:04.287][E] - Enumerate a more detailed full itinerary,
[2025-08-21 16:11:04.287][E] - Looking for flights and hotels deals.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] - Please use the context info below for any user preferences:
[2025-08-21 16:11:04.287][E] Current user:
[2025-08-21 16:11:04.287][E] <user_profile>
[2025-08-21 16:11:04.287][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:11:04.287][E] </user_profile>
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] You are an agent. Your internal name is "inspiration_agent".
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] The description about you is "A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,"
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] You have a list of other agents to transfer to:
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: root_agent
[2025-08-21 16:11:04.287][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: planning_agent
[2025-08-21 16:11:04.287][E] Agent description: Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: booking_agent
[2025-08-21 16:11:04.287][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: pre_trip_agent
[2025-08-21 16:11:04.287][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: in_trip_agent
[2025-08-21 16:11:04.287][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] Agent name: post_trip_agent
[2025-08-21 16:11:04.287][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.287][E] 
[2025-08-21 16:11:04.288][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:11:04.288][E] can answer it.
[2025-08-21 16:11:04.288][E] 
[2025-08-21 16:11:04.288][E] If another agent is better for answering the question according to its
[2025-08-21 16:11:04.288][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:11:04.288][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:11:04.288][E] the function call.
[2025-08-21 16:11:04.288][E] 
[2025-08-21 16:11:04.288][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:11:04.288][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:11:04.288][E] to your parent agent.
[2025-08-21 16:11:04.288][E] 
[2025-08-21 16:11:04.288][E] -----------------------------------------------------------
[2025-08-21 16:11:04.288][E] Contents:
[2025-08-21 16:11:04.288][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:11:04.288][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:11:04.288][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:11:04.288][E] {"parts":[{"thought_signature":"Cs4DAVSoXO4s4WN_hI5aQ9mOfT0C98aEawGQGS6QfVAGZEfzQXHgz8wEN-2mOMhYGb-uyeHOWJqZZ1b64sB0wrIECIcHBO6EdCjp6JWCM6QZLbjaDaegdoh9fbK3EoTBFv4gguqtT1o_xYhxU1qGx6o7xvJa_vNGx7n8r0Iy6JHukLvtUwy-BIju-pwOr027pEhjXDPzdrCwFOw1UISNTdjoqIW6QxwUuC9sru92IPh5aNOLd9W5EwE9UazQ8Tf88U-VYpNzxlsOtlV7CokTHui7_gM1ME1S2ZwQZX8-H1tklTlUHKaPW5tT9ZO7u3FfKcLOuIq1JnQd25271fD17vfRYKl_y1lYm_VrwFO2LPvez4Y9HxSIjKiJHB_Bz3RVcTXENlXEoz0mQFI9I1-WPo3glwULxSCw-sZwIQYDaldxrafcUg6cRRHczu2iSiTzWlfM7GmAcrzndDmZZh6ueTQcQn6LsKzTPZh7yTz99QQJFwB-Vst3RxZTfuErsqlkwIs46yunGJ_4YWDEbaifo-wBB7FN0NNONUCR_SvkxW7nv28KnuKRkqlpi8ic8C8HNqkKx7cniidOzB3cNMuFcD_rrzy5K2pZ1yEL2HocaXRY","function_call":{"args":{"request":"Montreal"},"name":"poi_agent"}}],"role":"model"}
[2025-08-21 16:11:04.288][E] {"parts":[{"function_response":{"name":"poi_agent","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}}}],"role":"user"}
[2025-08-21 16:11:04.288][E] {"parts":[{"thought_signature":"CtQCAVSoXO4hNphKAvaL4eiRFMQ81tUVINgOHBaxpMh7O5fWeO-gdpw6KrgWrz6X22O0RZMmFAcT8pO3Sd7YcLHLXfqAxhcd5JhmVpBrUt88xP6g0pGEJ_hrkQzUSHx3sLpjFoa92pUxvzbbxROr7iNRAbIuG4d0vnhUy9VIaHxhC-wuj0G742QXwvgNdPChOfHHMnM87xqAhCrI1aTOUDEPB6LSINARLdKPK9zXQ4i0UMsPmvc8fE2Lgw2neByb0U_3cf4FoKHbOxQ56wbGyQvDvxesVow9XjLYiyFerjx1lfZKBb8cFlrKtVVetWZit4YrX0FkKwVP56UguhkgNbQn_Hv1XVQ_bdaOqzaa3_ECHqNgVP3rC5jHc01duhgNBNnb7-BBzTLQm4TeG6YaU_cNl_0LXPtvkukEBVeigKPp5YdjxeKNCNcsVh6J20eJS145ceGVyg==","function_call":{"args":{"key":"poi"},"name":"map_tool"}}],"role":"model"}
[2025-08-21 16:11:04.288][E] {"parts":[{"function_response":{"name":"map_tool","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":null,"place_id":null},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":null,"place_id":null},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":null,"place_id":null},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":null,"place_id":null},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":null,"place_id":null}]}}}],"role":"user"}
[2025-08-21 16:11:04.288][E] -----------------------------------------------------------
[2025-08-21 16:11:04.288][E] Functions:
[2025-08-21 16:11:04.288][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:04.288][E] place_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:04.288][E] poi_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:04.288][E] map_tool: {'key': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:11:04.288][E] -----------------------------------------------------------
[2025-08-21 16:11:04.288][E] 
[2025-08-21 16:11:04.288][E] 2025-08-21 16:11:04,287 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:11:04.288][E] 2025-08-21 16:11:04,288 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:11:04.288][E] 2025-08-21 16:11:04,288 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:11:04.289][E] 2025-08-21 16:11:04,289 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:11:04.308][E] 2025-08-21 16:11:04,308 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e25eb0>
[2025-08-21 16:11:04.308][E] 2025-08-21 16:11:04,308 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125cd01d0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:11:04.341][E] 2025-08-21 16:11:04,341 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x124d92d80>
[2025-08-21 16:11:04.342][E] 2025-08-21 16:11:04,341 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:11:04.342][E] 2025-08-21 16:11:04,342 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:11:04.342][E] 2025-08-21 16:11:04,342 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:11:04.342][E] 2025-08-21 16:11:04,342 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:11:04.342][E] 2025-08-21 16:11:04,342 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:11:05.882][E] 2025-08-21 16:11:05,881 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:11:05 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/63'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=1516'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768205.676388.7572,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/24'), (b'X-Google-GFE-Request-Trace', b'aczrhi13:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,aczrhi13:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/24,Mentat oracle: [2002:a05:6002:20d:b0:379:8a66:7bc0]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:11:05.882][E] 2025-08-21 16:11:05,882 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:11:05.883][E] 2025-08-21 16:11:05,883 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:11:05.884][E] 2025-08-21 16:11:05,883 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:11:05.884][E] 2025-08-21 16:11:05,884 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:11:05.884][E] 2025-08-21 16:11:05,884 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:11:05.885][E] 2025-08-21 16:11:05,885 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:11:05.886][E] 2025-08-21 16:11:05,886 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:11:05.886][E] 2025-08-21 16:11:05,886 - DEBUG - google_llm.py:204 -
[2025-08-21 16:11:05.886][E] LLM Response:
[2025-08-21 16:11:05.886][E] -----------------------------------------------------------
[2025-08-21 16:11:05.886][E] Text:
[2025-08-21 16:11:05.886][E] Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:
[2025-08-21 16:11:05.886][E] 
[2025-08-21 16:11:05.886][E] *   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.
[2025-08-21 16:11:05.886][E] *   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.
[2025-08-21 16:11:05.886][E] *   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.
[2025-08-21 16:11:05.886][E] *   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.
[2025-08-21 16:11:05.886][E] *   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.
[2025-08-21 16:11:05.886][E] 
[2025-08-21 16:11:05.886][E] Would you like to know more about any of these places, or would you like me to help you plan your trip in more detail?
[2025-08-21 16:11:05.886][E] -----------------------------------------------------------
[2025-08-21 16:11:05.886][E] Function calls:
[2025-08-21 16:11:05.886][E] 
[2025-08-21 16:11:05.886][E] -----------------------------------------------------------
[2025-08-21 16:11:05.886][E] Raw response:
[2025-08-21 16:11:05.886][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:11:05 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/63","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1516","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768205.676388.7572,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/24","x-google-gfe-request-trace":"aczrhi13:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/63,aczrhi13:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/24,Mentat oracle: [2002:a05:6002:20d:b0:379:8a66:7bc0]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CsIDAVSoXO6svvYwoTNYNhJLbcMZ8KHBzVnev6t9mwwby0xvk96KuROS-iZZkoE3VSeGCf8fsflGa3AIwKu7qDroL4prOf9qXoFgLEF_UkaLk8K4bBOl14vIjgj1laMfaRzWhvZ_vFNhZyWpepkGdXvuRZs5Z2hE__5xVWqZ3-W903Qr1ZufRccLRCz4DHhpt6NTFVVZYf67J5e81Jn52gSpwMs1PlBI5i5ukeKOvkB5xGWy3E9rlyR1YCnc0Yj5EKcljM4tEYIMcMURiPFEIV6mphaPiaWXLmtiF5EMcAw5NirBhet25c8yuTuNjVmI_FsLnG9DX1z8VW50dKvRqug1WNmcJID31tSSi_Mds2KBz5vtz12ZPHOhT5UTR6EpvwDTv2MhunlLkPtnygYQN8n3QdTPAJqooqt0f8b3D3kwjPgo6YVBciW0PPVcPZHbKkneK5X2OvTw0xNWscFht3AIy_paUKQwGy2qevFseSmHJ-7rM0aX6dizIlji7-VLy--jW6R9YzFS-cwzxsWeqaihIb6KbIxS7zPVKhgXcDGNGMMGJrNjWQwQKFjYD3bpflIsKQ-y2ivixrbZ7lDzMhItPp0v","text":"Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"cache_tokens_details":[{"modality":"TEXT","token_count":849}],"cached_content_token_count":849,"candidates_token_count":187,"prompt_token_count":2961,"prompt_tokens_details":[{"modality":"TEXT","token_count":2961}],"thoughts_token_count":90,"total_token_count":3238},"automatic_function_calling_history":[]}
[2025-08-21 16:11:05.886][E] -----------------------------------------------------------
[2025-08-21 16:11:05.886][E] 
[2025-08-21 16:11:05.887][E] 2025-08-21 16:11:05,887 - DEBUG - llm_agent.py:447 - Skipping output save for agent root_agent: event authored by inspiration_agent
[2025-08-21 16:11:05.887][E] 2025-08-21 16:11:05,887 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CsIDAVSoXO6svvYwoTNYNhJLbcMZ8KHBzVnev6t9mwwby0xvk96KuROS-iZZkoE3VSeGCf8fsflGa3AIwKu7qDroL4prOf9qXoFgLEF_UkaLk8K4bBOl14vIjgj1laMfaRzWhvZ_vFNhZyWpepkGdXvuRZs5Z2hE__5xVWqZ3-W903Qr1ZufRccLRCz4DHhpt6NTFVVZYf67J5e81Jn52gSpwMs1PlBI5i5ukeKOvkB5xGWy3E9rlyR1YCnc0Yj5EKcljM4tEYIMcMURiPFEIV6mphaPiaWXLmtiF5EMcAw5NirBhet25c8yuTuNjVmI_FsLnG9DX1z8VW50dKvRqug1WNmcJID31tSSi_Mds2KBz5vtz12ZPHOhT5UTR6EpvwDTv2MhunlLkPtnygYQN8n3QdTPAJqooqt0f8b3D3kwjPgo6YVBciW0PPVcPZHbKkneK5X2OvTw0xNWscFht3AIy_paUKQwGy2qevFseSmHJ-7rM0aX6dizIlji7-VLy--jW6R9YzFS-cwzxsWeqaihIb6KbIxS7zPVKhgXcDGNGMMGJrNjWQwQKFjYD3bpflIsKQ-y2ivixrbZ7lDzMhItPp0v","text":"Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"model"},"usageMetadata":{"cacheTokensDetails":[{"modality":"TEXT","tokenCount":849}],"cachedContentTokenCount":849,"candidatesTokenCount":187,"promptTokenCount":2961,"promptTokensDetails":[{"modality":"TEXT","tokenCount":2961}],"thoughtsTokenCount":90,"totalTokenCount":3238},"invocationId":"e-082e977b-5296-4512-93b5-add2e6dee97b","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"2d7af99f-145b-40d6-9f82-7963667b4fbf","timestamp":1755785464.256055}
[2025-08-21 16:11:05.893][E] 2025-08-21 16:11:05,893 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:11:05.893][E] 2025-08-21 16:11:05,893 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:11:05.894][E] 2025-08-21 16:11:05,894 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:11:05.894][E] 2025-08-21 16:11:05,894 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:15:58.316][E] 2025-08-21 16:15:58,316 - INFO - envs.py:54 - No .env file found for travel_concierge
[2025-08-21 16:15:58.360][E] 2025-08-21 16:15:58,360 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:15:58.360][E] 2025-08-21 16:15:58,360 - DEBUG - google_llm.py:117 -
[2025-08-21 16:15:58.360][E] LLM Request:
[2025-08-21 16:15:58.360][E] -----------------------------------------------------------
[2025-08-21 16:15:58.360][E] System Instruction:
[2025-08-21 16:15:58.360][E] 
[2025-08-21 16:15:58.360][E] You are travel inspiration agent who help users find their next big dream vacation destinations.
[2025-08-21 16:15:58.360][E] Your role and goal is to help the user identify a destination and a few activities at the destination the user is interested in.
[2025-08-21 16:15:58.360][E] 
[2025-08-21 16:15:58.360][E] As part of that, user may ask you for general history or knowledge about a destination, in that scenario, answer briefly in the best of your ability, but focus on the goal by relating your answer back to destinations and activities the user may in turn like.
[2025-08-21 16:15:58.360][E] - You will call the two agent tool `place_agent(inspiration query)` and `poi_agent(destination)` when appropriate:
[2025-08-21 16:15:58.360][E] - Use `place_agent` to recommend general vacation destinations given vague ideas, be it a city, a region, a country.
[2025-08-21 16:15:58.360][E] - Use `poi_agent` to provide points of interests and acitivities suggestions, once the user has a specific city or region in mind.
[2025-08-21 16:15:58.360][E] - Everytime after `poi_agent` is invoked, call `map_tool` with the key being `poi` to verify the latitude and longitudes.
[2025-08-21 16:15:58.360][E] - Avoid asking too many questions. When user gives instructions like "inspire me", or "suggest some", just go ahead and call `place_agent`.
[2025-08-21 16:15:58.360][E] - As follow up, you may gather a few information from the user to future their vacation inspirations.
[2025-08-21 16:15:58.360][E] - Once the user selects their destination, then you help them by providing granular insights by being their personal local travel guide
[2025-08-21 16:15:58.360][E] 
[2025-08-21 16:15:58.360][E] - Here's the optimal flow:
[2025-08-21 16:15:58.360][E] - inspire user for a dream vacation
[2025-08-21 16:15:58.360][E] - show them interesting things to do for the selected location
[2025-08-21 16:15:58.360][E] 
[2025-08-21 16:15:58.360][E] - Your role is only to identify possible destinations and acitivites.
[2025-08-21 16:15:58.360][E] - Do not attempt to assume the role of `place_agent` and `poi_agent`, use them instead.
[2025-08-21 16:15:58.360][E] - Do not attempt to plan an itinerary for the user with start dates and details, leave that to the planning_agent.
[2025-08-21 16:15:58.360][E] - Transfer the user to planning_agent once the user wants to:
[2025-08-21 16:15:58.360][E] - Enumerate a more detailed full itinerary,
[2025-08-21 16:15:58.360][E] - Looking for flights and hotels deals.
[2025-08-21 16:15:58.360][E] 
[2025-08-21 16:15:58.360][E] - Please use the context info below for any user preferences:
[2025-08-21 16:15:58.360][E] Current user:
[2025-08-21 16:15:58.360][E] <user_profile>
[2025-08-21 16:15:58.361][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:15:58.361][E] </user_profile>
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] You are an agent. Your internal name is "inspiration_agent".
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] The description about you is "A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,"
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] You have a list of other agents to transfer to:
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: root_agent
[2025-08-21 16:15:58.361][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: planning_agent
[2025-08-21 16:15:58.361][E] Agent description: Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: booking_agent
[2025-08-21 16:15:58.361][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: pre_trip_agent
[2025-08-21 16:15:58.361][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: in_trip_agent
[2025-08-21 16:15:58.361][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Agent name: post_trip_agent
[2025-08-21 16:15:58.361][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:15:58.361][E] can answer it.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] If another agent is better for answering the question according to its
[2025-08-21 16:15:58.361][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:15:58.361][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:15:58.361][E] the function call.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:15:58.361][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:15:58.361][E] to your parent agent.
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] -----------------------------------------------------------
[2025-08-21 16:15:58.361][E] Contents:
[2025-08-21 16:15:58.361][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:15:58.361][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:15:58.361][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:15:58.361][E] {"parts":[{"thought_signature":"Cs4DAVSoXO4s4WN_hI5aQ9mOfT0C98aEawGQGS6QfVAGZEfzQXHgz8wEN-2mOMhYGb-uyeHOWJqZZ1b64sB0wrIECIcHBO6EdCjp6JWCM6QZLbjaDaegdoh9fbK3EoTBFv4gguqtT1o_xYhxU1qGx6o7xvJa_vNGx7n8r0Iy6JHukLvtUwy-BIju-pwOr027pEhjXDPzdrCwFOw1UISNTdjoqIW6QxwUuC9sru92IPh5aNOLd9W5EwE9UazQ8Tf88U-VYpNzxlsOtlV7CokTHui7_gM1ME1S2ZwQZX8-H1tklTlUHKaPW5tT9ZO7u3FfKcLOuIq1JnQd25271fD17vfRYKl_y1lYm_VrwFO2LPvez4Y9HxSIjKiJHB_Bz3RVcTXENlXEoz0mQFI9I1-WPo3glwULxSCw-sZwIQYDaldxrafcUg6cRRHczu2iSiTzWlfM7GmAcrzndDmZZh6ueTQcQn6LsKzTPZh7yTz99QQJFwB-Vst3RxZTfuErsqlkwIs46yunGJ_4YWDEbaifo-wBB7FN0NNONUCR_SvkxW7nv28KnuKRkqlpi8ic8C8HNqkKx7cniidOzB3cNMuFcD_rrzy5K2pZ1yEL2HocaXRY","function_call":{"args":{"request":"Montreal"},"name":"poi_agent"}}],"role":"model"}
[2025-08-21 16:15:58.361][E] {"parts":[{"function_response":{"name":"poi_agent","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":"","place_id":""},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":"","place_id":""},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":"","place_id":""},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":"","place_id":""},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":"","place_id":""}]}}}],"role":"user"}
[2025-08-21 16:15:58.361][E] {"parts":[{"thought_signature":"CtQCAVSoXO4hNphKAvaL4eiRFMQ81tUVINgOHBaxpMh7O5fWeO-gdpw6KrgWrz6X22O0RZMmFAcT8pO3Sd7YcLHLXfqAxhcd5JhmVpBrUt88xP6g0pGEJ_hrkQzUSHx3sLpjFoa92pUxvzbbxROr7iNRAbIuG4d0vnhUy9VIaHxhC-wuj0G742QXwvgNdPChOfHHMnM87xqAhCrI1aTOUDEPB6LSINARLdKPK9zXQ4i0UMsPmvc8fE2Lgw2neByb0U_3cf4FoKHbOxQ56wbGyQvDvxesVow9XjLYiyFerjx1lfZKBb8cFlrKtVVetWZit4YrX0FkKwVP56UguhkgNbQn_Hv1XVQ_bdaOqzaa3_ECHqNgVP3rC5jHc01duhgNBNnb7-BBzTLQm4TeG6YaU_cNl_0LXPtvkukEBVeigKPp5YdjxeKNCNcsVh6J20eJS145ceGVyg==","function_call":{"args":{"key":"poi"},"name":"map_tool"}}],"role":"model"}
[2025-08-21 16:15:58.361][E] {"parts":[{"function_response":{"name":"map_tool","response":{"places":[{"place_name":"Old Montreal","address":"Old Montreal, Quebec, Canada","lat":"45.5058","long":"-73.5552","review_ratings":"4.8","highlights":"Historic district with cobblestone streets, old architecture, and charming boutiques.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg","map_url":null,"place_id":null},{"place_name":"Notre-Dame Basilica of Montreal","address":"110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada","lat":"45.5085","long":"-73.5574","review_ratings":"4.7","highlights":"Stunning Gothic Revival church with intricate interiors and a beautiful light show.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg","map_url":null,"place_id":null},{"place_name":"Mount Royal Park","address":"1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada","lat":"45.5039","long":"-73.5878","review_ratings":"4.8","highlights":"Large urban park offering panoramic city views, walking trails, and recreational activities.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg","map_url":null,"place_id":null},{"place_name":"Plateau Mont-Royal","address":"Plateau Mont-Royal, Montreal, Quebec, Canada","lat":"45.5250","long":"-73.5850","review_ratings":"4.7","highlights":"Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg","map_url":null,"place_id":null},{"place_name":"Jean-Talon Market","address":"7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada","lat":"45.5392","long":"-73.6136","review_ratings":"4.7","highlights":"Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.","image_url":"https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg","map_url":null,"place_id":null}]}}}],"role":"user"}
[2025-08-21 16:15:58.361][E] {"parts":[{"thought_signature":"CsIDAVSoXO6svvYwoTNYNhJLbcMZ8KHBzVnev6t9mwwby0xvk96KuROS-iZZkoE3VSeGCf8fsflGa3AIwKu7qDroL4prOf9qXoFgLEF_UkaLk8K4bBOl14vIjgj1laMfaRzWhvZ_vFNhZyWpepkGdXvuRZs5Z2hE__5xVWqZ3-W903Qr1ZufRccLRCz4DHhpt6NTFVVZYf67J5e81Jn52gSpwMs1PlBI5i5ukeKOvkB5xGWy3E9rlyR1YCnc0Yj5EKcljM4tEYIMcMURiPFEIV6mphaPiaWXLmtiF5EMcAw5NirBhet25c8yuTuNjVmI_FsLnG9DX1z8VW50dKvRqug1WNmcJID31tSSi_Mds2KBz5vtz12ZPHOhT5UTR6EpvwDTv2MhunlLkPtnygYQN8n3QdTPAJqooqt0f8b3D3kwjPgo6YVBciW0PPVcPZHbKkneK5X2OvTw0xNWscFht3AIy_paUKQwGy2qevFseSmHJ-7rM0aX6dizIlji7-VLy--jW6R9YzFS-cwzxsWeqaihIb6KbIxS7zPVKhgXcDGNGMMGJrNjWQwQKFjYD3bpflIsKQ-y2ivixrbZ7lDzMhItPp0v","text":"Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"model"}
[2025-08-21 16:15:58.361][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:15:58.361][E] -----------------------------------------------------------
[2025-08-21 16:15:58.361][E] Functions:
[2025-08-21 16:15:58.361][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:58.361][E] place_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:58.361][E] poi_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:58.361][E] map_tool: {'key': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:58.361][E] -----------------------------------------------------------
[2025-08-21 16:15:58.361][E] 
[2025-08-21 16:15:58.361][E] 2025-08-21 16:15:58,360 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:15:58.363][E] 2025-08-21 16:15:58,363 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:15:58.384][E] 2025-08-21 16:15:58,384 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e26a50>
[2025-08-21 16:15:58.384][E] 2025-08-21 16:15:58,384 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125c9e5d0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125c29430>
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:15:58.419][E] 2025-08-21 16:15:58,419 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:15:59.527][E] 2025-08-21 16:15:59,527 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:15:59 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/29'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=1087'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755767151.193689.3110341,/bns/we/borg/we/bns/genai-api/prod.genai-api/29,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47'), (b'X-Google-GFE-Request-Trace', b'aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/29,aczrhi8:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47,Mentat oracle: [2002:a05:600c:3b06:b0:458:b4a0:b505]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:15:59.528][E] 2025-08-21 16:15:59,528 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:15:59.528][E] 2025-08-21 16:15:59,528 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:15:59.528][E] 2025-08-21 16:15:59,528 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:15:59.528][E] 2025-08-21 16:15:59,528 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:15:59.529][E] 2025-08-21 16:15:59,529 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:15:59.530][E] 2025-08-21 16:15:59,530 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:15:59.530][E] 2025-08-21 16:15:59,530 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:15:59.530][E] 2025-08-21 16:15:59,530 - DEBUG - google_llm.py:204 -
[2025-08-21 16:15:59.530][E] LLM Response:
[2025-08-21 16:15:59.530][E] -----------------------------------------------------------
[2025-08-21 16:15:59.530][E] Text:
[2025-08-21 16:15:59.530][E] None
[2025-08-21 16:15:59.530][E] -----------------------------------------------------------
[2025-08-21 16:15:59.531][E] Function calls:
[2025-08-21 16:15:59.531][E] name: transfer_to_agent, args: {'agent_name': 'planning_agent'}
[2025-08-21 16:15:59.531][E] -----------------------------------------------------------
[2025-08-21 16:15:59.531][E] Raw response:
[2025-08-21 16:15:59.531][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:15:59 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/29","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1087","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755767151.193689.3110341,/bns/we/borg/we/bns/genai-api/prod.genai-api/29,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47","x-google-gfe-request-trace":"aczrhi8:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/29,aczrhi8:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/47,Mentat oracle: [2002:a05:600c:3b06:b0:458:b4a0:b505]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"Cp8FAVSoXO60NDd5-ZQB077FUik6kPeBRMpaln55-GiwyAE4nNTarVWgnS4Zj0Ig-N285Lypv_7Ys6rdbBvkh37pb-L104DeSGSeTDrW_Jws7boH-Cmkbq0pKuz9QST2NuIQX38H_FTtfYVRb0HZ0d08y3hZFYxLaa-qwSaFf_3XhLKboAFmazVv4iGVn2tGUcHQVc5vQkBS6AtGnw_2EZ6rXlSi8m4wg6tyOssyAunlADq9qQSLUU1DgjRN8LxnpC4_y7JTbS5OXBYsP8Bg10i0WmozeL264GzL2WwJYSs5wTLB01qVwIfvbtDiyO-PawIxxgp4dotxzjoCVLZYp2fGUmJ47f2Gb-qsDgtIMHYqQSq3X7m15n_8POsS1MIiWSJz2V7z6uX4Yc_6wtUH9UYd8bYlcZCCqSVVRLO63VxH1SX4I0vTtHyWXwQTJLY6I-CxgiCzCJ8skc09eetSA2RszqmRFCegbDJomygAG2M6bfYT9JVL0X5Bf4Rla-YYx4ae57LNV3RCxSGi7l1bCXxGSzcOhjw1fq0gxWC09jJvMj8piw3upKvNOoS1A5rTBeD4JOZw0Ixp0evvPJjpdV4N0evJLFqlDJAvU_1oqINq8HYqhwknnRM-_IoS_4mv4YTzuiDMejmHAD-51vEL63smPTDP985E5LMPGHQcgJvoUL0kO07zuRmdSN7nVQVLMz22SO-INBzvp83DvZ5d2rEwpF9GRd164twndb8IW-MXsi8mE8BIfeWXvUKzJVLOScjsKerUGu9mbpyIO7CdVYMXRmf_W3Fcu6J19G81Jf_RrqblViy4CXCm-KCGnkd-mjOuu6FZRvpAg3xtSo2hLIGJfXJ8FkWJPxjiMHXcqEKqttImsFNUJKOryCW04GzwwNQ=","function_call":{"args":{"agent_name":"planning_agent"},"name":"transfer_to_agent"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":21,"prompt_token_count":3169,"prompt_tokens_details":[{"modality":"TEXT","token_count":3169}],"thoughts_token_count":130,"total_token_count":3320},"automatic_function_calling_history":[]}
[2025-08-21 16:15:59.531][E] -----------------------------------------------------------
[2025-08-21 16:15:59.531][E] 
[2025-08-21 16:15:59.531][E] 2025-08-21 16:15:59,531 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"Cp8FAVSoXO60NDd5-ZQB077FUik6kPeBRMpaln55-GiwyAE4nNTarVWgnS4Zj0Ig-N285Lypv_7Ys6rdbBvkh37pb-L104DeSGSeTDrW_Jws7boH-Cmkbq0pKuz9QST2NuIQX38H_FTtfYVRb0HZ0d08y3hZFYxLaa-qwSaFf_3XhLKboAFmazVv4iGVn2tGUcHQVc5vQkBS6AtGnw_2EZ6rXlSi8m4wg6tyOssyAunlADq9qQSLUU1DgjRN8LxnpC4_y7JTbS5OXBYsP8Bg10i0WmozeL264GzL2WwJYSs5wTLB01qVwIfvbtDiyO-PawIxxgp4dotxzjoCVLZYp2fGUmJ47f2Gb-qsDgtIMHYqQSq3X7m15n_8POsS1MIiWSJz2V7z6uX4Yc_6wtUH9UYd8bYlcZCCqSVVRLO63VxH1SX4I0vTtHyWXwQTJLY6I-CxgiCzCJ8skc09eetSA2RszqmRFCegbDJomygAG2M6bfYT9JVL0X5Bf4Rla-YYx4ae57LNV3RCxSGi7l1bCXxGSzcOhjw1fq0gxWC09jJvMj8piw3upKvNOoS1A5rTBeD4JOZw0Ixp0evvPJjpdV4N0evJLFqlDJAvU_1oqINq8HYqhwknnRM-_IoS_4mv4YTzuiDMejmHAD-51vEL63smPTDP985E5LMPGHQcgJvoUL0kO07zuRmdSN7nVQVLMz22SO-INBzvp83DvZ5d2rEwpF9GRd164twndb8IW-MXsi8mE8BIfeWXvUKzJVLOScjsKerUGu9mbpyIO7CdVYMXRmf_W3Fcu6J19G81Jf_RrqblViy4CXCm-KCGnkd-mjOuu6FZRvpAg3xtSo2hLIGJfXJ8FkWJPxjiMHXcqEKqttImsFNUJKOryCW04GzwwNQ=","functionCall":{"id":"adk-08b81783-ba08-4d35-86a9-5953f7ae3a24","args":{"agent_name":"planning_agent"},"name":"transfer_to_agent"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":21,"promptTokenCount":3169,"promptTokensDetails":[{"modality":"TEXT","tokenCount":3169}],"thoughtsTokenCount":130,"totalTokenCount":3320},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"e45a2e49-aa8c-4c47-9e18-404f3bca7eac","timestamp":1755785758.319119}
[2025-08-21 16:15:59.532][E] 2025-08-21 16:15:59,532 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-08b81783-ba08-4d35-86a9-5953f7ae3a24","name":"transfer_to_agent","response":{"result":null}}}],"role":"user"},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"inspiration_agent","actions":{"stateDelta":{},"artifactDelta":{},"transferToAgent":"planning_agent","requestedAuthConfigs":{}},"id":"43e1d1e6-ea5e-4a90-98d6-bb35994bd97f","timestamp":1755785759.532419}
[2025-08-21 16:15:59.575][E] 2025-08-21 16:15:59,574 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:15:59.575][E] 2025-08-21 16:15:59,575 - DEBUG - google_llm.py:117 -
[2025-08-21 16:15:59.575][E] LLM Request:
[2025-08-21 16:15:59.575][E] -----------------------------------------------------------
[2025-08-21 16:15:59.575][E] System Instruction:
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] You are a travel planning agent who help users finding best deals for flights, hotels, and constructs full itineraries for their vacation.
[2025-08-21 16:15:59.575][E] You do not handle any bookings. You are helping users with their selections and preferences only.
[2025-08-21 16:15:59.575][E] The actual booking, payment and transactions will be handled by transfering to the `booking_agent` later.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] You support a number of user journeys:
[2025-08-21 16:15:59.575][E] - Just need to find flights,
[2025-08-21 16:15:59.575][E] - Just need to find hotels,
[2025-08-21 16:15:59.575][E] - Find flights and hotels but without itinerary,
[2025-08-21 16:15:59.575][E] - Find flights, hotels with an full itinerary,
[2025-08-21 16:15:59.575][E] - Autonomously help the user find flights and hotels.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] You have access to the following tools only:
[2025-08-21 16:15:59.575][E] - Use the `flight_search_agent` tool to find flight choices,
[2025-08-21 16:15:59.575][E] - Use the `flight_seat_selection_agent` tool to find seat choices,
[2025-08-21 16:15:59.575][E] - Use the `hotel_search_agent` tool to find hotel choices,
[2025-08-21 16:15:59.575][E] - Use the `hotel_room_selection_agent` tool to find room choices,
[2025-08-21 16:15:59.575][E] - Use the `itinerary_agent` tool to generate an itinerary, and
[2025-08-21 16:15:59.575][E] - Use the `memorize` tool to remember the user's chosen selections.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] How to support the user journeys:
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] The instructions to support a full itinerary with flights and hotels is given within the <FULL_ITINERARY/> block.
[2025-08-21 16:15:59.575][E] For user journeys there only contains flights or hotels, use instructions from the <FIND_FLIGHTS/> and <FIND_HOTELS/> blocks accordingly for the identified user journey.
[2025-08-21 16:15:59.575][E] Identify the user journey under which the user is referred to you; Satisfy the user's need matching the user journey.
[2025-08-21 16:15:59.575][E] When you are being asked to act autonomously:
[2025-08-21 16:15:59.575][E] - you assume the role of the user temporarily,
[2025-08-21 16:15:59.575][E] - you can make decision on selecting flights, seats, hotels, and rooms, base on user's preferences,
[2025-08-21 16:15:59.575][E] - if you made a choice base on user's preference, briefly mention the rationale.
[2025-08-21 16:15:59.575][E] - but do not proceed to booking.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Instructions for different user journeys:
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] <FULL_ITINERARY>
[2025-08-21 16:15:59.575][E] You are creating a full plan with flights and hotel choices,
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:15:59.575][E] <origin></origin>
[2025-08-21 16:15:59.575][E] <destination></destination>
[2025-08-21 16:15:59.575][E] <start_date></start_date>
[2025-08-21 16:15:59.575][E] <end_date></end_date>
[2025-08-21 16:15:59.575][E] <itinerary>
[2025-08-21 16:15:59.575][E] {}
[2025-08-21 16:15:59.575][E] <itinerary>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Current time: 2025-08-21 16:10:54.020572; Infer the current Year from the time.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Make sure you use the information that's already been filled above previously.
[2025-08-21 16:15:59.575][E] - If <destination/> is empty, you can derive the destination base on the dialog so far.
[2025-08-21 16:15:59.575][E] - Ask for missing information from the user, for example, the start date and the end date of the trip.
[2025-08-21 16:15:59.575][E] - The user may give you start date and number of days of stay, derive the end_date from the information given.
[2025-08-21 16:15:59.575][E] - Use the `memorize` tool to store trip metadata into the following variables (dates in YYYY-MM-DD format);
[2025-08-21 16:15:59.575][E] - `origin`,
[2025-08-21 16:15:59.575][E] - `destination`
[2025-08-21 16:15:59.575][E] - `start_date` and
[2025-08-21 16:15:59.575][E] - `end_date`
[2025-08-21 16:15:59.575][E] To make sure everything is stored correctly, instead of calling memorize all at once, chain the calls such that
[2025-08-21 16:15:59.575][E] you only call another `memorize` after the last call has responded.
[2025-08-21 16:15:59.575][E] - Use instructions from <FIND_FLIGHTS/> to complete the flight and seat choices.
[2025-08-21 16:15:59.575][E] - Use instructions from <FIND_HOTELS/> to complete the hotel and room choices.
[2025-08-21 16:15:59.575][E] - Finally, use instructions from <CREATE_ITINERARY/> to generate an itinerary.
[2025-08-21 16:15:59.575][E] </FULL_ITINERARY>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] <FIND_FLIGHTS>
[2025-08-21 16:15:59.575][E] You are to help the user select a fight and a seat. You do not handle booking nor payment.
[2025-08-21 16:15:59.575][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:15:59.575][E] <outbound_flight_selection></outbound_flight_selection>
[2025-08-21 16:15:59.575][E] <outbound_seat_number></outbound_seat_number>
[2025-08-21 16:15:59.575][E] <return_flight_selection></return_flight_selection>
[2025-08-21 16:15:59.575][E] <return_seat_number></return_seat_number>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] - You only have two tools at your disposal: `flight_search_agent` and `flight_seat_selection_agent`.
[2025-08-21 16:15:59.575][E] - Given the user's home city location "" and the derived destination,
[2025-08-21 16:15:59.575][E] - Call `flight_search_agent` and work with the user to select both outbound and inbound flights.
[2025-08-21 16:15:59.575][E] - Present the flight choices to the user, includes information such as: the airline name, the flight number, departure and arrival airport codes and time. When user selects the flight...
[2025-08-21 16:15:59.575][E] - Call the `flight_seat_selection_agent` tool to show seat options, asks the user to select one.
[2025-08-21 16:15:59.575][E] - Call the `memorize` tool to store the outbound and inbound flights and seats selections info into the following variables:
[2025-08-21 16:15:59.575][E] - 'outbound_flight_selection' and 'outbound_seat_number'
[2025-08-21 16:15:59.575][E] - 'return_flight_selection' and 'return_seat_number'
[2025-08-21 16:15:59.575][E] - For flight choise, store the full JSON entries from the `flight_search_agent`'s prior response.
[2025-08-21 16:15:59.575][E] - Here's the optimal flow
[2025-08-21 16:15:59.575][E] - search for flights
[2025-08-21 16:15:59.575][E] - choose flight, store choice,
[2025-08-21 16:15:59.575][E] - select seats, store choice.
[2025-08-21 16:15:59.575][E] </FIND_FLIGHTS>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] <FIND_HOTELS>
[2025-08-21 16:15:59.575][E] You are to help the user with their hotel choices. You do not handle booking nor payment.
[2025-08-21 16:15:59.575][E] Your goal is to help the traveler by  completing the following information if any is blank:
[2025-08-21 16:15:59.575][E] <hotel_selection></hotel_selection>
[2025-08-21 16:15:59.575][E] <room_selection><room_selection>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] - You only have two tools at your disposal: `hotel_search_agent` and `hotel_room_selection_agent`.
[2025-08-21 16:15:59.575][E] - Given the derived destination and the interested activities,
[2025-08-21 16:15:59.575][E] - Call `hotel_search_agent` and work with the user to select a hotel. When user select the hotel...
[2025-08-21 16:15:59.575][E] - Call `hotel_room_selection_agent` to choose a room.
[2025-08-21 16:15:59.575][E] - Call the `memorize` tool to store the hotel and room selections into the following variables:
[2025-08-21 16:15:59.575][E] - `hotel_selection` and `room_selection`
[2025-08-21 16:15:59.575][E] - For hotel choice, store the chosen JSON entry from the `hotel_search_agent`'s prior response.
[2025-08-21 16:15:59.575][E] - Here is the optimal flow
[2025-08-21 16:15:59.575][E] - search for hotel
[2025-08-21 16:15:59.575][E] - choose hotel, store choice,
[2025-08-21 16:15:59.575][E] - select room, store choice.
[2025-08-21 16:15:59.575][E] </FIND_HOTELS>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] <CREATE_ITINERARY>
[2025-08-21 16:15:59.575][E] - Help the user prepare a draft itinerary order by days, including a few activites from the dialog so far and from their stated <interests/> below.
[2025-08-21 16:15:59.575][E] - The itinery should start with traveling to the airport from home. Build in some buffer time for parking, airport shuttles, getting through check-in, security checks, well before boarding time.
[2025-08-21 16:15:59.575][E] - Travel from airport to the hotel for check-in, up on arrival at the airport.
[2025-08-21 16:15:59.575][E] - Then the activities.
[2025-08-21 16:15:59.575][E] - At the end of the trip, check-out from the hotel and travel back to the airport.
[2025-08-21 16:15:59.575][E] - Confirm with the user if the draft is good to go, if the user gives the go ahead, carry out the following steps:
[2025-08-21 16:15:59.575][E] - Make sure the user's choices for flights and hotels are memorized as instructed above.
[2025-08-21 16:15:59.575][E] - Store the itinerary by calling the `itinerary_agent` tool, storing the entire plan including flights and hotel details.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Interests:
[2025-08-21 16:15:59.575][E] <interests>
[2025-08-21 16:15:59.575][E] {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}
[2025-08-21 16:15:59.575][E] </interests>
[2025-08-21 16:15:59.575][E] </CREATE_ITINERARY>
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.575][E] Finally, once the supported user journey is completed, reconfirm with user, if the user gives the go ahead, transfer to `booking_agent` for booking.
[2025-08-21 16:15:59.575][E] 
[2025-08-21 16:15:59.576][E] Please use the context info below for user preferences
[2025-08-21 16:15:59.576][E] <user_profile>
[2025-08-21 16:15:59.576][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:15:59.576][E] </user_profile>
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] You are an agent. Your internal name is "planning_agent".
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] The description about you is "Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels."
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] You have a list of other agents to transfer to:
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: root_agent
[2025-08-21 16:15:59.576][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: inspiration_agent
[2025-08-21 16:15:59.576][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: booking_agent
[2025-08-21 16:15:59.576][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: pre_trip_agent
[2025-08-21 16:15:59.576][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: in_trip_agent
[2025-08-21 16:15:59.576][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Agent name: post_trip_agent
[2025-08-21 16:15:59.576][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:15:59.576][E] can answer it.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] If another agent is better for answering the question according to its
[2025-08-21 16:15:59.576][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:15:59.576][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:15:59.576][E] the function call.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:15:59.576][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:15:59.576][E] to your parent agent.
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] -----------------------------------------------------------
[2025-08-21 16:15:59.576][E] Contents:
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `poi_agent` with parameters: {'request': 'Montreal'}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `poi_agent` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': '', 'place_id': ''}]}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `map_tool` with parameters: {'key': 'poi'}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `map_tool` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] said: Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'planning_agent'}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:15:59.576][E] -----------------------------------------------------------
[2025-08-21 16:15:59.576][E] Functions:
[2025-08-21 16:15:59.576][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] flight_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] flight_seat_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] hotel_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] hotel_room_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] itinerary_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] memorize: {'key': {'type': <Type.STRING: 'STRING'>}, 'value': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:15:59.576][E] -----------------------------------------------------------
[2025-08-21 16:15:59.576][E] 
[2025-08-21 16:15:59.576][E] 2025-08-21 16:15:59,575 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:15:59.577][E] 2025-08-21 16:15:59,577 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:15:59.607][E] 2025-08-21 16:15:59,606 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e26870>
[2025-08-21 16:15:59.607][E] 2025-08-21 16:15:59,607 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e3d550> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e25d90>
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:15:59.649][E] 2025-08-21 16:15:59,649 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:00.606][E] 2025-08-21 16:16:00,605 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:00 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/35'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=927'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755767110.523831.2961309,/bns/we/borg/we/bns/genai-api/prod.genai-api/35,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/145'), (b'X-Google-GFE-Request-Trace', b'aczrhi1:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/35,aczrhi1:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/145,Mentat oracle: [2002:a05:6030:a61d:b0:181:2553:bd1]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:00.606][E] 2025-08-21 16:16:00,606 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:00.606][E] 2025-08-21 16:16:00,606 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:00.606][E] 2025-08-21 16:16:00,606 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:00.607][E] 2025-08-21 16:16:00,606 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:00.607][E] 2025-08-21 16:16:00,607 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:00.608][E] 2025-08-21 16:16:00,608 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:00.608][E] 2025-08-21 16:16:00,608 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:16:00.608][E] 2025-08-21 16:16:00,608 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:00.608][E] LLM Response:
[2025-08-21 16:16:00.608][E] -----------------------------------------------------------
[2025-08-21 16:16:00.608][E] Text:
[2025-08-21 16:16:00.608][E] None
[2025-08-21 16:16:00.608][E] -----------------------------------------------------------
[2025-08-21 16:16:00.608][E] Function calls:
[2025-08-21 16:16:00.608][E] name: memorize, args: {'key': 'destination', 'value': 'Montreal'}
[2025-08-21 16:16:00.608][E] -----------------------------------------------------------
[2025-08-21 16:16:00.608][E] Raw response:
[2025-08-21 16:16:00.608][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:00 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/35","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=927","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755767110.523831.2961309,/bns/we/borg/we/bns/genai-api/prod.genai-api/35,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/145","x-google-gfe-request-trace":"aczrhi1:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/35,aczrhi1:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/145,Mentat oracle: [2002:a05:6030:a61d:b0:181:2553:bd1]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","function_call":{"args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":19,"prompt_token_count":5440,"prompt_tokens_details":[{"modality":"TEXT","token_count":5440}],"thoughts_token_count":95,"total_token_count":5554},"automatic_function_calling_history":[]}
[2025-08-21 16:16:00.608][E] -----------------------------------------------------------
[2025-08-21 16:16:00.608][E] 
[2025-08-21 16:16:00.609][E] 2025-08-21 16:16:00,609 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:00.609][E] 2025-08-21 16:16:00,609 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","functionCall":{"id":"adk-c067c6d3-1ae7-43c9-aafd-4dae9c0ef7fb","args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":19,"promptTokenCount":5440,"promptTokensDetails":[{"modality":"TEXT","tokenCount":5440}],"thoughtsTokenCount":95,"totalTokenCount":5554},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"981bf538-50e8-4791-8842-ed1730b037c1","timestamp":1755785759.535027}
[2025-08-21 16:16:00.610][E] 2025-08-21 16:16:00,610 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:00.610][E] 2025-08-21 16:16:00,610 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-c067c6d3-1ae7-43c9-aafd-4dae9c0ef7fb","name":"memorize","response":{"status":"Stored \"destination\": \"Montreal\""}}}],"role":"user"},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{"destination":"Montreal"},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"4ef866af-0c28-4a63-8b00-c54e3a568a20","timestamp":1755785760.609934}
[2025-08-21 16:16:00.651][E] 2025-08-21 16:16:00,651 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:16:00.652][E] 2025-08-21 16:16:00,652 - DEBUG - google_llm.py:117 -
[2025-08-21 16:16:00.652][E] LLM Request:
[2025-08-21 16:16:00.652][E] -----------------------------------------------------------
[2025-08-21 16:16:00.652][E] System Instruction:
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] You are a travel planning agent who help users finding best deals for flights, hotels, and constructs full itineraries for their vacation.
[2025-08-21 16:16:00.652][E] You do not handle any bookings. You are helping users with their selections and preferences only.
[2025-08-21 16:16:00.652][E] The actual booking, payment and transactions will be handled by transfering to the `booking_agent` later.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] You support a number of user journeys:
[2025-08-21 16:16:00.652][E] - Just need to find flights,
[2025-08-21 16:16:00.652][E] - Just need to find hotels,
[2025-08-21 16:16:00.652][E] - Find flights and hotels but without itinerary,
[2025-08-21 16:16:00.652][E] - Find flights, hotels with an full itinerary,
[2025-08-21 16:16:00.652][E] - Autonomously help the user find flights and hotels.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] You have access to the following tools only:
[2025-08-21 16:16:00.652][E] - Use the `flight_search_agent` tool to find flight choices,
[2025-08-21 16:16:00.652][E] - Use the `flight_seat_selection_agent` tool to find seat choices,
[2025-08-21 16:16:00.652][E] - Use the `hotel_search_agent` tool to find hotel choices,
[2025-08-21 16:16:00.652][E] - Use the `hotel_room_selection_agent` tool to find room choices,
[2025-08-21 16:16:00.652][E] - Use the `itinerary_agent` tool to generate an itinerary, and
[2025-08-21 16:16:00.652][E] - Use the `memorize` tool to remember the user's chosen selections.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] How to support the user journeys:
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] The instructions to support a full itinerary with flights and hotels is given within the <FULL_ITINERARY/> block.
[2025-08-21 16:16:00.652][E] For user journeys there only contains flights or hotels, use instructions from the <FIND_FLIGHTS/> and <FIND_HOTELS/> blocks accordingly for the identified user journey.
[2025-08-21 16:16:00.652][E] Identify the user journey under which the user is referred to you; Satisfy the user's need matching the user journey.
[2025-08-21 16:16:00.652][E] When you are being asked to act autonomously:
[2025-08-21 16:16:00.652][E] - you assume the role of the user temporarily,
[2025-08-21 16:16:00.652][E] - you can make decision on selecting flights, seats, hotels, and rooms, base on user's preferences,
[2025-08-21 16:16:00.652][E] - if you made a choice base on user's preference, briefly mention the rationale.
[2025-08-21 16:16:00.652][E] - but do not proceed to booking.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Instructions for different user journeys:
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] <FULL_ITINERARY>
[2025-08-21 16:16:00.652][E] You are creating a full plan with flights and hotel choices,
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:00.652][E] <origin></origin>
[2025-08-21 16:16:00.652][E] <destination>Montreal</destination>
[2025-08-21 16:16:00.652][E] <start_date></start_date>
[2025-08-21 16:16:00.652][E] <end_date></end_date>
[2025-08-21 16:16:00.652][E] <itinerary>
[2025-08-21 16:16:00.652][E] {}
[2025-08-21 16:16:00.652][E] <itinerary>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Current time: 2025-08-21 16:10:54.020572; Infer the current Year from the time.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Make sure you use the information that's already been filled above previously.
[2025-08-21 16:16:00.652][E] - If <destination/> is empty, you can derive the destination base on the dialog so far.
[2025-08-21 16:16:00.652][E] - Ask for missing information from the user, for example, the start date and the end date of the trip.
[2025-08-21 16:16:00.652][E] - The user may give you start date and number of days of stay, derive the end_date from the information given.
[2025-08-21 16:16:00.652][E] - Use the `memorize` tool to store trip metadata into the following variables (dates in YYYY-MM-DD format);
[2025-08-21 16:16:00.652][E] - `origin`,
[2025-08-21 16:16:00.652][E] - `destination`
[2025-08-21 16:16:00.652][E] - `start_date` and
[2025-08-21 16:16:00.652][E] - `end_date`
[2025-08-21 16:16:00.652][E] To make sure everything is stored correctly, instead of calling memorize all at once, chain the calls such that
[2025-08-21 16:16:00.652][E] you only call another `memorize` after the last call has responded.
[2025-08-21 16:16:00.652][E] - Use instructions from <FIND_FLIGHTS/> to complete the flight and seat choices.
[2025-08-21 16:16:00.652][E] - Use instructions from <FIND_HOTELS/> to complete the hotel and room choices.
[2025-08-21 16:16:00.652][E] - Finally, use instructions from <CREATE_ITINERARY/> to generate an itinerary.
[2025-08-21 16:16:00.652][E] </FULL_ITINERARY>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] <FIND_FLIGHTS>
[2025-08-21 16:16:00.652][E] You are to help the user select a fight and a seat. You do not handle booking nor payment.
[2025-08-21 16:16:00.652][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:00.652][E] <outbound_flight_selection></outbound_flight_selection>
[2025-08-21 16:16:00.652][E] <outbound_seat_number></outbound_seat_number>
[2025-08-21 16:16:00.652][E] <return_flight_selection></return_flight_selection>
[2025-08-21 16:16:00.652][E] <return_seat_number></return_seat_number>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] - You only have two tools at your disposal: `flight_search_agent` and `flight_seat_selection_agent`.
[2025-08-21 16:16:00.652][E] - Given the user's home city location "" and the derived destination,
[2025-08-21 16:16:00.652][E] - Call `flight_search_agent` and work with the user to select both outbound and inbound flights.
[2025-08-21 16:16:00.652][E] - Present the flight choices to the user, includes information such as: the airline name, the flight number, departure and arrival airport codes and time. When user selects the flight...
[2025-08-21 16:16:00.652][E] - Call the `flight_seat_selection_agent` tool to show seat options, asks the user to select one.
[2025-08-21 16:16:00.652][E] - Call the `memorize` tool to store the outbound and inbound flights and seats selections info into the following variables:
[2025-08-21 16:16:00.652][E] - 'outbound_flight_selection' and 'outbound_seat_number'
[2025-08-21 16:16:00.652][E] - 'return_flight_selection' and 'return_seat_number'
[2025-08-21 16:16:00.652][E] - For flight choise, store the full JSON entries from the `flight_search_agent`'s prior response.
[2025-08-21 16:16:00.652][E] - Here's the optimal flow
[2025-08-21 16:16:00.652][E] - search for flights
[2025-08-21 16:16:00.652][E] - choose flight, store choice,
[2025-08-21 16:16:00.652][E] - select seats, store choice.
[2025-08-21 16:16:00.652][E] </FIND_FLIGHTS>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] <FIND_HOTELS>
[2025-08-21 16:16:00.652][E] You are to help the user with their hotel choices. You do not handle booking nor payment.
[2025-08-21 16:16:00.652][E] Your goal is to help the traveler by  completing the following information if any is blank:
[2025-08-21 16:16:00.652][E] <hotel_selection></hotel_selection>
[2025-08-21 16:16:00.652][E] <room_selection><room_selection>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] - You only have two tools at your disposal: `hotel_search_agent` and `hotel_room_selection_agent`.
[2025-08-21 16:16:00.652][E] - Given the derived destination and the interested activities,
[2025-08-21 16:16:00.652][E] - Call `hotel_search_agent` and work with the user to select a hotel. When user select the hotel...
[2025-08-21 16:16:00.652][E] - Call `hotel_room_selection_agent` to choose a room.
[2025-08-21 16:16:00.652][E] - Call the `memorize` tool to store the hotel and room selections into the following variables:
[2025-08-21 16:16:00.652][E] - `hotel_selection` and `room_selection`
[2025-08-21 16:16:00.652][E] - For hotel choice, store the chosen JSON entry from the `hotel_search_agent`'s prior response.
[2025-08-21 16:16:00.652][E] - Here is the optimal flow
[2025-08-21 16:16:00.652][E] - search for hotel
[2025-08-21 16:16:00.652][E] - choose hotel, store choice,
[2025-08-21 16:16:00.652][E] - select room, store choice.
[2025-08-21 16:16:00.652][E] </FIND_HOTELS>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] <CREATE_ITINERARY>
[2025-08-21 16:16:00.652][E] - Help the user prepare a draft itinerary order by days, including a few activites from the dialog so far and from their stated <interests/> below.
[2025-08-21 16:16:00.652][E] - The itinery should start with traveling to the airport from home. Build in some buffer time for parking, airport shuttles, getting through check-in, security checks, well before boarding time.
[2025-08-21 16:16:00.652][E] - Travel from airport to the hotel for check-in, up on arrival at the airport.
[2025-08-21 16:16:00.652][E] - Then the activities.
[2025-08-21 16:16:00.652][E] - At the end of the trip, check-out from the hotel and travel back to the airport.
[2025-08-21 16:16:00.652][E] - Confirm with the user if the draft is good to go, if the user gives the go ahead, carry out the following steps:
[2025-08-21 16:16:00.652][E] - Make sure the user's choices for flights and hotels are memorized as instructed above.
[2025-08-21 16:16:00.652][E] - Store the itinerary by calling the `itinerary_agent` tool, storing the entire plan including flights and hotel details.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Interests:
[2025-08-21 16:16:00.652][E] <interests>
[2025-08-21 16:16:00.652][E] {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}
[2025-08-21 16:16:00.652][E] </interests>
[2025-08-21 16:16:00.652][E] </CREATE_ITINERARY>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Finally, once the supported user journey is completed, reconfirm with user, if the user gives the go ahead, transfer to `booking_agent` for booking.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Please use the context info below for user preferences
[2025-08-21 16:16:00.652][E] <user_profile>
[2025-08-21 16:16:00.652][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:16:00.652][E] </user_profile>
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] You are an agent. Your internal name is "planning_agent".
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] The description about you is "Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels."
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] You have a list of other agents to transfer to:
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: root_agent
[2025-08-21 16:16:00.652][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: inspiration_agent
[2025-08-21 16:16:00.652][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: booking_agent
[2025-08-21 16:16:00.652][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: pre_trip_agent
[2025-08-21 16:16:00.652][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: in_trip_agent
[2025-08-21 16:16:00.652][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] Agent name: post_trip_agent
[2025-08-21 16:16:00.652][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] 
[2025-08-21 16:16:00.652][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:16:00.653][E] can answer it.
[2025-08-21 16:16:00.653][E] 
[2025-08-21 16:16:00.653][E] If another agent is better for answering the question according to its
[2025-08-21 16:16:00.653][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:16:00.653][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:16:00.653][E] the function call.
[2025-08-21 16:16:00.653][E] 
[2025-08-21 16:16:00.653][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:16:00.653][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:16:00.653][E] to your parent agent.
[2025-08-21 16:16:00.653][E] 
[2025-08-21 16:16:00.653][E] -----------------------------------------------------------
[2025-08-21 16:16:00.653][E] Contents:
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `poi_agent` with parameters: {'request': 'Montreal'}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `poi_agent` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': '', 'place_id': ''}]}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `map_tool` with parameters: {'key': 'poi'}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `map_tool` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] said: Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'planning_agent'}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:00.653][E] {"parts":[{"thought_signature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","function_call":{"args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:00.653][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"destination\": \"Montreal\""}}}],"role":"user"}
[2025-08-21 16:16:00.653][E] -----------------------------------------------------------
[2025-08-21 16:16:00.653][E] Functions:
[2025-08-21 16:16:00.653][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] flight_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] flight_seat_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] hotel_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] hotel_room_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] itinerary_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] memorize: {'key': {'type': <Type.STRING: 'STRING'>}, 'value': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:00.653][E] -----------------------------------------------------------
[2025-08-21 16:16:00.653][E] 
[2025-08-21 16:16:00.653][E] 2025-08-21 16:16:00,652 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:16:00.653][E] 2025-08-21 16:16:00,653 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:00.653][E] 2025-08-21 16:16:00,653 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:16:00.654][E] 2025-08-21 16:16:00,653 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:00.679][E] 2025-08-21 16:16:00,679 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5c0e0>
[2025-08-21 16:16:00.679][E] 2025-08-21 16:16:00,679 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e3c0d0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:16:00.719][E] 2025-08-21 16:16:00,719 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e26cf0>
[2025-08-21 16:16:00.720][E] 2025-08-21 16:16:00,719 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:00.720][E] 2025-08-21 16:16:00,720 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:16:00.720][E] 2025-08-21 16:16:00,720 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:16:00.720][E] 2025-08-21 16:16:00,720 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:16:00.720][E] 2025-08-21 16:16:00,720 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:01 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/8'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=717'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755767109.80581.2822469,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/68'), (b'X-Google-GFE-Request-Trace', b'aczrhi5:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,aczrhi5:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/68,Mentat oracle: [2002:a05:66b4:312:b0:24:602f:234f]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:01.465][E] 2025-08-21 16:16:01,465 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:01.466][E] 2025-08-21 16:16:01,466 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:01.466][E] 2025-08-21 16:16:01,466 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:16:01.466][E] 2025-08-21 16:16:01,466 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:01.466][E] LLM Response:
[2025-08-21 16:16:01.466][E] -----------------------------------------------------------
[2025-08-21 16:16:01.466][E] Text:
[2025-08-21 16:16:01.467][E] None
[2025-08-21 16:16:01.467][E] -----------------------------------------------------------
[2025-08-21 16:16:01.467][E] Function calls:
[2025-08-21 16:16:01.467][E] name: memorize, args: {'key': 'start_date', 'value': '2026-01-01'}
[2025-08-21 16:16:01.467][E] -----------------------------------------------------------
[2025-08-21 16:16:01.467][E] Raw response:
[2025-08-21 16:16:01.467][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:01 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/8","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=717","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755767109.80581.2822469,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/68","x-google-gfe-request-trace":"aczrhi5:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,aczrhi5:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/68,Mentat oracle: [2002:a05:66b4:312:b0:24:602f:234f]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"Cp4BAVSoXO7JFJMmYZPyGc9wQgr1z96XEh5WBDQrrahRLKRkCvOBBkbunavtlTLLMNqFAdYW2V0XuXVe_RbrhuqpozxIQAgu4AOh1VOUKU68NPd5VdS4ltzAM_OZvf7s9EDIv1e7p01CJNLHJvsOCcSMWKLbW-lgWI0N1l1RLVs9KqZs_c6TCIx3jP8ylu0_Ta_vdputkUTrmDkYRdruvzA=","function_call":{"args":{"key":"start_date","value":"2026-01-01"},"name":"memorize"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":30,"prompt_token_count":5481,"prompt_tokens_details":[{"modality":"TEXT","token_count":5481}],"thoughts_token_count":34,"total_token_count":5545},"automatic_function_calling_history":[]}
[2025-08-21 16:16:01.467][E] -----------------------------------------------------------
[2025-08-21 16:16:01.467][E] 
[2025-08-21 16:16:01.468][E] 2025-08-21 16:16:01,467 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:01.468][E] 2025-08-21 16:16:01,468 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"Cp4BAVSoXO7JFJMmYZPyGc9wQgr1z96XEh5WBDQrrahRLKRkCvOBBkbunavtlTLLMNqFAdYW2V0XuXVe_RbrhuqpozxIQAgu4AOh1VOUKU68NPd5VdS4ltzAM_OZvf7s9EDIv1e7p01CJNLHJvsOCcSMWKLbW-lgWI0N1l1RLVs9KqZs_c6TCIx3jP8ylu0_Ta_vdputkUTrmDkYRdruvzA=","functionCall":{"id":"adk-d3bbe6d5-f913-4e31-a30d-097fed27b598","args":{"key":"start_date","value":"2026-01-01"},"name":"memorize"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":30,"promptTokenCount":5481,"promptTokensDetails":[{"modality":"TEXT","tokenCount":5481}],"thoughtsTokenCount":34,"totalTokenCount":5545},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"f9bae692-3c6f-4269-a3d8-a2ed6ba75e28","timestamp":1755785760.61461}
[2025-08-21 16:16:01.470][E] 2025-08-21 16:16:01,470 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:01.470][E] 2025-08-21 16:16:01,470 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-d3bbe6d5-f913-4e31-a30d-097fed27b598","name":"memorize","response":{"status":"Stored \"start_date\": \"2026-01-01\""}}}],"role":"user"},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{"start_date":"2026-01-01"},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"17c13ecb-b90e-42ee-9024-34dd13a24da7","timestamp":1755785761.470084}
[2025-08-21 16:16:01.560][E] 2025-08-21 16:16:01,560 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:16:01.560][E] 2025-08-21 16:16:01,560 - DEBUG - google_llm.py:117 -
[2025-08-21 16:16:01.560][E] LLM Request:
[2025-08-21 16:16:01.560][E] -----------------------------------------------------------
[2025-08-21 16:16:01.560][E] System Instruction:
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] You are a travel planning agent who help users finding best deals for flights, hotels, and constructs full itineraries for their vacation.
[2025-08-21 16:16:01.560][E] You do not handle any bookings. You are helping users with their selections and preferences only.
[2025-08-21 16:16:01.560][E] The actual booking, payment and transactions will be handled by transfering to the `booking_agent` later.
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] You support a number of user journeys:
[2025-08-21 16:16:01.560][E] - Just need to find flights,
[2025-08-21 16:16:01.560][E] - Just need to find hotels,
[2025-08-21 16:16:01.560][E] - Find flights and hotels but without itinerary,
[2025-08-21 16:16:01.560][E] - Find flights, hotels with an full itinerary,
[2025-08-21 16:16:01.560][E] - Autonomously help the user find flights and hotels.
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] You have access to the following tools only:
[2025-08-21 16:16:01.560][E] - Use the `flight_search_agent` tool to find flight choices,
[2025-08-21 16:16:01.560][E] - Use the `flight_seat_selection_agent` tool to find seat choices,
[2025-08-21 16:16:01.560][E] - Use the `hotel_search_agent` tool to find hotel choices,
[2025-08-21 16:16:01.560][E] - Use the `hotel_room_selection_agent` tool to find room choices,
[2025-08-21 16:16:01.560][E] - Use the `itinerary_agent` tool to generate an itinerary, and
[2025-08-21 16:16:01.560][E] - Use the `memorize` tool to remember the user's chosen selections.
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] How to support the user journeys:
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] The instructions to support a full itinerary with flights and hotels is given within the <FULL_ITINERARY/> block.
[2025-08-21 16:16:01.560][E] For user journeys there only contains flights or hotels, use instructions from the <FIND_FLIGHTS/> and <FIND_HOTELS/> blocks accordingly for the identified user journey.
[2025-08-21 16:16:01.560][E] Identify the user journey under which the user is referred to you; Satisfy the user's need matching the user journey.
[2025-08-21 16:16:01.560][E] When you are being asked to act autonomously:
[2025-08-21 16:16:01.560][E] - you assume the role of the user temporarily,
[2025-08-21 16:16:01.560][E] - you can make decision on selecting flights, seats, hotels, and rooms, base on user's preferences,
[2025-08-21 16:16:01.560][E] - if you made a choice base on user's preference, briefly mention the rationale.
[2025-08-21 16:16:01.560][E] - but do not proceed to booking.
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] Instructions for different user journeys:
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] <FULL_ITINERARY>
[2025-08-21 16:16:01.560][E] You are creating a full plan with flights and hotel choices,
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:01.560][E] <origin></origin>
[2025-08-21 16:16:01.560][E] <destination>Montreal</destination>
[2025-08-21 16:16:01.560][E] <start_date>2026-01-01</start_date>
[2025-08-21 16:16:01.560][E] <end_date></end_date>
[2025-08-21 16:16:01.560][E] <itinerary>
[2025-08-21 16:16:01.560][E] {}
[2025-08-21 16:16:01.560][E] <itinerary>
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] Current time: 2025-08-21 16:10:54.020572; Infer the current Year from the time.
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] Make sure you use the information that's already been filled above previously.
[2025-08-21 16:16:01.560][E] - If <destination/> is empty, you can derive the destination base on the dialog so far.
[2025-08-21 16:16:01.560][E] - Ask for missing information from the user, for example, the start date and the end date of the trip.
[2025-08-21 16:16:01.560][E] - The user may give you start date and number of days of stay, derive the end_date from the information given.
[2025-08-21 16:16:01.560][E] - Use the `memorize` tool to store trip metadata into the following variables (dates in YYYY-MM-DD format);
[2025-08-21 16:16:01.560][E] - `origin`,
[2025-08-21 16:16:01.560][E] - `destination`
[2025-08-21 16:16:01.560][E] - `start_date` and
[2025-08-21 16:16:01.560][E] - `end_date`
[2025-08-21 16:16:01.560][E] To make sure everything is stored correctly, instead of calling memorize all at once, chain the calls such that
[2025-08-21 16:16:01.560][E] you only call another `memorize` after the last call has responded.
[2025-08-21 16:16:01.560][E] - Use instructions from <FIND_FLIGHTS/> to complete the flight and seat choices.
[2025-08-21 16:16:01.560][E] - Use instructions from <FIND_HOTELS/> to complete the hotel and room choices.
[2025-08-21 16:16:01.560][E] - Finally, use instructions from <CREATE_ITINERARY/> to generate an itinerary.
[2025-08-21 16:16:01.560][E] </FULL_ITINERARY>
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] <FIND_FLIGHTS>
[2025-08-21 16:16:01.560][E] You are to help the user select a fight and a seat. You do not handle booking nor payment.
[2025-08-21 16:16:01.560][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:01.560][E] <outbound_flight_selection></outbound_flight_selection>
[2025-08-21 16:16:01.560][E] <outbound_seat_number></outbound_seat_number>
[2025-08-21 16:16:01.560][E] <return_flight_selection></return_flight_selection>
[2025-08-21 16:16:01.560][E] <return_seat_number></return_seat_number>
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] - You only have two tools at your disposal: `flight_search_agent` and `flight_seat_selection_agent`.
[2025-08-21 16:16:01.560][E] - Given the user's home city location "" and the derived destination,
[2025-08-21 16:16:01.560][E] - Call `flight_search_agent` and work with the user to select both outbound and inbound flights.
[2025-08-21 16:16:01.560][E] - Present the flight choices to the user, includes information such as: the airline name, the flight number, departure and arrival airport codes and time. When user selects the flight...
[2025-08-21 16:16:01.560][E] - Call the `flight_seat_selection_agent` tool to show seat options, asks the user to select one.
[2025-08-21 16:16:01.560][E] - Call the `memorize` tool to store the outbound and inbound flights and seats selections info into the following variables:
[2025-08-21 16:16:01.560][E] - 'outbound_flight_selection' and 'outbound_seat_number'
[2025-08-21 16:16:01.560][E] - 'return_flight_selection' and 'return_seat_number'
[2025-08-21 16:16:01.560][E] - For flight choise, store the full JSON entries from the `flight_search_agent`'s prior response.
[2025-08-21 16:16:01.560][E] - Here's the optimal flow
[2025-08-21 16:16:01.560][E] - search for flights
[2025-08-21 16:16:01.560][E] - choose flight, store choice,
[2025-08-21 16:16:01.560][E] - select seats, store choice.
[2025-08-21 16:16:01.560][E] </FIND_FLIGHTS>
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] <FIND_HOTELS>
[2025-08-21 16:16:01.560][E] You are to help the user with their hotel choices. You do not handle booking nor payment.
[2025-08-21 16:16:01.560][E] Your goal is to help the traveler by  completing the following information if any is blank:
[2025-08-21 16:16:01.560][E] <hotel_selection></hotel_selection>
[2025-08-21 16:16:01.560][E] <room_selection><room_selection>
[2025-08-21 16:16:01.560][E] 
[2025-08-21 16:16:01.560][E] - You only have two tools at your disposal: `hotel_search_agent` and `hotel_room_selection_agent`.
[2025-08-21 16:16:01.560][E] - Given the derived destination and the interested activities,
[2025-08-21 16:16:01.560][E] - Call `hotel_search_agent` and work with the user to select a hotel. When user select the hotel...
[2025-08-21 16:16:01.560][E] - Call `hotel_room_selection_agent` to choose a room.
[2025-08-21 16:16:01.561][E] - Call the `memorize` tool to store the hotel and room selections into the following variables:
[2025-08-21 16:16:01.561][E] - `hotel_selection` and `room_selection`
[2025-08-21 16:16:01.561][E] - For hotel choice, store the chosen JSON entry from the `hotel_search_agent`'s prior response.
[2025-08-21 16:16:01.561][E] - Here is the optimal flow
[2025-08-21 16:16:01.561][E] - search for hotel
[2025-08-21 16:16:01.561][E] - choose hotel, store choice,
[2025-08-21 16:16:01.561][E] - select room, store choice.
[2025-08-21 16:16:01.561][E] </FIND_HOTELS>
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] <CREATE_ITINERARY>
[2025-08-21 16:16:01.561][E] - Help the user prepare a draft itinerary order by days, including a few activites from the dialog so far and from their stated <interests/> below.
[2025-08-21 16:16:01.561][E] - The itinery should start with traveling to the airport from home. Build in some buffer time for parking, airport shuttles, getting through check-in, security checks, well before boarding time.
[2025-08-21 16:16:01.561][E] - Travel from airport to the hotel for check-in, up on arrival at the airport.
[2025-08-21 16:16:01.561][E] - Then the activities.
[2025-08-21 16:16:01.561][E] - At the end of the trip, check-out from the hotel and travel back to the airport.
[2025-08-21 16:16:01.561][E] - Confirm with the user if the draft is good to go, if the user gives the go ahead, carry out the following steps:
[2025-08-21 16:16:01.561][E] - Make sure the user's choices for flights and hotels are memorized as instructed above.
[2025-08-21 16:16:01.561][E] - Store the itinerary by calling the `itinerary_agent` tool, storing the entire plan including flights and hotel details.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Interests:
[2025-08-21 16:16:01.561][E] <interests>
[2025-08-21 16:16:01.561][E] {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}
[2025-08-21 16:16:01.561][E] </interests>
[2025-08-21 16:16:01.561][E] </CREATE_ITINERARY>
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Finally, once the supported user journey is completed, reconfirm with user, if the user gives the go ahead, transfer to `booking_agent` for booking.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Please use the context info below for user preferences
[2025-08-21 16:16:01.561][E] <user_profile>
[2025-08-21 16:16:01.561][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:16:01.561][E] </user_profile>
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] You are an agent. Your internal name is "planning_agent".
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] The description about you is "Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels."
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] You have a list of other agents to transfer to:
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: root_agent
[2025-08-21 16:16:01.561][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: inspiration_agent
[2025-08-21 16:16:01.561][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: booking_agent
[2025-08-21 16:16:01.561][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: pre_trip_agent
[2025-08-21 16:16:01.561][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: in_trip_agent
[2025-08-21 16:16:01.561][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Agent name: post_trip_agent
[2025-08-21 16:16:01.561][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:16:01.561][E] can answer it.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] If another agent is better for answering the question according to its
[2025-08-21 16:16:01.561][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:16:01.561][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:16:01.561][E] the function call.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:16:01.561][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:16:01.561][E] to your parent agent.
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] -----------------------------------------------------------
[2025-08-21 16:16:01.561][E] Contents:
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `poi_agent` with parameters: {'request': 'Montreal'}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `poi_agent` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': '', 'place_id': ''}]}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `map_tool` with parameters: {'key': 'poi'}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `map_tool` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] said: Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'planning_agent'}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"thought_signature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","function_call":{"args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:01.561][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"destination\": \"Montreal\""}}}],"role":"user"}
[2025-08-21 16:16:01.561][E] {"parts":[{"thought_signature":"Cp4BAVSoXO7JFJMmYZPyGc9wQgr1z96XEh5WBDQrrahRLKRkCvOBBkbunavtlTLLMNqFAdYW2V0XuXVe_RbrhuqpozxIQAgu4AOh1VOUKU68NPd5VdS4ltzAM_OZvf7s9EDIv1e7p01CJNLHJvsOCcSMWKLbW-lgWI0N1l1RLVs9KqZs_c6TCIx3jP8ylu0_Ta_vdputkUTrmDkYRdruvzA=","function_call":{"args":{"key":"start_date","value":"2026-01-01"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:01.561][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"start_date\": \"2026-01-01\""}}}],"role":"user"}
[2025-08-21 16:16:01.561][E] -----------------------------------------------------------
[2025-08-21 16:16:01.561][E] Functions:
[2025-08-21 16:16:01.561][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] flight_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] flight_seat_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] hotel_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] hotel_room_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] itinerary_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] memorize: {'key': {'type': <Type.STRING: 'STRING'>}, 'value': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:01.561][E] -----------------------------------------------------------
[2025-08-21 16:16:01.561][E] 
[2025-08-21 16:16:01.561][E] 2025-08-21 16:16:01,560 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:16:01.563][E] 2025-08-21 16:16:01,563 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:01.563][E] 2025-08-21 16:16:01,563 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:16:01.564][E] 2025-08-21 16:16:01,564 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:01.592][E] 2025-08-21 16:16:01,592 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5d0d0>
[2025-08-21 16:16:01.592][E] 2025-08-21 16:16:01,592 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e3edd0> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:16:01.633][E] 2025-08-21 16:16:01,633 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125cf3f50>
[2025-08-21 16:16:01.634][E] 2025-08-21 16:16:01,634 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:01.634][E] 2025-08-21 16:16:01,634 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:16:01.634][E] 2025-08-21 16:16:01,634 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:16:01.634][E] 2025-08-21 16:16:01,634 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:16:01.634][E] 2025-08-21 16:16:01,634 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:02.518][E] 2025-08-21 16:16:02,518 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:02 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/91'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=855'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768202.795164.1652713,/bns/we/borg/we/bns/genai-api/prod.genai-api/91,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/98'), (b'X-Google-GFE-Request-Trace', b'aczrhi7:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/91,aczrhi7:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/98,Mentat oracle: [2002:a05:6028:c387:b0:430:771d:d9a3]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:02.518][E] 2025-08-21 16:16:02,518 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:02.518][E] 2025-08-21 16:16:02,518 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:16:02.519][E] 2025-08-21 16:16:02,519 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:02.519][E] LLM Response:
[2025-08-21 16:16:02.519][E] -----------------------------------------------------------
[2025-08-21 16:16:02.519][E] Text:
[2025-08-21 16:16:02.519][E] None
[2025-08-21 16:16:02.519][E] -----------------------------------------------------------
[2025-08-21 16:16:02.519][E] Function calls:
[2025-08-21 16:16:02.519][E] name: memorize, args: {'value': '2026-01-06', 'key': 'end_date'}
[2025-08-21 16:16:02.519][E] -----------------------------------------------------------
[2025-08-21 16:16:02.519][E] Raw response:
[2025-08-21 16:16:02.519][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:02 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/91","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=855","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768202.795164.1652713,/bns/we/borg/we/bns/genai-api/prod.genai-api/91,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/98","x-google-gfe-request-trace":"aczrhi7:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/91,aczrhi7:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/98,Mentat oracle: [2002:a05:6028:c387:b0:430:771d:d9a3]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"Cp0BAVSoXO51ujQdffzgKhpqoTo3ss-XBWXNt_zRHK3sI8_5IkN0L8Zy-VsqoHy_5SywfZtI7-l7u-Ikv7Q_0oV1VpoZw0AbctNNE8DPXvKb19WKTtT04-caZ405th1QkIWeqaSp321VIPyO2UGpdeyO6W0NeiucSfYMz0ybml8-UD44bIgVZ-Ybtv_sI-DzchgTVKRVXTDtO78w43Cjzw==","function_call":{"args":{"value":"2026-01-06","key":"end_date"},"name":"memorize"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":30,"prompt_token_count":5553,"prompt_tokens_details":[{"modality":"TEXT","token_count":5553}],"thoughts_token_count":45,"total_token_count":5628},"automatic_function_calling_history":[]}
[2025-08-21 16:16:02.519][E] -----------------------------------------------------------
[2025-08-21 16:16:02.519][E] 
[2025-08-21 16:16:02.520][E] 2025-08-21 16:16:02,520 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:02.520][E] 2025-08-21 16:16:02,520 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"Cp0BAVSoXO51ujQdffzgKhpqoTo3ss-XBWXNt_zRHK3sI8_5IkN0L8Zy-VsqoHy_5SywfZtI7-l7u-Ikv7Q_0oV1VpoZw0AbctNNE8DPXvKb19WKTtT04-caZ405th1QkIWeqaSp321VIPyO2UGpdeyO6W0NeiucSfYMz0ybml8-UD44bIgVZ-Ybtv_sI-DzchgTVKRVXTDtO78w43Cjzw==","functionCall":{"id":"adk-349d14c3-08fc-4665-bb84-fb19b3aa15fd","args":{"value":"2026-01-06","key":"end_date"},"name":"memorize"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":30,"promptTokenCount":5553,"promptTokensDetails":[{"modality":"TEXT","tokenCount":5553}],"thoughtsTokenCount":45,"totalTokenCount":5628},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"8f4e5551-e839-4fea-bb26-d90fc84990bc","timestamp":1755785761.477264}
[2025-08-21 16:16:02.520][E] 2025-08-21 16:16:02,520 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:02.520][E] 2025-08-21 16:16:02,520 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-349d14c3-08fc-4665-bb84-fb19b3aa15fd","name":"memorize","response":{"status":"Stored \"end_date\": \"2026-01-06\""}}}],"role":"user"},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{"end_date":"2026-01-06"},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"4ded2d89-7ec6-4c1d-b850-3b8bccc1a749","timestamp":1755785762.520506}
[2025-08-21 16:16:02.556][E] 2025-08-21 16:16:02,556 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:16:02.556][E] 2025-08-21 16:16:02,556 - DEBUG - google_llm.py:117 -
[2025-08-21 16:16:02.556][E] LLM Request:
[2025-08-21 16:16:02.556][E] -----------------------------------------------------------
[2025-08-21 16:16:02.556][E] System Instruction:
[2025-08-21 16:16:02.556][E] 
[2025-08-21 16:16:02.557][E] You are a travel planning agent who help users finding best deals for flights, hotels, and constructs full itineraries for their vacation.
[2025-08-21 16:16:02.557][E] You do not handle any bookings. You are helping users with their selections and preferences only.
[2025-08-21 16:16:02.557][E] The actual booking, payment and transactions will be handled by transfering to the `booking_agent` later.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] You support a number of user journeys:
[2025-08-21 16:16:02.557][E] - Just need to find flights,
[2025-08-21 16:16:02.557][E] - Just need to find hotels,
[2025-08-21 16:16:02.557][E] - Find flights and hotels but without itinerary,
[2025-08-21 16:16:02.557][E] - Find flights, hotels with an full itinerary,
[2025-08-21 16:16:02.557][E] - Autonomously help the user find flights and hotels.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] You have access to the following tools only:
[2025-08-21 16:16:02.557][E] - Use the `flight_search_agent` tool to find flight choices,
[2025-08-21 16:16:02.557][E] - Use the `flight_seat_selection_agent` tool to find seat choices,
[2025-08-21 16:16:02.557][E] - Use the `hotel_search_agent` tool to find hotel choices,
[2025-08-21 16:16:02.557][E] - Use the `hotel_room_selection_agent` tool to find room choices,
[2025-08-21 16:16:02.557][E] - Use the `itinerary_agent` tool to generate an itinerary, and
[2025-08-21 16:16:02.557][E] - Use the `memorize` tool to remember the user's chosen selections.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] How to support the user journeys:
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] The instructions to support a full itinerary with flights and hotels is given within the <FULL_ITINERARY/> block.
[2025-08-21 16:16:02.557][E] For user journeys there only contains flights or hotels, use instructions from the <FIND_FLIGHTS/> and <FIND_HOTELS/> blocks accordingly for the identified user journey.
[2025-08-21 16:16:02.557][E] Identify the user journey under which the user is referred to you; Satisfy the user's need matching the user journey.
[2025-08-21 16:16:02.557][E] When you are being asked to act autonomously:
[2025-08-21 16:16:02.557][E] - you assume the role of the user temporarily,
[2025-08-21 16:16:02.557][E] - you can make decision on selecting flights, seats, hotels, and rooms, base on user's preferences,
[2025-08-21 16:16:02.557][E] - if you made a choice base on user's preference, briefly mention the rationale.
[2025-08-21 16:16:02.557][E] - but do not proceed to booking.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Instructions for different user journeys:
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] <FULL_ITINERARY>
[2025-08-21 16:16:02.557][E] You are creating a full plan with flights and hotel choices,
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:02.557][E] <origin></origin>
[2025-08-21 16:16:02.557][E] <destination>Montreal</destination>
[2025-08-21 16:16:02.557][E] <start_date>2026-01-01</start_date>
[2025-08-21 16:16:02.557][E] <end_date>2026-01-06</end_date>
[2025-08-21 16:16:02.557][E] <itinerary>
[2025-08-21 16:16:02.557][E] {}
[2025-08-21 16:16:02.557][E] <itinerary>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Current time: 2025-08-21 16:10:54.020572; Infer the current Year from the time.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Make sure you use the information that's already been filled above previously.
[2025-08-21 16:16:02.557][E] - If <destination/> is empty, you can derive the destination base on the dialog so far.
[2025-08-21 16:16:02.557][E] - Ask for missing information from the user, for example, the start date and the end date of the trip.
[2025-08-21 16:16:02.557][E] - The user may give you start date and number of days of stay, derive the end_date from the information given.
[2025-08-21 16:16:02.557][E] - Use the `memorize` tool to store trip metadata into the following variables (dates in YYYY-MM-DD format);
[2025-08-21 16:16:02.557][E] - `origin`,
[2025-08-21 16:16:02.557][E] - `destination`
[2025-08-21 16:16:02.557][E] - `start_date` and
[2025-08-21 16:16:02.557][E] - `end_date`
[2025-08-21 16:16:02.557][E] To make sure everything is stored correctly, instead of calling memorize all at once, chain the calls such that
[2025-08-21 16:16:02.557][E] you only call another `memorize` after the last call has responded.
[2025-08-21 16:16:02.557][E] - Use instructions from <FIND_FLIGHTS/> to complete the flight and seat choices.
[2025-08-21 16:16:02.557][E] - Use instructions from <FIND_HOTELS/> to complete the hotel and room choices.
[2025-08-21 16:16:02.557][E] - Finally, use instructions from <CREATE_ITINERARY/> to generate an itinerary.
[2025-08-21 16:16:02.557][E] </FULL_ITINERARY>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] <FIND_FLIGHTS>
[2025-08-21 16:16:02.557][E] You are to help the user select a fight and a seat. You do not handle booking nor payment.
[2025-08-21 16:16:02.557][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:02.557][E] <outbound_flight_selection></outbound_flight_selection>
[2025-08-21 16:16:02.557][E] <outbound_seat_number></outbound_seat_number>
[2025-08-21 16:16:02.557][E] <return_flight_selection></return_flight_selection>
[2025-08-21 16:16:02.557][E] <return_seat_number></return_seat_number>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] - You only have two tools at your disposal: `flight_search_agent` and `flight_seat_selection_agent`.
[2025-08-21 16:16:02.557][E] - Given the user's home city location "" and the derived destination,
[2025-08-21 16:16:02.557][E] - Call `flight_search_agent` and work with the user to select both outbound and inbound flights.
[2025-08-21 16:16:02.557][E] - Present the flight choices to the user, includes information such as: the airline name, the flight number, departure and arrival airport codes and time. When user selects the flight...
[2025-08-21 16:16:02.557][E] - Call the `flight_seat_selection_agent` tool to show seat options, asks the user to select one.
[2025-08-21 16:16:02.557][E] - Call the `memorize` tool to store the outbound and inbound flights and seats selections info into the following variables:
[2025-08-21 16:16:02.557][E] - 'outbound_flight_selection' and 'outbound_seat_number'
[2025-08-21 16:16:02.557][E] - 'return_flight_selection' and 'return_seat_number'
[2025-08-21 16:16:02.557][E] - For flight choise, store the full JSON entries from the `flight_search_agent`'s prior response.
[2025-08-21 16:16:02.557][E] - Here's the optimal flow
[2025-08-21 16:16:02.557][E] - search for flights
[2025-08-21 16:16:02.557][E] - choose flight, store choice,
[2025-08-21 16:16:02.557][E] - select seats, store choice.
[2025-08-21 16:16:02.557][E] </FIND_FLIGHTS>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] <FIND_HOTELS>
[2025-08-21 16:16:02.557][E] You are to help the user with their hotel choices. You do not handle booking nor payment.
[2025-08-21 16:16:02.557][E] Your goal is to help the traveler by  completing the following information if any is blank:
[2025-08-21 16:16:02.557][E] <hotel_selection></hotel_selection>
[2025-08-21 16:16:02.557][E] <room_selection><room_selection>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] - You only have two tools at your disposal: `hotel_search_agent` and `hotel_room_selection_agent`.
[2025-08-21 16:16:02.557][E] - Given the derived destination and the interested activities,
[2025-08-21 16:16:02.557][E] - Call `hotel_search_agent` and work with the user to select a hotel. When user select the hotel...
[2025-08-21 16:16:02.557][E] - Call `hotel_room_selection_agent` to choose a room.
[2025-08-21 16:16:02.557][E] - Call the `memorize` tool to store the hotel and room selections into the following variables:
[2025-08-21 16:16:02.557][E] - `hotel_selection` and `room_selection`
[2025-08-21 16:16:02.557][E] - For hotel choice, store the chosen JSON entry from the `hotel_search_agent`'s prior response.
[2025-08-21 16:16:02.557][E] - Here is the optimal flow
[2025-08-21 16:16:02.557][E] - search for hotel
[2025-08-21 16:16:02.557][E] - choose hotel, store choice,
[2025-08-21 16:16:02.557][E] - select room, store choice.
[2025-08-21 16:16:02.557][E] </FIND_HOTELS>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] <CREATE_ITINERARY>
[2025-08-21 16:16:02.557][E] - Help the user prepare a draft itinerary order by days, including a few activites from the dialog so far and from their stated <interests/> below.
[2025-08-21 16:16:02.557][E] - The itinery should start with traveling to the airport from home. Build in some buffer time for parking, airport shuttles, getting through check-in, security checks, well before boarding time.
[2025-08-21 16:16:02.557][E] - Travel from airport to the hotel for check-in, up on arrival at the airport.
[2025-08-21 16:16:02.557][E] - Then the activities.
[2025-08-21 16:16:02.557][E] - At the end of the trip, check-out from the hotel and travel back to the airport.
[2025-08-21 16:16:02.557][E] - Confirm with the user if the draft is good to go, if the user gives the go ahead, carry out the following steps:
[2025-08-21 16:16:02.557][E] - Make sure the user's choices for flights and hotels are memorized as instructed above.
[2025-08-21 16:16:02.557][E] - Store the itinerary by calling the `itinerary_agent` tool, storing the entire plan including flights and hotel details.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Interests:
[2025-08-21 16:16:02.557][E] <interests>
[2025-08-21 16:16:02.557][E] {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}
[2025-08-21 16:16:02.557][E] </interests>
[2025-08-21 16:16:02.557][E] </CREATE_ITINERARY>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Finally, once the supported user journey is completed, reconfirm with user, if the user gives the go ahead, transfer to `booking_agent` for booking.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Please use the context info below for user preferences
[2025-08-21 16:16:02.557][E] <user_profile>
[2025-08-21 16:16:02.557][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:16:02.557][E] </user_profile>
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] You are an agent. Your internal name is "planning_agent".
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] The description about you is "Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels."
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] You have a list of other agents to transfer to:
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: root_agent
[2025-08-21 16:16:02.557][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: inspiration_agent
[2025-08-21 16:16:02.557][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: booking_agent
[2025-08-21 16:16:02.557][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: pre_trip_agent
[2025-08-21 16:16:02.557][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: in_trip_agent
[2025-08-21 16:16:02.557][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] Agent name: post_trip_agent
[2025-08-21 16:16:02.557][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:16:02.557][E] can answer it.
[2025-08-21 16:16:02.557][E] 
[2025-08-21 16:16:02.557][E] If another agent is better for answering the question according to its
[2025-08-21 16:16:02.557][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:16:02.557][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:16:02.557][E] the function call.
[2025-08-21 16:16:02.558][E] 
[2025-08-21 16:16:02.558][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:16:02.558][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:16:02.558][E] to your parent agent.
[2025-08-21 16:16:02.558][E] 
[2025-08-21 16:16:02.558][E] -----------------------------------------------------------
[2025-08-21 16:16:02.558][E] Contents:
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `poi_agent` with parameters: {'request': 'Montreal'}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `poi_agent` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': '', 'place_id': ''}]}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `map_tool` with parameters: {'key': 'poi'}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `map_tool` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] said: Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'planning_agent'}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"thought_signature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","function_call":{"args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:02.558][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"destination\": \"Montreal\""}}}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"thought_signature":"Cp4BAVSoXO7JFJMmYZPyGc9wQgr1z96XEh5WBDQrrahRLKRkCvOBBkbunavtlTLLMNqFAdYW2V0XuXVe_RbrhuqpozxIQAgu4AOh1VOUKU68NPd5VdS4ltzAM_OZvf7s9EDIv1e7p01CJNLHJvsOCcSMWKLbW-lgWI0N1l1RLVs9KqZs_c6TCIx3jP8ylu0_Ta_vdputkUTrmDkYRdruvzA=","function_call":{"args":{"key":"start_date","value":"2026-01-01"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:02.558][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"start_date\": \"2026-01-01\""}}}],"role":"user"}
[2025-08-21 16:16:02.558][E] {"parts":[{"thought_signature":"Cp0BAVSoXO51ujQdffzgKhpqoTo3ss-XBWXNt_zRHK3sI8_5IkN0L8Zy-VsqoHy_5SywfZtI7-l7u-Ikv7Q_0oV1VpoZw0AbctNNE8DPXvKb19WKTtT04-caZ405th1QkIWeqaSp321VIPyO2UGpdeyO6W0NeiucSfYMz0ybml8-UD44bIgVZ-Ybtv_sI-DzchgTVKRVXTDtO78w43Cjzw==","function_call":{"args":{"value":"2026-01-06","key":"end_date"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:02.558][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"end_date\": \"2026-01-06\""}}}],"role":"user"}
[2025-08-21 16:16:02.558][E] -----------------------------------------------------------
[2025-08-21 16:16:02.558][E] Functions:
[2025-08-21 16:16:02.558][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] flight_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] flight_seat_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] hotel_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] hotel_room_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] itinerary_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] memorize: {'key': {'type': <Type.STRING: 'STRING'>}, 'value': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:02.558][E] -----------------------------------------------------------
[2025-08-21 16:16:02.558][E] 
[2025-08-21 16:16:02.558][E] 2025-08-21 16:16:02,556 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:16:02.558][E] 2025-08-21 16:16:02,558 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:02.559][E] 2025-08-21 16:16:02,559 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:16:02.559][E] 2025-08-21 16:16:02,559 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:02.579][E] 2025-08-21 16:16:02,579 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5c5c0>
[2025-08-21 16:16:02.579][E] 2025-08-21 16:16:02,579 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125cd0350> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:16:02.614][E] 2025-08-21 16:16:02,614 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5e2a0>
[2025-08-21 16:16:02.614][E] 2025-08-21 16:16:02,614 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:02.614][E] 2025-08-21 16:16:02,614 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:16:02.614][E] 2025-08-21 16:16:02,614 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:16:02.615][E] 2025-08-21 16:16:02,615 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:16:02.615][E] 2025-08-21 16:16:02,615 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:03.985][E] 2025-08-21 16:16:03,984 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:04 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/8'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=1347'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755767109.80581.2822469,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133'), (b'X-Google-GFE-Request-Trace', b'aczrhi14:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,aczrhi14:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud,main:GLOBAL_all_non_cloud_test'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133,Mentat oracle: [2002:a05:6020:c126:b0:615:f50f:dd4e]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:03.985][E] 2025-08-21 16:16:03,985 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:03.985][E] 2025-08-21 16:16:03,985 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:03.986][E] 2025-08-21 16:16:03,986 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:03.986][E] 2025-08-21 16:16:03,986 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:03.986][E] 2025-08-21 16:16:03,986 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:03.987][E] 2025-08-21 16:16:03,987 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:03.987][E] 2025-08-21 16:16:03,987 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature', 'function_call'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:16:03.987][E] 2025-08-21 16:16:03,987 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:03.987][E] LLM Response:
[2025-08-21 16:16:03.987][E] -----------------------------------------------------------
[2025-08-21 16:16:03.987][E] Text:
[2025-08-21 16:16:03.987][E] None
[2025-08-21 16:16:03.987][E] -----------------------------------------------------------
[2025-08-21 16:16:03.987][E] Function calls:
[2025-08-21 16:16:03.987][E] name: flight_search_agent, args: {'request': 'Find flights from San Diego (SAN) to Montreal (YUL) departing on 2026-01-01 and returning on 2026-01-06.'}
[2025-08-21 16:16:03.987][E] -----------------------------------------------------------
[2025-08-21 16:16:03.987][E] Raw response:
[2025-08-21 16:16:03.987][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:04 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/8","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=1347","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755767109.80581.2822469,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133","x-google-gfe-request-trace":"aczrhi14:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/8,aczrhi14:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud,main:GLOBAL_all_non_cloud_test","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/133,Mentat oracle: [2002:a05:6020:c126:b0:615:f50f:dd4e]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CrEDAVSoXO5uZkFfgDlIADCNTVg9krT38kptZC48id25EU6QrqTVN0fETxeZE9jkSZQJQiZ82d62l2JlAPTONy8E0T7hu5tksPK0WlTpgtbx8aSt2oC3hczl72wsPq3B4u87Smydc_u8fqz7nHLK189AYkdrg6DsbCuj-L_MfGqSb_80ovp3U7f3tmLBrrVQKbd8d-HJVoAaSDn5KOJ4pgZgeXGdKI_68ixEGZ9dfp_bpTS7qosN3x7Fh11Q5XOGlNxVgj05rogyRU28P0ME6_LZqoAZ3WYOwJNHrNDtsmXTLcXyiLo88EJC6Klz1-FlL27B_g7jwO5EAV8azfVmyYLoQW1bOLzXqwYATp3n-C6ERPMwnef17Kmbg74OtnJeDh-nKqFUZRQRKsECSsHyUd6GTSIS5WUpr_PiFn-eJn4Kquh5ig_6EcBCrY77J4jgOGwbU2tEO9s0Ptm13McwcGPhdfKerYCvRxrcMwUE-DtmBrDICz0Xsrge_kOqu7uyR3hmLeQmXEyGC_zer6IvinnfYDwKBXgsvuP93vUenxJIvgCDIpr1r8VQfgg2YbZCVxI_Cw==","function_call":{"args":{"request":"Find flights from San Diego (SAN) to Montreal (YUL) departing on 2026-01-01 and returning on 2026-01-06."},"name":"flight_search_agent"}}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":57,"prompt_token_count":5625,"prompt_tokens_details":[{"modality":"TEXT","token_count":5625}],"thoughts_token_count":122,"total_token_count":5804},"automatic_function_calling_history":[]}
[2025-08-21 16:16:03.988][E] -----------------------------------------------------------
[2025-08-21 16:16:03.988][E] 
[2025-08-21 16:16:03.988][E] 2025-08-21 16:16:03,988 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:03.988][E] 2025-08-21 16:16:03,988 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CrEDAVSoXO5uZkFfgDlIADCNTVg9krT38kptZC48id25EU6QrqTVN0fETxeZE9jkSZQJQiZ82d62l2JlAPTONy8E0T7hu5tksPK0WlTpgtbx8aSt2oC3hczl72wsPq3B4u87Smydc_u8fqz7nHLK189AYkdrg6DsbCuj-L_MfGqSb_80ovp3U7f3tmLBrrVQKbd8d-HJVoAaSDn5KOJ4pgZgeXGdKI_68ixEGZ9dfp_bpTS7qosN3x7Fh11Q5XOGlNxVgj05rogyRU28P0ME6_LZqoAZ3WYOwJNHrNDtsmXTLcXyiLo88EJC6Klz1-FlL27B_g7jwO5EAV8azfVmyYLoQW1bOLzXqwYATp3n-C6ERPMwnef17Kmbg74OtnJeDh-nKqFUZRQRKsECSsHyUd6GTSIS5WUpr_PiFn-eJn4Kquh5ig_6EcBCrY77J4jgOGwbU2tEO9s0Ptm13McwcGPhdfKerYCvRxrcMwUE-DtmBrDICz0Xsrge_kOqu7uyR3hmLeQmXEyGC_zer6IvinnfYDwKBXgsvuP93vUenxJIvgCDIpr1r8VQfgg2YbZCVxI_Cw==","functionCall":{"id":"adk-560a0036-ced2-41b4-b577-c7c1d4a9c475","args":{"request":"Find flights from San Diego (SAN) to Montreal (YUL) departing on 2026-01-01 and returning on 2026-01-06."},"name":"flight_search_agent"}}],"role":"model"},"usageMetadata":{"candidatesTokenCount":57,"promptTokenCount":5625,"promptTokensDetails":[{"modality":"TEXT","tokenCount":5625}],"thoughtsTokenCount":122,"totalTokenCount":5804},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"longRunningToolIds":[],"id":"d0bf45ff-c6e2-4828-8788-b2e373323b42","timestamp":1755785762.522701}
[2025-08-21 16:16:04.020][E] 2025-08-21 16:16:04,020 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:16:04.021][E] 2025-08-21 16:16:04,020 - DEBUG - google_llm.py:117 -
[2025-08-21 16:16:04.021][E] LLM Request:
[2025-08-21 16:16:04.021][E] -----------------------------------------------------------
[2025-08-21 16:16:04.021][E] System Instruction:
[2025-08-21 16:16:04.021][E] Generate search results for flights from origin to destination inferred from user query please use future dates within 3 months from today's date for the prices, limit to 4 results.
[2025-08-21 16:16:04.021][E] - ask for any details you don't know, like origin and destination, etc.
[2025-08-21 16:16:04.021][E] - You must generate non empty json response if the user provides origin and destination location
[2025-08-21 16:16:04.021][E] - today's date is ${{new Date().toLocaleDateString()}}.
[2025-08-21 16:16:04.021][E] - Please use the context info below for any user preferences
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] Current user:
[2025-08-21 16:16:04.021][E] <user_profile>
[2025-08-21 16:16:04.021][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:16:04.021][E] </user_profile>
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] Current time: 2025-08-21 16:10:54.020572
[2025-08-21 16:16:04.021][E] Use origin:  and destination: Montreal for your context
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] Return the response as a JSON object formatted like this:
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] {{
[2025-08-21 16:16:04.021][E] {{"flights": [
[2025-08-21 16:16:04.021][E] {
[2025-08-21 16:16:04.021][E] "flight_number":"Unique identifier for the flight, like BA123, AA31, etc."),
[2025-08-21 16:16:04.021][E] "departure": {{
[2025-08-21 16:16:04.021][E] "city_name": "Name of the departure city",
[2025-08-21 16:16:04.021][E] "airport_code": "IATA code of the departure airport",
[2025-08-21 16:16:04.021][E] "timestamp": ("ISO 8601 departure date and time"),
[2025-08-21 16:16:04.021][E] }},
[2025-08-21 16:16:04.021][E] "arrival": {{
[2025-08-21 16:16:04.021][E] "city_name":"Name of the arrival city",
[2025-08-21 16:16:04.021][E] "airport_code":"IATA code of the arrival airport",
[2025-08-21 16:16:04.021][E] "timestamp": "ISO 8601 arrival date and time",
[2025-08-21 16:16:04.021][E] }},
[2025-08-21 16:16:04.021][E] "airlines": [
[2025-08-21 16:16:04.021][E] "Airline names, e.g., American Airlines, Emirates"
[2025-08-21 16:16:04.021][E] ],
[2025-08-21 16:16:04.021][E] "airline_logo": "Airline logo location , e.g., if airlines is American then output /images/american.png for United use /images/united.png for Delta use /images/delta1.jpg rest default to /images/airplane.png",
[2025-08-21 16:16:04.021][E] "price_in_usd": "Integer - Flight price in US dollars",
[2025-08-21 16:16:04.021][E] "number_of_stops": "Integer - indicating the number of stops during the flight",
[2025-08-21 16:16:04.021][E] }
[2025-08-21 16:16:04.021][E] ]}}
[2025-08-21 16:16:04.021][E] }}
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] Remember that you can only use the tools to complete your tasks:
[2025-08-21 16:16:04.021][E] - `flight_search_agent`,
[2025-08-21 16:16:04.021][E] - `flight_seat_selection_agent`,
[2025-08-21 16:16:04.021][E] - `hotel_search_agent`,
[2025-08-21 16:16:04.021][E] - `hotel_room_selection_agent`,
[2025-08-21 16:16:04.021][E] - `itinerary_agent`,
[2025-08-21 16:16:04.021][E] - `memorize`
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] You are an agent. Your internal name is "flight_search_agent".
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] The description about you is "Help users find best flight deals"
[2025-08-21 16:16:04.021][E] -----------------------------------------------------------
[2025-08-21 16:16:04.021][E] Contents:
[2025-08-21 16:16:04.021][E] {"parts":[{"text":"Find flights from San Diego (SAN) to Montreal (YUL) departing on 2026-01-01 and returning on 2026-01-06."}],"role":"user"}
[2025-08-21 16:16:04.021][E] -----------------------------------------------------------
[2025-08-21 16:16:04.021][E] Functions:
[2025-08-21 16:16:04.021][E] 
[2025-08-21 16:16:04.021][E] -----------------------------------------------------------
[2025-08-21 16:16:04.022][E] 
[2025-08-21 16:16:04.022][E] 2025-08-21 16:16:04,020 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:16:04.023][E] 2025-08-21 16:16:04,023 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:16:04.045][E] 2025-08-21 16:16:04,045 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e5dc70>
[2025-08-21 16:16:04.045][E] 2025-08-21 16:16:04,045 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e3c750> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:16:04.078][E] 2025-08-21 16:16:04,078 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e25d90>
[2025-08-21 16:16:04.078][E] 2025-08-21 16:16:04,078 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:04.079][E] 2025-08-21 16:16:04,079 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:16:04.079][E] 2025-08-21 16:16:04,079 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:16:04.079][E] 2025-08-21 16:16:04,079 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:16:04.079][E] 2025-08-21 16:16:04,079 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:08.198][E] 2025-08-21 16:16:08,198 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:08 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/0'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=4097'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755767101.897845.3993461,/bns/we/borg/we/bns/genai-api/prod.genai-api/0,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/49'), (b'X-Google-GFE-Request-Trace', b'aczrhi9:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/0,aczrhi9:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/49,Mentat oracle: [2002:a05:6028:8693:b0:430:771d:d9a8]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:08.198][E] 2025-08-21 16:16:08,198 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:08.198][E] 2025-08-21 16:16:08,198 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:08.198][E] 2025-08-21 16:16:08,198 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:08.199][E] 2025-08-21 16:16:08,199 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:08.199][E] 2025-08-21 16:16:08,199 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:08.199][E] 2025-08-21 16:16:08,199 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:08.199][E] 2025-08-21 16:16:08,199 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:08.199][E] LLM Response:
[2025-08-21 16:16:08.199][E] -----------------------------------------------------------
[2025-08-21 16:16:08.199][E] Text:
[2025-08-21 16:16:08.199][E] {"flights": [{"flight_number": "AC345", "departure": {"city_name": "San Diego", "airport_code": "SAN", "timestamp": "2026-01-01T08:00:00"}, "arrival": {"city_name": "Montreal", "airport_code": "YUL", "timestamp": "2026-01-01T17:30:00"}, "airlines": ["Air Canada"], "airline_logo": "/images/airplane.png", "price_in_usd": 450, "number_of_stops": 1}, {"flight_number": "UA123", "departure": {"city_name": "San Diego", "airport_code": "SAN", "timestamp": "2026-01-01T09:15:00"}, "arrival": {"city_name": "Montreal", "airport_code": "YUL", "timestamp": "2026-01-01T18:45:00"}, "airlines": ["United Airlines"], "airline_logo": "/images/united.png", "price_in_usd": 480, "number_of_stops": 1}, {"flight_number": "DL789", "departure": {"city_name": "San Diego", "airport_code": "SAN", "timestamp": "2026-01-01T10:00:00"}, "arrival": {"city_name": "Montreal", "airport_code": "YUL", "timestamp": "2026-01-01T19:15:00"}, "airlines": ["Delta Airlines"], "airline_logo": "/images/delta1.jpg", "price_in_usd": 510, "number_of_stops": 1}, {"flight_number": "AA567", "departure": {"city_name": "San Diego", "airport_code": "SAN", "timestamp": "2026-01-01T07:30:00"}, "arrival": {"city_name": "Montreal", "airport_code": "YUL", "timestamp": "2026-01-01T16:45:00"}, "airlines": ["American Airlines"], "airline_logo": "/images/american.png", "price_in_usd": 475, "number_of_stops": 1}]}
[2025-08-21 16:16:08.199][E] -----------------------------------------------------------
[2025-08-21 16:16:08.199][E] Function calls:
[2025-08-21 16:16:08.199][E] 
[2025-08-21 16:16:08.199][E] -----------------------------------------------------------
[2025-08-21 16:16:08.199][E] Raw response:
[2025-08-21 16:16:08.199][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:08 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/0","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=4097","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755767101.897845.3993461,/bns/we/borg/we/bns/genai-api/prod.genai-api/0,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/49","x-google-gfe-request-trace":"aczrhi9:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/0,aczrhi9:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/49,Mentat oracle: [2002:a05:6028:8693:b0:430:771d:d9a8]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"text":"{\"flights\": [{\"flight_number\": \"AC345\", \"departure\": {\"city_name\": \"San Diego\", \"airport_code\": \"SAN\", \"timestamp\": \"2026-01-01T08:00:00\"}, \"arrival\": {\"city_name\": \"Montreal\", \"airport_code\": \"YUL\", \"timestamp\": \"2026-01-01T17:30:00\"}, \"airlines\": [\"Air Canada\"], \"airline_logo\": \"/images/airplane.png\", \"price_in_usd\": 450, \"number_of_stops\": 1}, {\"flight_number\": \"UA123\", \"departure\": {\"city_name\": \"San Diego\", \"airport_code\": \"SAN\", \"timestamp\": \"2026-01-01T09:15:00\"}, \"arrival\": {\"city_name\": \"Montreal\", \"airport_code\": \"YUL\", \"timestamp\": \"2026-01-01T18:45:00\"}, \"airlines\": [\"United Airlines\"], \"airline_logo\": \"/images/united.png\", \"price_in_usd\": 480, \"number_of_stops\": 1}, {\"flight_number\": \"DL789\", \"departure\": {\"city_name\": \"San Diego\", \"airport_code\": \"SAN\", \"timestamp\": \"2026-01-01T10:00:00\"}, \"arrival\": {\"city_name\": \"Montreal\", \"airport_code\": \"YUL\", \"timestamp\": \"2026-01-01T19:15:00\"}, \"airlines\": [\"Delta Airlines\"], \"airline_logo\": \"/images/delta1.jpg\", \"price_in_usd\": 510, \"number_of_stops\": 1}, {\"flight_number\": \"AA567\", \"departure\": {\"city_name\": \"San Diego\", \"airport_code\": \"SAN\", \"timestamp\": \"2026-01-01T07:30:00\"}, \"arrival\": {\"city_name\": \"Montreal\", \"airport_code\": \"YUL\", \"timestamp\": \"2026-01-01T16:45:00\"}, \"airlines\": [\"American Airlines\"], \"airline_logo\": \"/images/american.png\", \"price_in_usd\": 475, \"number_of_stops\": 1}]}"}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":564,"prompt_token_count":696,"prompt_tokens_details":[{"modality":"TEXT","token_count":696}],"thoughts_token_count":300,"total_token_count":1560},"automatic_function_calling_history":[],"parsed":{"flights":[{"flight_number":"AC345","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T08:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T17:30:00"},"airlines":["Air Canada"],"airline_logo":"/images/airplane.png","price_in_usd":450,"number_of_stops":1},{"flight_number":"UA123","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T09:15:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T18:45:00"},"airlines":["United Airlines"],"airline_logo":"/images/united.png","price_in_usd":480,"number_of_stops":1},{"flight_number":"DL789","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T10:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T19:15:00"},"airlines":["Delta Airlines"],"airline_logo":"/images/delta1.jpg","price_in_usd":510,"number_of_stops":1},{"flight_number":"AA567","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T07:30:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T16:45:00"},"airlines":["American Airlines"],"airline_logo":"/images/american.png","price_in_usd":475,"number_of_stops":1}]}}
[2025-08-21 16:16:08.199][E] -----------------------------------------------------------
[2025-08-21 16:16:08.199][E] 
[2025-08-21 16:16:08.201][E] 2025-08-21 16:16:08,201 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:08.201][E] 2025-08-21 16:16:08,201 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"functionResponse":{"id":"adk-560a0036-ced2-41b4-b577-c7c1d4a9c475","name":"flight_search_agent","response":{"flights":[{"flight_number":"AC345","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T08:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T17:30:00"},"airlines":["Air Canada"],"airline_logo":"/images/airplane.png","price_in_usd":450,"number_of_stops":1},{"flight_number":"UA123","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T09:15:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T18:45:00"},"airlines":["United Airlines"],"airline_logo":"/images/united.png","price_in_usd":480,"number_of_stops":1},{"flight_number":"DL789","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T10:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T19:15:00"},"airlines":["Delta Airlines"],"airline_logo":"/images/delta1.jpg","price_in_usd":510,"number_of_stops":1},{"flight_number":"AA567","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T07:30:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T16:45:00"},"airlines":["American Airlines"],"airline_logo":"/images/american.png","price_in_usd":475,"number_of_stops":1}]}}}],"role":"user"},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{"flight":{"flights":[{"flight_number":"AC345","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T08:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T17:30:00"},"airlines":["Air Canada"],"airline_logo":"/images/airplane.png","price_in_usd":450,"number_of_stops":1},{"flight_number":"UA123","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T09:15:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T18:45:00"},"airlines":["United Airlines"],"airline_logo":"/images/united.png","price_in_usd":480,"number_of_stops":1},{"flight_number":"DL789","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T10:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T19:15:00"},"airlines":["Delta Airlines"],"airline_logo":"/images/delta1.jpg","price_in_usd":510,"number_of_stops":1},{"flight_number":"AA567","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T07:30:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T16:45:00"},"airlines":["American Airlines"],"airline_logo":"/images/american.png","price_in_usd":475,"number_of_stops":1}]}},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"d504346d-ea39-4bea-9306-9a2ff26cf1ff","timestamp":1755785768.201664}
[2025-08-21 16:16:08.245][E] 2025-08-21 16:16:08,245 - INFO - google_llm.py:111 - Sending out request, model: gemini-2.5-flash, backend: GoogleLLMVariant.GEMINI_API, stream: False
[2025-08-21 16:16:08.246][E] 2025-08-21 16:16:08,246 - DEBUG - google_llm.py:117 -
[2025-08-21 16:16:08.246][E] LLM Request:
[2025-08-21 16:16:08.246][E] -----------------------------------------------------------
[2025-08-21 16:16:08.246][E] System Instruction:
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] You are a travel planning agent who help users finding best deals for flights, hotels, and constructs full itineraries for their vacation.
[2025-08-21 16:16:08.246][E] You do not handle any bookings. You are helping users with their selections and preferences only.
[2025-08-21 16:16:08.246][E] The actual booking, payment and transactions will be handled by transfering to the `booking_agent` later.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] You support a number of user journeys:
[2025-08-21 16:16:08.246][E] - Just need to find flights,
[2025-08-21 16:16:08.246][E] - Just need to find hotels,
[2025-08-21 16:16:08.246][E] - Find flights and hotels but without itinerary,
[2025-08-21 16:16:08.246][E] - Find flights, hotels with an full itinerary,
[2025-08-21 16:16:08.246][E] - Autonomously help the user find flights and hotels.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] You have access to the following tools only:
[2025-08-21 16:16:08.246][E] - Use the `flight_search_agent` tool to find flight choices,
[2025-08-21 16:16:08.246][E] - Use the `flight_seat_selection_agent` tool to find seat choices,
[2025-08-21 16:16:08.246][E] - Use the `hotel_search_agent` tool to find hotel choices,
[2025-08-21 16:16:08.246][E] - Use the `hotel_room_selection_agent` tool to find room choices,
[2025-08-21 16:16:08.246][E] - Use the `itinerary_agent` tool to generate an itinerary, and
[2025-08-21 16:16:08.246][E] - Use the `memorize` tool to remember the user's chosen selections.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] How to support the user journeys:
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] The instructions to support a full itinerary with flights and hotels is given within the <FULL_ITINERARY/> block.
[2025-08-21 16:16:08.246][E] For user journeys there only contains flights or hotels, use instructions from the <FIND_FLIGHTS/> and <FIND_HOTELS/> blocks accordingly for the identified user journey.
[2025-08-21 16:16:08.246][E] Identify the user journey under which the user is referred to you; Satisfy the user's need matching the user journey.
[2025-08-21 16:16:08.246][E] When you are being asked to act autonomously:
[2025-08-21 16:16:08.246][E] - you assume the role of the user temporarily,
[2025-08-21 16:16:08.246][E] - you can make decision on selecting flights, seats, hotels, and rooms, base on user's preferences,
[2025-08-21 16:16:08.246][E] - if you made a choice base on user's preference, briefly mention the rationale.
[2025-08-21 16:16:08.246][E] - but do not proceed to booking.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Instructions for different user journeys:
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] <FULL_ITINERARY>
[2025-08-21 16:16:08.246][E] You are creating a full plan with flights and hotel choices,
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:08.246][E] <origin></origin>
[2025-08-21 16:16:08.246][E] <destination>Montreal</destination>
[2025-08-21 16:16:08.246][E] <start_date>2026-01-01</start_date>
[2025-08-21 16:16:08.246][E] <end_date>2026-01-06</end_date>
[2025-08-21 16:16:08.246][E] <itinerary>
[2025-08-21 16:16:08.246][E] {}
[2025-08-21 16:16:08.246][E] <itinerary>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Current time: 2025-08-21 16:10:54.020572; Infer the current Year from the time.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Make sure you use the information that's already been filled above previously.
[2025-08-21 16:16:08.246][E] - If <destination/> is empty, you can derive the destination base on the dialog so far.
[2025-08-21 16:16:08.246][E] - Ask for missing information from the user, for example, the start date and the end date of the trip.
[2025-08-21 16:16:08.246][E] - The user may give you start date and number of days of stay, derive the end_date from the information given.
[2025-08-21 16:16:08.246][E] - Use the `memorize` tool to store trip metadata into the following variables (dates in YYYY-MM-DD format);
[2025-08-21 16:16:08.246][E] - `origin`,
[2025-08-21 16:16:08.246][E] - `destination`
[2025-08-21 16:16:08.246][E] - `start_date` and
[2025-08-21 16:16:08.246][E] - `end_date`
[2025-08-21 16:16:08.246][E] To make sure everything is stored correctly, instead of calling memorize all at once, chain the calls such that
[2025-08-21 16:16:08.246][E] you only call another `memorize` after the last call has responded.
[2025-08-21 16:16:08.246][E] - Use instructions from <FIND_FLIGHTS/> to complete the flight and seat choices.
[2025-08-21 16:16:08.246][E] - Use instructions from <FIND_HOTELS/> to complete the hotel and room choices.
[2025-08-21 16:16:08.246][E] - Finally, use instructions from <CREATE_ITINERARY/> to generate an itinerary.
[2025-08-21 16:16:08.246][E] </FULL_ITINERARY>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] <FIND_FLIGHTS>
[2025-08-21 16:16:08.246][E] You are to help the user select a fight and a seat. You do not handle booking nor payment.
[2025-08-21 16:16:08.246][E] Your goal is to help the traveler reach the destination to enjoy these activities, by first completing the following information if any is blank:
[2025-08-21 16:16:08.246][E] <outbound_flight_selection></outbound_flight_selection>
[2025-08-21 16:16:08.246][E] <outbound_seat_number></outbound_seat_number>
[2025-08-21 16:16:08.246][E] <return_flight_selection></return_flight_selection>
[2025-08-21 16:16:08.246][E] <return_seat_number></return_seat_number>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] - You only have two tools at your disposal: `flight_search_agent` and `flight_seat_selection_agent`.
[2025-08-21 16:16:08.246][E] - Given the user's home city location "" and the derived destination,
[2025-08-21 16:16:08.246][E] - Call `flight_search_agent` and work with the user to select both outbound and inbound flights.
[2025-08-21 16:16:08.246][E] - Present the flight choices to the user, includes information such as: the airline name, the flight number, departure and arrival airport codes and time. When user selects the flight...
[2025-08-21 16:16:08.246][E] - Call the `flight_seat_selection_agent` tool to show seat options, asks the user to select one.
[2025-08-21 16:16:08.246][E] - Call the `memorize` tool to store the outbound and inbound flights and seats selections info into the following variables:
[2025-08-21 16:16:08.246][E] - 'outbound_flight_selection' and 'outbound_seat_number'
[2025-08-21 16:16:08.246][E] - 'return_flight_selection' and 'return_seat_number'
[2025-08-21 16:16:08.246][E] - For flight choise, store the full JSON entries from the `flight_search_agent`'s prior response.
[2025-08-21 16:16:08.246][E] - Here's the optimal flow
[2025-08-21 16:16:08.246][E] - search for flights
[2025-08-21 16:16:08.246][E] - choose flight, store choice,
[2025-08-21 16:16:08.246][E] - select seats, store choice.
[2025-08-21 16:16:08.246][E] </FIND_FLIGHTS>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] <FIND_HOTELS>
[2025-08-21 16:16:08.246][E] You are to help the user with their hotel choices. You do not handle booking nor payment.
[2025-08-21 16:16:08.246][E] Your goal is to help the traveler by  completing the following information if any is blank:
[2025-08-21 16:16:08.246][E] <hotel_selection></hotel_selection>
[2025-08-21 16:16:08.246][E] <room_selection><room_selection>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] - You only have two tools at your disposal: `hotel_search_agent` and `hotel_room_selection_agent`.
[2025-08-21 16:16:08.246][E] - Given the derived destination and the interested activities,
[2025-08-21 16:16:08.246][E] - Call `hotel_search_agent` and work with the user to select a hotel. When user select the hotel...
[2025-08-21 16:16:08.246][E] - Call `hotel_room_selection_agent` to choose a room.
[2025-08-21 16:16:08.246][E] - Call the `memorize` tool to store the hotel and room selections into the following variables:
[2025-08-21 16:16:08.246][E] - `hotel_selection` and `room_selection`
[2025-08-21 16:16:08.246][E] - For hotel choice, store the chosen JSON entry from the `hotel_search_agent`'s prior response.
[2025-08-21 16:16:08.246][E] - Here is the optimal flow
[2025-08-21 16:16:08.246][E] - search for hotel
[2025-08-21 16:16:08.246][E] - choose hotel, store choice,
[2025-08-21 16:16:08.246][E] - select room, store choice.
[2025-08-21 16:16:08.246][E] </FIND_HOTELS>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] <CREATE_ITINERARY>
[2025-08-21 16:16:08.246][E] - Help the user prepare a draft itinerary order by days, including a few activites from the dialog so far and from their stated <interests/> below.
[2025-08-21 16:16:08.246][E] - The itinery should start with traveling to the airport from home. Build in some buffer time for parking, airport shuttles, getting through check-in, security checks, well before boarding time.
[2025-08-21 16:16:08.246][E] - Travel from airport to the hotel for check-in, up on arrival at the airport.
[2025-08-21 16:16:08.246][E] - Then the activities.
[2025-08-21 16:16:08.246][E] - At the end of the trip, check-out from the hotel and travel back to the airport.
[2025-08-21 16:16:08.246][E] - Confirm with the user if the draft is good to go, if the user gives the go ahead, carry out the following steps:
[2025-08-21 16:16:08.246][E] - Make sure the user's choices for flights and hotels are memorized as instructed above.
[2025-08-21 16:16:08.246][E] - Store the itinerary by calling the `itinerary_agent` tool, storing the entire plan including flights and hotel details.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Interests:
[2025-08-21 16:16:08.246][E] <interests>
[2025-08-21 16:16:08.246][E] {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}
[2025-08-21 16:16:08.246][E] </interests>
[2025-08-21 16:16:08.246][E] </CREATE_ITINERARY>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Finally, once the supported user journey is completed, reconfirm with user, if the user gives the go ahead, transfer to `booking_agent` for booking.
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] Please use the context info below for user preferences
[2025-08-21 16:16:08.246][E] <user_profile>
[2025-08-21 16:16:08.246][E] {'passport_nationality': 'US Citizen', 'seat_preference': 'window', 'food_preference': 'vegan', 'allergies': [], 'likes': [], 'dislikes': [], 'price_sensitivity': [], 'home': {'event_type': 'home', 'address': '6420 Sequence Dr #400, San Diego, CA 92121, United States', 'local_prefer_mode': 'drive'}}
[2025-08-21 16:16:08.246][E] </user_profile>
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.246][E] You are an agent. Your internal name is "planning_agent".
[2025-08-21 16:16:08.246][E] 
[2025-08-21 16:16:08.247][E] The description about you is "Helps users with travel planning, complete a full itinerary for their vacation, finding best deals for flights and hotels."
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] You have a list of other agents to transfer to:
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: root_agent
[2025-08-21 16:16:08.247][E] Agent description: A Travel Conceirge using the services of multiple sub-agents
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: inspiration_agent
[2025-08-21 16:16:08.247][E] Agent description: A travel inspiration agent who inspire users, and discover their next vacations; Provide information about places, activities, interests,
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: booking_agent
[2025-08-21 16:16:08.247][E] Agent description: Given an itinerary, complete the bookings of items by handling payment choices and processing.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: pre_trip_agent
[2025-08-21 16:16:08.247][E] Agent description: Given an itinerary, this agent keeps up to date and provides relevant travel information to the user before the trip.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: in_trip_agent
[2025-08-21 16:16:08.247][E] Agent description: Provide information about what the users need as part of the tour.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Agent name: post_trip_agent
[2025-08-21 16:16:08.247][E] Agent description: A follow up agent to learn from user's experience; In turn improves the user's future trips planning and in-trip experience.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] If you are the best to answer the question according to your description, you
[2025-08-21 16:16:08.247][E] can answer it.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] If another agent is better for answering the question according to its
[2025-08-21 16:16:08.247][E] description, call `transfer_to_agent` function to transfer the
[2025-08-21 16:16:08.247][E] question to that agent. When transferring, do not generate any text other than
[2025-08-21 16:16:08.247][E] the function call.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] Your parent agent is root_agent. If neither the other agents nor
[2025-08-21 16:16:08.247][E] you are best for answering the question according to the descriptions, transfer
[2025-08-21 16:16:08.247][E] to your parent agent.
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] -----------------------------------------------------------
[2025-08-21 16:16:08.247][E] Contents:
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"I want to travel to Montreal"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'inspiration_agent'}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[root_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `poi_agent` with parameters: {'request': 'Montreal'}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `poi_agent` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': '', 'place_id': ''}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': '', 'place_id': ''}]}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `map_tool` with parameters: {'key': 'poi'}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `map_tool` tool returned result: {'places': [{'place_name': 'Old Montreal', 'address': 'Old Montreal, Quebec, Canada', 'lat': '45.5058', 'long': '-73.5552', 'review_ratings': '4.8', 'highlights': 'Historic district with cobblestone streets, old architecture, and charming boutiques.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/e/e0/Montreal_skyline_from_St._Lawrence_River.jpg/1920px-Montreal_skyline_from_St._Lawrence_River.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Notre-Dame Basilica of Montreal', 'address': '110 Notre-Dame St W, Montreal, Quebec H2Y 1T1, Canada', 'lat': '45.5085', 'long': '-73.5574', 'review_ratings': '4.7', 'highlights': 'Stunning Gothic Revival church with intricate interiors and a beautiful light show.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/c/c9/Montreal_-_Notre-Dame_Basilica_-_Interior.jpg/1920px-Montreal_-_Notre-Dame_Basilica_-_Interior.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Mount Royal Park', 'address': '1260 Remembrance Rd, Montreal, Quebec H3H 1A2, Canada', 'lat': '45.5039', 'long': '-73.5878', 'review_ratings': '4.8', 'highlights': 'Large urban park offering panoramic city views, walking trails, and recreational activities.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/2/29/Montreal_from_Mount_Royal_Park.jpg/1920px-Montreal_from_Mount_Royal_Park.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Plateau Mont-Royal', 'address': 'Plateau Mont-Royal, Montreal, Quebec, Canada', 'lat': '45.5250', 'long': '-73.5850', 'review_ratings': '4.7', 'highlights': 'Vibrant neighborhood known for its colorful Victorian houses, artistic murals, and lively cafes.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/0/07/St_Denis_street%2C_Plateau_Mont_Royal.jpg/1920px-St_Denis_street%2C_Plateau_Mont_Royal.jpg', 'map_url': None, 'place_id': None}, {'place_name': 'Jean-Talon Market', 'address': '7070 Henri Julien Ave, Montreal, Quebec H2S 3S3, Canada', 'lat': '45.5392', 'long': '-73.6136', 'review_ratings': '4.7', 'highlights': 'Bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.', 'image_url': 'https://upload.wikimedia.org/wikipedia/commons/thumb/8/87/Jean-Talon_Market_in_Montreal.jpg/1920px-Jean-Talon_Market_in_Montreal.jpg', 'map_url': None, 'place_id': None}]}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] said: Montreal sounds like a wonderful choice! Here are some of the top points of interest and activities you might enjoy there:\n\n*   **Old Montreal**: Explore the historic district with its cobblestone streets, old architecture, and charming boutiques.\n*   **Notre-Dame Basilica of Montreal**: Visit this stunning Gothic Revival church, known for its intricate interiors and beautiful light show.\n*   **Mount Royal Park**: Enjoy panoramic city views, walking trails, and various recreational activities in this large urban park.\n*   **Plateau Mont-Royal**: Discover a vibrant neighborhood characterized by colorful Victorian houses, artistic murals, and lively cafes.\n*   **Jean-Talon Market**: Immerse yourself in the bustling public market offering fresh local produce, artisanal foods, and a vibrant atmosphere.\n\nWould you like to know more about any of these places, or would you like me to help you plan your trip in more detail?"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"I want to travel from January 1st until January 6th 2026"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] called tool `transfer_to_agent` with parameters: {'agent_name': 'planning_agent'}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"text":"For context:"},{"text":"[inspiration_agent] `transfer_to_agent` tool returned result: {'result': None}"}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"thought_signature":"CqcDAVSoXO7G9n-NPqzWg_lpZJB8TnfOK95uyugUJzH0KtOVV3xgPxe0RZtlo1ShcdhRTrS1B39nMDkBREvHrmyoLiToh70aEqc3JSHLvhQCdvEY85B5CKEsrDirGAqGMfGwtNsbh9l5lI5_uyjZsIg8ofETgu82_lnBNAfWtddgB5BhG-PbNx6Nx4tVXWm2KIZl3XhOValjlW3QHB3r2Cdkms1ookp-W-hqallBvpna_pgKwShuYYlvnDA8E1BJTt3aEDfCdcxT0k6zUvW2EmqOzMB4OFhSkNMS5Qa3VDw-0LEDnW2uPvz9WeE8aaB0Jh8ThcGdxOmxTcK6qPPoT4ED-JT5VRSJI4L5hMNEpKf1gBvYL0AYBoHVq-uK-rvcL1dsOpsf4C7OtoqgSEoAofXGXl6tL1idev-zKKLGOc1YrCfuT1lwKkrvVwI10F3JrhuIY6qD6OuMJEtaxyZIRBVojxr95B9ieTITPJJs6bEHMK4agHmbaxQnsXq3lL1Fgx1Oy0KyZP8FN5matswVYdQX2VUhcMMw5onF8umErnC7CO9x0GR-Iv5p","function_call":{"args":{"key":"destination","value":"Montreal"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:08.247][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"destination\": \"Montreal\""}}}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"thought_signature":"Cp4BAVSoXO7JFJMmYZPyGc9wQgr1z96XEh5WBDQrrahRLKRkCvOBBkbunavtlTLLMNqFAdYW2V0XuXVe_RbrhuqpozxIQAgu4AOh1VOUKU68NPd5VdS4ltzAM_OZvf7s9EDIv1e7p01CJNLHJvsOCcSMWKLbW-lgWI0N1l1RLVs9KqZs_c6TCIx3jP8ylu0_Ta_vdputkUTrmDkYRdruvzA=","function_call":{"args":{"key":"start_date","value":"2026-01-01"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:08.247][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"start_date\": \"2026-01-01\""}}}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"thought_signature":"Cp0BAVSoXO51ujQdffzgKhpqoTo3ss-XBWXNt_zRHK3sI8_5IkN0L8Zy-VsqoHy_5SywfZtI7-l7u-Ikv7Q_0oV1VpoZw0AbctNNE8DPXvKb19WKTtT04-caZ405th1QkIWeqaSp321VIPyO2UGpdeyO6W0NeiucSfYMz0ybml8-UD44bIgVZ-Ybtv_sI-DzchgTVKRVXTDtO78w43Cjzw==","function_call":{"args":{"value":"2026-01-06","key":"end_date"},"name":"memorize"}}],"role":"model"}
[2025-08-21 16:16:08.247][E] {"parts":[{"function_response":{"name":"memorize","response":{"status":"Stored \"end_date\": \"2026-01-06\""}}}],"role":"user"}
[2025-08-21 16:16:08.247][E] {"parts":[{"thought_signature":"CrEDAVSoXO5uZkFfgDlIADCNTVg9krT38kptZC48id25EU6QrqTVN0fETxeZE9jkSZQJQiZ82d62l2JlAPTONy8E0T7hu5tksPK0WlTpgtbx8aSt2oC3hczl72wsPq3B4u87Smydc_u8fqz7nHLK189AYkdrg6DsbCuj-L_MfGqSb_80ovp3U7f3tmLBrrVQKbd8d-HJVoAaSDn5KOJ4pgZgeXGdKI_68ixEGZ9dfp_bpTS7qosN3x7Fh11Q5XOGlNxVgj05rogyRU28P0ME6_LZqoAZ3WYOwJNHrNDtsmXTLcXyiLo88EJC6Klz1-FlL27B_g7jwO5EAV8azfVmyYLoQW1bOLzXqwYATp3n-C6ERPMwnef17Kmbg74OtnJeDh-nKqFUZRQRKsECSsHyUd6GTSIS5WUpr_PiFn-eJn4Kquh5ig_6EcBCrY77J4jgOGwbU2tEO9s0Ptm13McwcGPhdfKerYCvRxrcMwUE-DtmBrDICz0Xsrge_kOqu7uyR3hmLeQmXEyGC_zer6IvinnfYDwKBXgsvuP93vUenxJIvgCDIpr1r8VQfgg2YbZCVxI_Cw==","function_call":{"args":{"request":"Find flights from San Diego (SAN) to Montreal (YUL) departing on 2026-01-01 and returning on 2026-01-06."},"name":"flight_search_agent"}}],"role":"model"}
[2025-08-21 16:16:08.247][E] {"parts":[{"function_response":{"name":"flight_search_agent","response":{"flights":[{"flight_number":"AC345","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T08:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T17:30:00"},"airlines":["Air Canada"],"airline_logo":"/images/airplane.png","price_in_usd":450,"number_of_stops":1},{"flight_number":"UA123","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T09:15:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T18:45:00"},"airlines":["United Airlines"],"airline_logo":"/images/united.png","price_in_usd":480,"number_of_stops":1},{"flight_number":"DL789","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T10:00:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T19:15:00"},"airlines":["Delta Airlines"],"airline_logo":"/images/delta1.jpg","price_in_usd":510,"number_of_stops":1},{"flight_number":"AA567","departure":{"city_name":"San Diego","airport_code":"SAN","timestamp":"2026-01-01T07:30:00"},"arrival":{"city_name":"Montreal","airport_code":"YUL","timestamp":"2026-01-01T16:45:00"},"airlines":["American Airlines"],"airline_logo":"/images/american.png","price_in_usd":475,"number_of_stops":1}]}}}],"role":"user"}
[2025-08-21 16:16:08.247][E] -----------------------------------------------------------
[2025-08-21 16:16:08.247][E] Functions:
[2025-08-21 16:16:08.247][E] transfer_to_agent: {'agent_name': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] flight_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] flight_seat_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] hotel_search_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] hotel_room_selection_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] itinerary_agent: {'request': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] memorize: {'key': {'type': <Type.STRING: 'STRING'>}, 'value': {'type': <Type.STRING: 'STRING'>}}
[2025-08-21 16:16:08.247][E] -----------------------------------------------------------
[2025-08-21 16:16:08.247][E] 
[2025-08-21 16:16:08.247][E] 2025-08-21 16:16:08,246 - INFO - models.py:7422 - AFC is enabled with max remote calls: 10.
[2025-08-21 16:16:08.248][E] 2025-08-21 16:16:08,248 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:08.248][E] 2025-08-21 16:16:08,248 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:08.248][E] 2025-08-21 16:16:08,248 - DEBUG - _trace.py:87 - connect_tcp.started host='generativelanguage.googleapis.com' port=443 local_address=None timeout=None socket_options=None
[2025-08-21 16:16:08.248][E] 2025-08-21 16:16:08,248 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:08.249][E] 2025-08-21 16:16:08,249 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:08.276][E] 2025-08-21 16:16:08,276 - DEBUG - _trace.py:87 - connect_tcp.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125e25130>
[2025-08-21 16:16:08.276][E] 2025-08-21 16:16:08,276 - DEBUG - _trace.py:87 - start_tls.started ssl_context=<ssl.SSLContext object at 0x125e77f50> server_hostname='generativelanguage.googleapis.com' timeout=None
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - start_tls.complete return_value=<httpcore._backends.anyio.AnyIOStream object at 0x125b57500>
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - send_request_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - send_request_headers.complete
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - send_request_body.started request=<Request [b'POST']>
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - send_request_body.complete
[2025-08-21 16:16:08.317][E] 2025-08-21 16:16:08,317 - DEBUG - _trace.py:87 - receive_response_headers.started request=<Request [b'POST']>
[2025-08-21 16:16:10.653][E] 2025-08-21 16:16:10,652 - DEBUG - _trace.py:87 - receive_response_headers.complete return_value=(b'HTTP/1.1', 200, b'OK', [(b'x-google-esf-cloud-client-params', b'backend_service_name: "generativelanguage.googleapis.com" backend_fully_qualified_method: "google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent"'), (b'X-Google-Session-Info', b'GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t'), (b'Content-Type', b'application/json; charset=UTF-8'), (b'X-Google-Security-Signals', b'FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'Vary', b'Origin'), (b'Vary', b'X-Origin'), (b'Vary', b'Referer'), (b'Content-Encoding', b'gzip'), (b'Date', b'Thu, 21 Aug 2025 14:16:10 GMT'), (b'Server', b'scaffolding on HTTPServer2'), (b'X-Google-Netmon-Label', b'/bns/we/borg/we/bns/genai-api/prod.genai-api/65'), (b'X-Google-Security-Signals', b'FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api'), (b'X-XSS-Protection', b'0'), (b'X-Frame-Options', b'SAMEORIGIN'), (b'X-Content-Type-Options', b'nosniff'), (b'Server-Timing', b'gfet4t7; dur=2219'), (b'X-Google-GFE-Service-Trace', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-Backends', b'unix:/tmp/esfbackend.1755768272.564040.2284221,/bns/we/borg/we/bns/genai-api/prod.genai-api/65,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/3'), (b'X-Google-GFE-Request-Trace', b'aczrhi7:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/65,aczrhi7:443'), (b'X-Google-DOS-Service-Trace', b'main:genai-api-api-prod,main:GLOBAL_all_non_cloud'), (b'X-Google-GFE-Handshake-Trace', b'GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/3,Mentat oracle: [2002:a05:600a:1e81:b0:384:5910:ba81]:9801'), (b'X-Google-Service', b'genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod'), (b'X-Google-GFE-Response-Code-Details-Trace', b'response_code_set_by_backend'), (b'X-Google-GFE-Response-Body-Transformations', b'chunked'), (b'X-Google-Shellfish-Status', b'CA0gBEBG'), (b'X-Google-GFE-Version', b'2.941.1'), (b'Alt-Svc', b'h3=":443"; ma=2592000,h3-29=":443"; ma=2592000'), (b'Transfer-Encoding', b'chunked')])
[2025-08-21 16:16:10.653][E] 2025-08-21 16:16:10,653 - INFO - _client.py:1740 - HTTP Request: POST https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent "HTTP/1.1 200 OK"
[2025-08-21 16:16:10.654][E] 2025-08-21 16:16:10,653 - DEBUG - _trace.py:87 - receive_response_body.started request=<Request [b'POST']>
[2025-08-21 16:16:10.654][E] 2025-08-21 16:16:10,654 - DEBUG - _trace.py:87 - receive_response_body.complete
[2025-08-21 16:16:10.654][E] 2025-08-21 16:16:10,654 - DEBUG - _trace.py:87 - response_closed.started
[2025-08-21 16:16:10.654][E] 2025-08-21 16:16:10,654 - DEBUG - _trace.py:87 - response_closed.complete
[2025-08-21 16:16:10.656][E] 2025-08-21 16:16:10,656 - INFO - google_llm.py:203 - Response received from the model.
[2025-08-21 16:16:10.656][E] 2025-08-21 16:16:10,656 - WARNING - types.py:5176 - Warning: there are non-text parts in the response: ['thought_signature'], returning concatenated text result from text parts. Check the full candidates.content.parts accessor to get the full model response.
[2025-08-21 16:16:10.656][E] 2025-08-21 16:16:10,656 - DEBUG - google_llm.py:204 -
[2025-08-21 16:16:10.656][E] LLM Response:
[2025-08-21 16:16:10.656][E] -----------------------------------------------------------
[2025-08-21 16:16:10.656][E] Text:
[2025-08-21 16:16:10.656][E] Here are some flight options for your outbound journey to Montreal on January 1st, 2026:
[2025-08-21 16:16:10.656][E] 
[2025-08-21 16:16:10.656][E] *   **Air Canada (AC345)**: Departs San Diego at 08:00, arrives in Montreal at 17:30. Price: $450.
[2025-08-21 16:16:10.656][E] *   **United Airlines (UA123)**: Departs San Diego at 09:15, arrives in Montreal at 18:45. Price: $480.
[2025-08-21 16:16:10.656][E] *   **Delta Airlines (DL789)**: Departs San Diego at 10:00, arrives in Montreal at 19:15. Price: $510.
[2025-08-21 16:16:10.656][E] *   **American Airlines (AA567)**: Departs San Diego at 07:30, arrives in Montreal at 16:45. Price: $475.
[2025-08-21 16:16:10.656][E] 
[2025-08-21 16:16:10.656][E] Please let me know which outbound flight you would like to select.
[2025-08-21 16:16:10.656][E] -----------------------------------------------------------
[2025-08-21 16:16:10.656][E] Function calls:
[2025-08-21 16:16:10.656][E] 
[2025-08-21 16:16:10.656][E] -----------------------------------------------------------
[2025-08-21 16:16:10.656][E] Raw response:
[2025-08-21 16:16:10.657][E] {"sdk_http_response":{"headers":{"x-google-esf-cloud-client-params":"backend_service_name: \"generativelanguage.googleapis.com\" backend_fully_qualified_method: \"google.ai.generativelanguage.v1beta.GenerativeService.GenerateContent\"","x-google-session-info":"GgQYECgLIAE6IxIhZ2VuZXJhdGl2ZWxhbmd1YWdlLmdvb2dsZWFwaXMuY29t","content-type":"application/json; charset=UTF-8","x-google-security-signals":"FRAMEWORK=ONE_PLATFORM,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api, FRAMEWORK=HTTPSERVER2,BUILD=GOOGLE3,BUILD_DEBUG=cl:767553382,ENV=borg,ENV_DEBUG=borg_user:genai-api;borg_job:prod.genai-api","vary":"Origin, X-Origin, Referer","content-encoding":"gzip","date":"Thu, 21 Aug 2025 14:16:10 GMT","server":"scaffolding on HTTPServer2","x-google-netmon-label":"/bns/we/borg/we/bns/genai-api/prod.genai-api/65","x-xss-protection":"0","x-frame-options":"SAMEORIGIN","x-content-type-options":"nosniff","server-timing":"gfet4t7; dur=2219","x-google-gfe-service-trace":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-backends":"unix:/tmp/esfbackend.1755768272.564040.2284221,/bns/we/borg/we/bns/genai-api/prod.genai-api/65,/bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/3","x-google-gfe-request-trace":"aczrhi7:443,/bns/we/borg/we/bns/genai-api/prod.genai-api/65,aczrhi7:443","x-google-dos-service-trace":"main:genai-api-api-prod,main:GLOBAL_all_non_cloud","x-google-gfe-handshake-trace":"GFE: /bns/pnzrha/borg/pnzrha/bns/blue-layer1-gfe-prod-edge/prod.blue-layer1-gfe.zrh04s16/3,Mentat oracle: [2002:a05:600a:1e81:b0:384:5910:ba81]:9801","x-google-service":"genai-api-api-prod/gfespec_googleapis-generativelanguage_generativelanguage-url-map-global_generativelanguage-genai-api-api-prod","x-google-gfe-response-code-details-trace":"response_code_set_by_backend","x-google-gfe-response-body-transformations":"chunked","x-google-shellfish-status":"CA0gBEBG","x-google-gfe-version":"2.941.1","alt-svc":"h3=\":443\"; ma=2592000,h3-29=\":443\"; ma=2592000","transfer-encoding":"chunked"}},"candidates":[{"content":{"parts":[{"thought_signature":"CqMFAVSoXO6aMhhOyoX6L4dJiRchCWLRFl-jcDc6wVH5_Nmp_eBgNlhUgJ4K8RdKrOnBRJkg5CYVMdLlOdm3yqHDZ-vxbP7AidQw348zuKsZdvotpih0YO68fER4Ovay9RYwd3jil4-6Qyl9GjIU-0SsIWGpazCeBefSkqfJ4ZIzri3_aZwTgO6OnKT23Qs1Nd9t012ChJjsW5w1mcvll83At_azm154nrE4yjZ-2W2XWizIEhxVSDLBQL4A9ShGfZDN7PW46YCQlBgI6NZ_JmbVGNmXtvzAQkf7OLbzcX68mdqKjwC5lV1hreUbi32ovxu3G6idqApt6YBUx29G0IH93XIGxoCJp8j9BILDxI2BuwhBy7QOIaGm7cdZh8tpnRZjQy9Dc5AtqEPQkg_lTzYnBZDwR33x53wNGe_UfckvtFeuusljWxu-7kt32zFfCInbZ10ChfL0MuhNbeaxSmKMvamyqMSqDj5oE0URW28DGpMsSQ1TVITPfhkXP4HNNG6aEV_h0_uKlTl18NtMF088rFl-0Lfy4LT5aX8X9HgnzfOyagp_cpfiOd7iomsooGW6wLjoxrLl5XDZplmj2ndtB2HDOXp3uFCYCQQLFAu4ksfKtnLGUl-XeYvnMxCYBSUv7TEEhaQ6N86qYDzAu6Nw7N-naNI9AcOzcoHJ9H8e-n4bTC9WE-GleJU3PnMjyEdhi-lTZyWvmzgBO4aCGhX3vTiD9tbm-LFhyBT7Bhu2j2bWwe4txi93quwizO91q_zY1tyWyUYUE8ZGMzmFujhXHI9FJMuTUjCaTvufkN0QcSn9yshbikQCDnl3aeR3JmayhQIZY62ezgozIE2ZRLuDE_dDNERzc1ymZwzlojMVHlrOoK4qhLPa8JcJE7t1TezoTGUU","text":"Here are some flight options for your outbound journey to Montreal on January 1st, 2026:\n\n*   **Air Canada (AC345)**: Departs San Diego at 08:00, arrives in Montreal at 17:30. Price: $450.\n*   **United Airlines (UA123)**: Departs San Diego at 09:15, arrives in Montreal at 18:45. Price: $480.\n*   **Delta Airlines (DL789)**: Departs San Diego at 10:00, arrives in Montreal at 19:15. Price: $510.\n*   **American Airlines (AA567)**: Departs San Diego at 07:30, arrives in Montreal at 16:45. Price: $475.\n\nPlease let me know which outbound flight you would like to select."}],"role":"model"},"finish_reason":"STOP","index":0}],"model_version":"gemini-2.5-flash","usage_metadata":{"candidates_token_count":209,"prompt_token_count":6258,"prompt_tokens_details":[{"modality":"TEXT","token_count":6258}],"thoughts_token_count":243,"total_token_count":6710},"automatic_function_calling_history":[]}
[2025-08-21 16:16:10.657][E] -----------------------------------------------------------
[2025-08-21 16:16:10.657][E] 
[2025-08-21 16:16:10.657][E] 2025-08-21 16:16:10,657 - DEBUG - llm_agent.py:447 - Skipping output save for agent inspiration_agent: event authored by planning_agent
[2025-08-21 16:16:10.657][E] 2025-08-21 16:16:10,657 - DEBUG - adk_web_server.py:852 - Generated event in agent run streaming: {"content":{"parts":[{"thoughtSignature":"CqMFAVSoXO6aMhhOyoX6L4dJiRchCWLRFl-jcDc6wVH5_Nmp_eBgNlhUgJ4K8RdKrOnBRJkg5CYVMdLlOdm3yqHDZ-vxbP7AidQw348zuKsZdvotpih0YO68fER4Ovay9RYwd3jil4-6Qyl9GjIU-0SsIWGpazCeBefSkqfJ4ZIzri3_aZwTgO6OnKT23Qs1Nd9t012ChJjsW5w1mcvll83At_azm154nrE4yjZ-2W2XWizIEhxVSDLBQL4A9ShGfZDN7PW46YCQlBgI6NZ_JmbVGNmXtvzAQkf7OLbzcX68mdqKjwC5lV1hreUbi32ovxu3G6idqApt6YBUx29G0IH93XIGxoCJp8j9BILDxI2BuwhBy7QOIaGm7cdZh8tpnRZjQy9Dc5AtqEPQkg_lTzYnBZDwR33x53wNGe_UfckvtFeuusljWxu-7kt32zFfCInbZ10ChfL0MuhNbeaxSmKMvamyqMSqDj5oE0URW28DGpMsSQ1TVITPfhkXP4HNNG6aEV_h0_uKlTl18NtMF088rFl-0Lfy4LT5aX8X9HgnzfOyagp_cpfiOd7iomsooGW6wLjoxrLl5XDZplmj2ndtB2HDOXp3uFCYCQQLFAu4ksfKtnLGUl-XeYvnMxCYBSUv7TEEhaQ6N86qYDzAu6Nw7N-naNI9AcOzcoHJ9H8e-n4bTC9WE-GleJU3PnMjyEdhi-lTZyWvmzgBO4aCGhX3vTiD9tbm-LFhyBT7Bhu2j2bWwe4txi93quwizO91q_zY1tyWyUYUE8ZGMzmFujhXHI9FJMuTUjCaTvufkN0QcSn9yshbikQCDnl3aeR3JmayhQIZY62ezgozIE2ZRLuDE_dDNERzc1ymZwzlojMVHlrOoK4qhLPa8JcJE7t1TezoTGUU","text":"Here are some flight options for your outbound journey to Montreal on January 1st, 2026:\n\n*   **Air Canada (AC345)**: Departs San Diego at 08:00, arrives in Montreal at 17:30. Price: $450.\n*   **United Airlines (UA123)**: Departs San Diego at 09:15, arrives in Montreal at 18:45. Price: $480.\n*   **Delta Airlines (DL789)**: Departs San Diego at 10:00, arrives in Montreal at 19:15. Price: $510.\n*   **American Airlines (AA567)**: Departs San Diego at 07:30, arrives in Montreal at 16:45. Price: $475.\n\nPlease let me know which outbound flight you would like to select."}],"role":"model"},"usageMetadata":{"candidatesTokenCount":209,"promptTokenCount":6258,"promptTokensDetails":[{"modality":"TEXT","tokenCount":6258}],"thoughtsTokenCount":243,"totalTokenCount":6710},"invocationId":"e-acdc85b1-2728-465f-9a26-29fc31e95dc5","author":"planning_agent","actions":{"stateDelta":{},"artifactDelta":{},"requestedAuthConfigs":{}},"id":"dec978a0-f291-409d-8a2e-453eddf16808","timestamp":1755785768.205678}
[2025-08-21 16:16:10.663][E] 2025-08-21 16:16:10,663 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:10.663][E] 2025-08-21 16:16:10,663 - DEBUG - _trace.py:87 - close.started
[2025-08-21 16:16:10.663][E] 2025-08-21 16:16:10,663 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:16:10.663][E] 2025-08-21 16:16:10,663 - DEBUG - _trace.py:87 - close.complete
[2025-08-21 16:38:31.191][E] INFO:     Shutting down
[2025-08-21 16:38:31.293][E] INFO:     Waiting for application shutdown.
[2025-08-21 16:38:31.293][E] INFO:     Application shutdown complete.
[2025-08-21 16:38:31.293][E] INFO:     Finished server process [64214]
[2025-08-21 16:38:31.294][E] 
[2025-08-21 16:38:31.294][E] Aborted!
